

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 21 23:46:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18LF25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18LF25K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     _SP1BRGH	set	3996
    93   000000                     _TX1STA	set	3998
    94   000000                     _T0CON0	set	4053
    95   000000                     _IOCCPbits	set	3868
    96   000000                     _IOCCNbits	set	3867
    97   000000                     _IOCCFbits	set	3866
    98   000000                     _INLVLC	set	3869
    99   000000                     _SLRCONC	set	3870
   100   000000                     _ODCONC	set	3871
   101   000000                     _WPUC	set	3872
   102   000000                     _OSCTUNE	set	3805
   103   000000                     _OSCFRQ	set	3806
   104                           
   105                           	psect	nvCOMRAM
   106   000022                     __pnvCOMRAM:
   107                           	callstack 0
   108   000022                     _EUSART_ErrorHandler:
   109                           	callstack 0
   110   000022                     	ds	2
   111   000024                     _EUSART_OverrunErrorHandler:
   112                           	callstack 0
   113   000024                     	ds	2
   114   000026                     _EUSART_FramingErrorHandler:
   115                           	callstack 0
   116   000026                     	ds	2
   117   000028                     _TMR0_InterruptHandler:
   118                           	callstack 0
   119   000028                     	ds	2
   120   00002A                     _EUSART_RxDefaultInterruptHandler:
   121                           	callstack 0
   122   00002A                     	ds	2
   123   00002C                     _EUSART_TxDefaultInterruptHandler:
   124                           	callstack 0
   125   00002C                     	ds	2
   126   00002E                     _IOCCF5_InterruptHandler:
   127                           	callstack 0
   128   00002E                     	ds	2
   129   000030                     _IOCCF2_InterruptHandler:
   130                           	callstack 0
   131   000030                     	ds	2
   132   000000                     _RC1STAbits	set	3997
   133   000000                     _TX1STAbits	set	3998
   134   000000                     _TRISCbits	set	3978
   135   000000                     _T0CON0bits	set	4053
   136   000000                     _LATCbits	set	3973
   137   000000                     _RXPPS	set	3765
   138   000000                     _PIE0bits	set	3778
   139   000000                     _OSCCON1	set	3800
   140   000000                     _OSCCON3	set	3802
   141   000000                     _OSCEN	set	3804
   142   000000                     _PMD0	set	3809
   143   000000                     _RC6PPS	set	3837
   144   000000                     _INLVLA	set	3853
   145   000000                     _SLRCONA	set	3854
   146   000000                     _ODCONA	set	3855
   147   000000                     _WPUA	set	3856
   148   000000                     _ANSELA	set	3857
   149   000000                     _ANSELB	set	3865
   150   000000                     _ANSELC	set	3873
   151   000000                     _LATA	set	3971
   152   000000                     _PMD5	set	3814
   153   000000                     _PMD4	set	3813
   154   000000                     _PMD3	set	3812
   155   000000                     _PMD2	set	3811
   156   000000                     _PMD1	set	3810
   157   000000                     _TRISA	set	3976
   158   000000                     _LATC	set	3973
   159   000000                     _LATB	set	3972
   160   000000                     _RC1REG	set	3993
   161   000000                     _TX1REG	set	3994
   162   000000                     _SP1BRGL	set	3995
   163   000000                     _RC1STA	set	3997
   164   000000                     _BAUD1CON	set	3999
   165   000000                     _TMR0L	set	4051
   166   000000                     _TMR0H	set	4052
   167   000000                     _T0CON1	set	4054
   168   000000                     _INTCONbits	set	4082
   169   000000                     _TRISC	set	3978
   170   000000                     _TRISB	set	3977
   171   000000                     _INLVLE	set	3882
   172   000000                     _WPUE	set	3885
   173   000000                     _INLVLB	set	3861
   174   000000                     _SLRCONB	set	3862
   175   000000                     _ODCONB	set	3863
   176   000000                     _WPUB	set	3864
   177   000000                     _PIE3bits	set	3781
   178   000000                     _PIR0bits	set	3786
   179   000000                     _PIR3bits	set	3789
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   000E34                     __pcinit:
   185                           	callstack 0
   186   000E34                     start_initialization:
   187                           	callstack 0
   188   000E34                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Clear objects allocated to COMRAM (33 bytes)
   192   000E34  EE00  F001         	lfsr	0,__pbssCOMRAM
   193   000E38  0E21               	movlw	33
   194   000E3A                     clear_0:
   195   000E3A  6AEE               	clrf	postinc0,c
   196   000E3C  06E8               	decf	wreg,f,c
   197   000E3E  E1FD               	bnz	clear_0
   198   000E40                     end_of_initialization:
   199                           	callstack 0
   200   000E40                     __end_of__initialization:
   201                           	callstack 0
   202   000E40  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   203   000E42  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   204   000E44  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205   000E46  6EF8               	movwf	tblptru,c
   206   000E48  0100               	movlb	0
   207   000E4A  EFCB  F004         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMRAM
   210   000001                     __pbssCOMRAM:
   211                           	callstack 0
   212   000001                     _eusartRxStatusBuffer:
   213                           	callstack 0
   214   000001                     	ds	8
   215   000009                     _eusartRxBuffer:
   216                           	callstack 0
   217   000009                     	ds	8
   218   000011                     _eusartTxBuffer:
   219                           	callstack 0
   220   000011                     	ds	8
   221   000019                     _eusartRxLastError:
   222                           	callstack 0
   223   000019                     	ds	1
   224   00001A                     _eusartRxCount:
   225                           	callstack 0
   226   00001A                     	ds	1
   227   00001B                     _eusartRxTail:
   228                           	callstack 0
   229   00001B                     	ds	1
   230   00001C                     _eusartRxHead:
   231                           	callstack 0
   232   00001C                     	ds	1
   233   00001D                     _eusartTxBufferRemaining:
   234                           	callstack 0
   235   00001D                     	ds	1
   236   00001E                     _eusartTxTail:
   237                           	callstack 0
   238   00001E                     	ds	1
   239   00001F                     _eusartTxHead:
   240                           	callstack 0
   241   00001F                     	ds	1
   242   000020                     _sensorDebounce:
   243                           	callstack 0
   244   000020                     	ds	1
   245   000021                     _mainFlags:
   246                           	callstack 0
   247   000021                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000032                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000032                     ??_INTERRUPT_InterruptManager:
   253   000032                     
   254                           ; 1 bytes @ 0x0
   255   000032                     	ds	4
   256   000036                     EUSART_Read@readValue:
   257                           	callstack 0
   258   000036                     EUSART_Write@txData:
   259                           	callstack 0
   260   000036                     IOCCF2_SetInterruptHandler@InterruptHandler:
   261                           	callstack 0
   262   000036                     IOCCF5_SetInterruptHandler@InterruptHandler:
   263                           	callstack 0
   264   000036                     TMR0_SetInterruptHandler@InterruptHandler:
   265                           	callstack 0
   266   000036                     EUSART_SetFramingErrorHandler@interruptHandler:
   267                           	callstack 0
   268   000036                     EUSART_SetOverrunErrorHandler@interruptHandler:
   269                           	callstack 0
   270   000036                     EUSART_SetErrorHandler@interruptHandler:
   271                           	callstack 0
   272   000036                     EUSART_SetTxInterruptHandler@interruptHandler:
   273                           	callstack 0
   274   000036                     EUSART_SetRxInterruptHandler@interruptHandler:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x4
   278   000036                     	ds	1
   279   000037                     ??_Recieve_ArmData:
   280   000037                     
   281                           ; 1 bytes @ 0x5
   282   000037                     	ds	1
   283   000038                     
   284                           ; 1 bytes @ 0x6
   285   000038                     	ds	1
   286   000039                     Recieve_ArmData@msgBuff:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x7
   290   000039                     	ds	4
   291   00003D                     Recieve_ArmData@i:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xB
   295   00003D                     	ds	2
   296   00003F                     Recieve_ArmData@j:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xD
   300   00003F                     	ds	2
   301   000041                     
   302                           ; 1 bytes @ 0xF
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 51 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   322 ;;      Params:         0       0       0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels required when called: 8
   328 ;; This function calls:
   329 ;;		_Arm_System
   330 ;;		_Disarm_System
   331 ;;		_Recieve_ArmData
   332 ;;		_SYSTEM_Initialize
   333 ;;		_Transmit_MotionData
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text0
   340   000996                     __ptext0:
   341                           	callstack 0
   342   000996                     _main:
   343                           	callstack 23
   344   000996                     
   345                           ;main.c: 54:     SYSTEM_Initialize();
   346   000996  EC27  F007         	call	_SYSTEM_Initialize	;wreg free
   347   00099A                     
   348                           ;main.c: 61:     (INTCONbits.GIE = 1);
   349   00099A  8EF2               	bsf	242,7,c	;volatile
   350   00099C                     
   351                           ;main.c: 67:     (INTCONbits.PEIE = 1);
   352   00099C  8CF2               	bsf	242,6,c	;volatile
   353   00099E                     
   354                           ;main.c: 75:     mainFlags.SystemDisarmed = 0;
   355   00099E  9221               	bcf	_mainFlags^0,1,c
   356   0009A0                     
   357                           ;main.c: 76:     mainFlags.SystemArmed = 1;
   358   0009A0  8021               	bsf	_mainFlags^0,0,c
   359   0009A2                     l1909:
   360                           
   361                           ;main.c: 79:     {;main.c: 80:         if(mainFlags.System_BluetoothReceive) Recieve_Arm
      +                          Data();
   362   0009A2  A821               	btfss	_mainFlags^0,4,c
   363   0009A4  EFD6  F004         	goto	u1121
   364   0009A8  EFD8  F004         	goto	u1120
   365   0009AC                     u1121:
   366   0009AC  EFDA  F004         	goto	l1913
   367   0009B0                     u1120:
   368   0009B0  EC01  F004         	call	_Recieve_ArmData	;wreg free
   369   0009B4                     l1913:
   370                           
   371                           ;main.c: 81:         if(mainFlags.SystemDisarmed) Disarm_System();
   372   0009B4  A221               	btfss	_mainFlags^0,1,c
   373   0009B6  EFDF  F004         	goto	u1131
   374   0009BA  EFE1  F004         	goto	u1130
   375   0009BE                     u1131:
   376   0009BE  EFE3  F004         	goto	l1917
   377   0009C2                     u1130:
   378   0009C2  EC55  F007         	call	_Disarm_System	;wreg free
   379   0009C6                     l1917:
   380                           
   381                           ;main.c: 82:         if(mainFlags.SystemArmed) Arm_System();
   382   0009C6  A021               	btfss	_mainFlags^0,0,c
   383   0009C8  EFE8  F004         	goto	u1141
   384   0009CC  EFEA  F004         	goto	u1140
   385   0009D0                     u1141:
   386   0009D0  EFEC  F004         	goto	l1921
   387   0009D4                     u1140:
   388   0009D4  EC5F  F007         	call	_Arm_System	;wreg free
   389   0009D8                     l1921:
   390                           
   391                           ;main.c: 83:         if(mainFlags.System_MotionFlag) Transmit_MotionData();
   392   0009D8  A621               	btfss	_mainFlags^0,3,c
   393   0009DA  EFF1  F004         	goto	u1151
   394   0009DE  EFF3  F004         	goto	u1150
   395   0009E2                     u1151:
   396   0009E2  EFF5  F004         	goto	l1925
   397   0009E6                     u1150:
   398   0009E6  ECE8  F006         	call	_Transmit_MotionData	;wreg free
   399   0009EA                     l1925:
   400                           
   401                           ;main.c: 85:         if(((IOCCFbits.IOCCF2 == 0) && (T0CON0bits.T0EN == 0)
   402   0009EA  010F               	movlb	15	; () banked
   403   0009EC  B51A               	btfsc	26,2,b	;volatile
   404   0009EE  EFFB  F004         	goto	u1161
   405   0009F2  EFFD  F004         	goto	u1160
   406   0009F6                     u1161:
   407   0009F6  EF13  F005         	goto	l290
   408   0009FA                     u1160:
   409   0009FA                     
   410                           ; BSR set to: 15
   411   0009FA  BED5               	btfsc	213,7,c	;volatile
   412   0009FC  EF02  F005         	goto	u1171
   413   000A00  EF04  F005         	goto	u1170
   414   000A04                     u1171:
   415   000A04  EF13  F005         	goto	l290
   416   000A08                     u1170:
   417   000A08                     
   418                           ; BSR set to: 15
   419   000A08  010E               	movlb	14	; () banked
   420   000A0A  BBCD               	btfsc	205,5,b	;volatile
   421   000A0C  EF0A  F005         	goto	u1181
   422   000A10  EF0C  F005         	goto	u1180
   423   000A14                     u1181:
   424   000A14  EF13  F005         	goto	l290
   425   000A18                     u1180:
   426   000A18                     
   427                           ; BSR set to: 14
   428   000A18  B9CD               	btfsc	205,4,b	;volatile
   429   000A1A  EF11  F005         	goto	u1191
   430   000A1E  EF13  F005         	goto	u1190
   431   000A22                     u1191:
   432   000A22  EF1A  F005         	goto	l288
   433   000A26                     u1190:
   434   000A26                     l290:
   435   000A26  A421               	btfss	_mainFlags^0,2,c
   436   000A28  EF18  F005         	goto	u1201
   437   000A2C  EF1A  F005         	goto	u1200
   438   000A30                     u1201:
   439   000A30  EFD1  F004         	goto	l1909
   440   000A34                     u1200:
   441   000A34                     l288:
   442   000A34  0003               	sleep		;# 
   443                           
   444                           ;main.c: 91:             __nop();
   445   000A36  0000               	nop	
   446                           
   447                           ;main.c: 92:             __nop();
   448   000A38  0000               	nop	
   449   000A3A  EFD1  F004         	goto	l1909
   450   000A3E  EF7D  F000         	goto	start
   451   000A42                     __end_of_main:
   452                           	callstack 0
   453                           
   454 ;; *************** function _Transmit_MotionData *****************
   455 ;; Defined at:
   456 ;;		line 32 in file "system_core.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         0       0       0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 6
   477 ;; This function calls:
   478 ;;		_EUSART_Write
   479 ;;		_EUSART_is_tx_done
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text1
   486   000DD0                     __ptext1:
   487                           	callstack 0
   488   000DD0                     _Transmit_MotionData:
   489                           	callstack 24
   490   000DD0                     
   491                           ;system_core.c: 34:     EUSART_Write(0x4D);
   492   000DD0  0E4D               	movlw	77
   493   000DD2  ECF3  F005         	call	_EUSART_Write
   494                           
   495                           ;system_core.c: 35:     EUSART_Write(0x44);
   496   000DD6  0E44               	movlw	68
   497   000DD8  ECF3  F005         	call	_EUSART_Write
   498   000DDC                     
   499                           ;system_core.c: 37:     mainFlags.System_MotionFlag = 0;
   500   000DDC  9621               	bcf	_mainFlags^0,3,c
   501   000DDE                     l1845:
   502   000DDE  EC4B  F007         	call	_EUSART_is_tx_done	;wreg free
   503   000DE2  0900               	iorlw	0
   504   000DE4  B4D8               	btfsc	status,2,c
   505   000DE6  EFF7  F006         	goto	u921
   506   000DEA  EFF9  F006         	goto	u920
   507   000DEE                     u921:
   508   000DEE  EFEF  F006         	goto	l1845
   509   000DF2                     u920:
   510   000DF2  0012               	return		;funcret
   511   000DF4                     __end_of_Transmit_MotionData:
   512                           	callstack 0
   513                           
   514 ;; *************** function _SYSTEM_Initialize *****************
   515 ;; Defined at:
   516 ;;		line 50 in file "mcc_generated_files/mcc.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 7
   537 ;; This function calls:
   538 ;;		_EUSART_Initialize
   539 ;;		_INTERRUPT_Initialize
   540 ;;		_OSCILLATOR_Initialize
   541 ;;		_PIN_MANAGER_Initialize
   542 ;;		_PMD_Initialize
   543 ;;		_TMR0_Initialize
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550   000E4E                     __ptext2:
   551                           	callstack 0
   552   000E4E                     _SYSTEM_Initialize:
   553                           	callstack 23
   554   000E4E                     
   555                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   556   000E4E  ECA0  F007         	call	_INTERRUPT_Initialize	;wreg free
   557   000E52                     
   558                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   559   000E52  EC0C  F007         	call	_PMD_Initialize	;wreg free
   560   000E56                     
   561                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   562   000E56  EC76  F005         	call	_PIN_MANAGER_Initialize	;wreg free
   563   000E5A                     
   564                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   565   000E5A  EC34  F007         	call	_OSCILLATOR_Initialize	;wreg free
   566   000E5E                     
   567                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   568   000E5E  ECFA  F006         	call	_TMR0_Initialize	;wreg free
   569   000E62                     
   570                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
   571   000E62  ECB6  F005         	call	_EUSART_Initialize	;wreg free
   572   000E66  0012               	return		;funcret
   573   000E68                     __end_of_SYSTEM_Initialize:
   574                           	callstack 0
   575                           
   576 ;; *************** function _TMR0_Initialize *****************
   577 ;; Defined at:
   578 ;;		line 62 in file "mcc_generated_files/tmr0.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 6
   599 ;; This function calls:
   600 ;;		_TMR0_SetInterruptHandler
   601 ;; This function is called by:
   602 ;;		_SYSTEM_Initialize
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text3
   607   000DF4                     __ptext3:
   608                           	callstack 0
   609   000DF4                     _TMR0_Initialize:
   610                           	callstack 23
   611   000DF4                     
   612                           ;mcc_generated_files/tmr0.c: 67:     T0CON1 = 0x6F;
   613   000DF4  0E6F               	movlw	111
   614   000DF6  6ED6               	movwf	214,c	;volatile
   615                           
   616                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0xF3;
   617   000DF8  0EF3               	movlw	243
   618   000DFA  6ED4               	movwf	212,c	;volatile
   619                           
   620                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0x00;
   621   000DFC  0E00               	movlw	0
   622   000DFE  6ED3               	movwf	211,c	;volatile
   623   000E00                     
   624                           ;mcc_generated_files/tmr0.c: 76:     PIR0bits.TMR0IF = 0;
   625   000E00  010E               	movlb	14	; () banked
   626   000E02  9BCA               	bcf	202,5,b	;volatile
   627   000E04                     
   628                           ; BSR set to: 14
   629                           ;mcc_generated_files/tmr0.c: 79:     PIE0bits.TMR0IE = 1;
   630   000E04  8BC2               	bsf	194,5,b	;volatile
   631   000E06                     
   632                           ; BSR set to: 14
   633                           ;mcc_generated_files/tmr0.c: 82:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   634   000E06  0ECE               	movlw	low _TMR0_DefaultInterruptHandler
   635   000E08  6E36               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   636   000E0A  0E0E               	movlw	high _TMR0_DefaultInterruptHandler
   637   000E0C  6E37               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   638   000E0E  EC6D  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   639   000E12                     
   640                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x80;
   641   000E12  0E80               	movlw	128
   642   000E14  6ED5               	movwf	213,c	;volatile
   643   000E16  0012               	return		;funcret
   644   000E18                     __end_of_TMR0_Initialize:
   645                           	callstack 0
   646                           
   647 ;; *************** function _TMR0_SetInterruptHandler *****************
   648 ;; Defined at:
   649 ;;		line 143 in file "mcc_generated_files/tmr0.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   652 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         2       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 5
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_TMR0_Initialize
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text4
   679   000EDA                     __ptext4:
   680                           	callstack 0
   681   000EDA                     _TMR0_SetInterruptHandler:
   682                           	callstack 23
   683   000EDA                     
   684                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
   685   000EDA  C036  F028         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   686   000EDE  C037  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   687   000EE2  0012               	return		;funcret
   688   000EE4                     __end_of_TMR0_SetInterruptHandler:
   689                           	callstack 0
   690                           
   691 ;; *************** function _PMD_Initialize *****************
   692 ;; Defined at:
   693 ;;		line 74 in file "mcc_generated_files/mcc.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 5
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_SYSTEM_Initialize
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text5
   722   000E18                     __ptext5:
   723                           	callstack 0
   724   000E18                     _PMD_Initialize:
   725                           	callstack 24
   726   000E18                     
   727                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   728   000E18  0E00               	movlw	0
   729   000E1A  010E               	movlb	14	; () banked
   730   000E1C  6FE1               	movwf	225,b	;volatile
   731                           
   732                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x7E;
   733   000E1E  0E7E               	movlw	126
   734   000E20  6FE2               	movwf	226,b	;volatile
   735                           
   736                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x66;
   737   000E22  0E66               	movlw	102
   738   000E24  6FE3               	movwf	227,b	;volatile
   739                           
   740                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x0F;
   741   000E26  0E0F               	movlw	15
   742   000E28  6FE4               	movwf	228,b	;volatile
   743                           
   744                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x11;
   745   000E2A  0E11               	movlw	17
   746   000E2C  6FE5               	movwf	229,b	;volatile
   747                           
   748                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   749   000E2E  0E00               	movlw	0
   750   000E30  6FE6               	movwf	230,b	;volatile
   751   000E32                     
   752                           ; BSR set to: 14
   753   000E32  0012               	return		;funcret
   754   000E34                     __end_of_PMD_Initialize:
   755                           	callstack 0
   756                           
   757 ;; *************** function _PIN_MANAGER_Initialize *****************
   758 ;; Defined at:
   759 ;;		line 61 in file "mcc_generated_files/pin_manager.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 6
   780 ;; This function calls:
   781 ;;		_IOCCF2_SetInterruptHandler
   782 ;;		_IOCCF5_SetInterruptHandler
   783 ;; This function is called by:
   784 ;;		_SYSTEM_Initialize
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text6
   789   000AEC                     __ptext6:
   790                           	callstack 0
   791   000AEC                     _PIN_MANAGER_Initialize:
   792                           	callstack 23
   793   000AEC                     
   794                           ;mcc_generated_files/pin_manager.c: 66:     LATA = 0x00;
   795   000AEC  0E00               	movlw	0
   796   000AEE  6E83               	movwf	131,c	;volatile
   797                           
   798                           ;mcc_generated_files/pin_manager.c: 67:     LATB = 0x00;
   799   000AF0  0E00               	movlw	0
   800   000AF2  6E84               	movwf	132,c	;volatile
   801                           
   802                           ;mcc_generated_files/pin_manager.c: 68:     LATC = 0x00;
   803   000AF4  0E00               	movlw	0
   804   000AF6  6E85               	movwf	133,c	;volatile
   805                           
   806                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0x00;
   807   000AF8  0E00               	movlw	0
   808   000AFA  6E88               	movwf	136,c	;volatile
   809                           
   810                           ;mcc_generated_files/pin_manager.c: 74:     TRISB = 0xC0;
   811   000AFC  0EC0               	movlw	192
   812   000AFE  6E89               	movwf	137,c	;volatile
   813                           
   814                           ;mcc_generated_files/pin_manager.c: 75:     TRISC = 0xA4;
   815   000B00  0EA4               	movlw	164
   816   000B02  6E8A               	movwf	138,c	;volatile
   817                           
   818                           ;mcc_generated_files/pin_manager.c: 80:     ANSELC = 0x53;
   819   000B04  0E53               	movlw	83
   820   000B06  010F               	movlb	15	; () banked
   821   000B08  6F21               	movwf	33,b	;volatile
   822   000B0A                     
   823                           ; BSR set to: 15
   824                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0xFF;
   825   000B0A  6919               	setf	25,b	;volatile
   826   000B0C                     
   827                           ; BSR set to: 15
   828                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
   829   000B0C  6911               	setf	17,b	;volatile
   830                           
   831                           ;mcc_generated_files/pin_manager.c: 87:     WPUE = 0x00;
   832   000B0E  0E00               	movlw	0
   833   000B10  6F2D               	movwf	45,b	;volatile
   834                           
   835                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x00;
   836   000B12  0E00               	movlw	0
   837   000B14  6F18               	movwf	24,b	;volatile
   838                           
   839                           ;mcc_generated_files/pin_manager.c: 89:     WPUA = 0x00;
   840   000B16  0E00               	movlw	0
   841   000B18  6F10               	movwf	16,b	;volatile
   842                           
   843                           ;mcc_generated_files/pin_manager.c: 90:     WPUC = 0x00;
   844   000B1A  0E00               	movlw	0
   845   000B1C  6F20               	movwf	32,b	;volatile
   846                           
   847                           ;mcc_generated_files/pin_manager.c: 95:     ODCONA = 0x00;
   848   000B1E  0E00               	movlw	0
   849   000B20  6F0F               	movwf	15,b	;volatile
   850                           
   851                           ;mcc_generated_files/pin_manager.c: 96:     ODCONB = 0x00;
   852   000B22  0E00               	movlw	0
   853   000B24  6F17               	movwf	23,b	;volatile
   854                           
   855                           ;mcc_generated_files/pin_manager.c: 97:     ODCONC = 0x00;
   856   000B26  0E00               	movlw	0
   857   000B28  6F1F               	movwf	31,b	;volatile
   858   000B2A                     
   859                           ; BSR set to: 15
   860                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONA = 0xFF;
   861   000B2A  690E               	setf	14,b	;volatile
   862   000B2C                     
   863                           ; BSR set to: 15
   864                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONB = 0xFF;
   865   000B2C  6916               	setf	22,b	;volatile
   866   000B2E                     
   867                           ; BSR set to: 15
   868                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONC = 0xFF;
   869   000B2E  691E               	setf	30,b	;volatile
   870   000B30                     
   871                           ; BSR set to: 15
   872                           ;mcc_generated_files/pin_manager.c: 109:     INLVLA = 0xFF;
   873   000B30  690D               	setf	13,b	;volatile
   874   000B32                     
   875                           ; BSR set to: 15
   876                           ;mcc_generated_files/pin_manager.c: 110:     INLVLB = 0xFF;
   877   000B32  6915               	setf	21,b	;volatile
   878   000B34                     
   879                           ; BSR set to: 15
   880                           ;mcc_generated_files/pin_manager.c: 111:     INLVLC = 0xFF;
   881   000B34  691D               	setf	29,b	;volatile
   882                           
   883                           ;mcc_generated_files/pin_manager.c: 112:     INLVLE = 0x08;
   884   000B36  0E08               	movlw	8
   885   000B38  6F2A               	movwf	42,b	;volatile
   886   000B3A                     
   887                           ; BSR set to: 15
   888                           ;mcc_generated_files/pin_manager.c: 119:     IOCCFbits.IOCCF2 = 0;
   889   000B3A  951A               	bcf	26,2,b	;volatile
   890   000B3C                     
   891                           ; BSR set to: 15
   892                           ;mcc_generated_files/pin_manager.c: 121:     IOCCFbits.IOCCF5 = 0;
   893   000B3C  9B1A               	bcf	26,5,b	;volatile
   894   000B3E                     
   895                           ; BSR set to: 15
   896                           ;mcc_generated_files/pin_manager.c: 123:     IOCCNbits.IOCCN2 = 0;
   897   000B3E  951B               	bcf	27,2,b	;volatile
   898   000B40                     
   899                           ; BSR set to: 15
   900                           ;mcc_generated_files/pin_manager.c: 125:     IOCCNbits.IOCCN5 = 1;
   901   000B40  8B1B               	bsf	27,5,b	;volatile
   902   000B42                     
   903                           ; BSR set to: 15
   904                           ;mcc_generated_files/pin_manager.c: 127:     IOCCPbits.IOCCP2 = 1;
   905   000B42  851C               	bsf	28,2,b	;volatile
   906   000B44                     
   907                           ; BSR set to: 15
   908                           ;mcc_generated_files/pin_manager.c: 129:     IOCCPbits.IOCCP5 = 1;
   909   000B44  8B1C               	bsf	28,5,b	;volatile
   910   000B46                     
   911                           ; BSR set to: 15
   912                           ;mcc_generated_files/pin_manager.c: 134:     IOCCF2_SetInterruptHandler(movement_Detect_
      +                          Interrupt);
   913   000B46  0E7E               	movlw	low _movement_Detect_Interrupt
   914   000B48  6E36               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^0,c
   915   000B4A  0E0D               	movlw	high _movement_Detect_Interrupt
   916   000B4C  6E37               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^0,c
   917   000B4E  EC77  F007         	call	_IOCCF2_SetInterruptHandler	;wreg free
   918   000B52                     
   919                           ;mcc_generated_files/pin_manager.c: 135:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
   920   000B52  0E50               	movlw	low _IOCCF5_DefaultInterruptHandler
   921   000B54  6E36               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^0,c
   922   000B56  0E0F               	movlw	high _IOCCF5_DefaultInterruptHandler
   923   000B58  6E37               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^0,c
   924   000B5A  EC72  F007         	call	_IOCCF5_SetInterruptHandler	;wreg free
   925   000B5E                     
   926                           ;mcc_generated_files/pin_manager.c: 138:     PIE0bits.IOCIE = 1;
   927   000B5E  010E               	movlb	14	; () banked
   928   000B60  89C2               	bsf	194,4,b	;volatile
   929                           
   930                           ;mcc_generated_files/pin_manager.c: 141:     RXPPS = 0x17;
   931   000B62  0E17               	movlw	23
   932   000B64  6FB5               	movwf	181,b	;volatile
   933                           
   934                           ;mcc_generated_files/pin_manager.c: 142:     RC6PPS = 0x09;
   935   000B66  0E09               	movlw	9
   936   000B68  6FFD               	movwf	253,b	;volatile
   937   000B6A                     
   938                           ; BSR set to: 14
   939   000B6A  0012               	return		;funcret
   940   000B6C                     __end_of_PIN_MANAGER_Initialize:
   941                           	callstack 0
   942                           
   943 ;; *************** function _IOCCF5_SetInterruptHandler *****************
   944 ;; Defined at:
   945 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   948 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         2       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         2       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        2 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 5
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_PIN_MANAGER_Initialize
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text7
   975   000EE4                     __ptext7:
   976                           	callstack 0
   977   000EE4                     _IOCCF5_SetInterruptHandler:
   978                           	callstack 23
   979   000EE4                     
   980                           ;mcc_generated_files/pin_manager.c: 208:     IOCCF5_InterruptHandler = InterruptHandler;
   981   000EE4  C036  F02E         	movff	IOCCF5_SetInterruptHandler@InterruptHandler,_IOCCF5_InterruptHandler
   982   000EE8  C037  F02F         	movff	IOCCF5_SetInterruptHandler@InterruptHandler+1,_IOCCF5_InterruptHandler+1
   983   000EEC  0012               	return		;funcret
   984   000EEE                     __end_of_IOCCF5_SetInterruptHandler:
   985                           	callstack 0
   986                           
   987 ;; *************** function _IOCCF2_SetInterruptHandler *****************
   988 ;; Defined at:
   989 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   992 ;;		 -> movement_Detect_Interrupt(1), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:        2 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 5
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_PIN_MANAGER_Initialize
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text8
  1019   000EEE                     __ptext8:
  1020                           	callstack 0
  1021   000EEE                     _IOCCF2_SetInterruptHandler:
  1022                           	callstack 23
  1023   000EEE                     
  1024                           ;mcc_generated_files/pin_manager.c: 178:     IOCCF2_InterruptHandler = InterruptHandler;
  1025   000EEE  C036  F030         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  1026   000EF2  C037  F031         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  1027   000EF6  0012               	return		;funcret
  1028   000EF8                     __end_of_IOCCF2_SetInterruptHandler:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _OSCILLATOR_Initialize *****************
  1032 ;; Defined at:
  1033 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 5
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_SYSTEM_Initialize
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text9
  1062   000E68                     __ptext9:
  1063                           	callstack 0
  1064   000E68                     _OSCILLATOR_Initialize:
  1065                           	callstack 24
  1066   000E68                     
  1067                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  1068   000E68  0E62               	movlw	98
  1069   000E6A  010E               	movlb	14	; () banked
  1070   000E6C  6FD8               	movwf	216,b	;volatile
  1071                           
  1072                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1073   000E6E  0E00               	movlw	0
  1074   000E70  6FDA               	movwf	218,b	;volatile
  1075                           
  1076                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1077   000E72  0E00               	movlw	0
  1078   000E74  6FDC               	movwf	220,b	;volatile
  1079                           
  1080                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  1081   000E76  0E02               	movlw	2
  1082   000E78  6FDE               	movwf	222,b	;volatile
  1083                           
  1084                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1085   000E7A  0E00               	movlw	0
  1086   000E7C  6FDD               	movwf	221,b	;volatile
  1087   000E7E                     
  1088                           ; BSR set to: 14
  1089   000E7E  0012               	return		;funcret
  1090   000E80                     __end_of_OSCILLATOR_Initialize:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _INTERRUPT_Initialize *****************
  1094 ;; Defined at:
  1095 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		None
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 5
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_SYSTEM_Initialize
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text10
  1124   000F40                     __ptext10:
  1125                           	callstack 0
  1126   000F40                     _INTERRUPT_Initialize:
  1127                           	callstack 24
  1128   000F40                     
  1129                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1130   000F40  9AF2               	bcf	242,5,c	;volatile
  1131   000F42  0012               	return		;funcret
  1132   000F44                     __end_of_INTERRUPT_Initialize:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _EUSART_Initialize *****************
  1136 ;; Defined at:
  1137 ;;		line 92 in file "mcc_generated_files/eusart.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 6
  1158 ;; This function calls:
  1159 ;;		_EUSART_SetErrorHandler
  1160 ;;		_EUSART_SetFramingErrorHandler
  1161 ;;		_EUSART_SetOverrunErrorHandler
  1162 ;;		_EUSART_SetRxInterruptHandler
  1163 ;;		_EUSART_SetTxInterruptHandler
  1164 ;; This function is called by:
  1165 ;;		_SYSTEM_Initialize
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text11
  1170   000B6C                     __ptext11:
  1171                           	callstack 0
  1172   000B6C                     _EUSART_Initialize:
  1173                           	callstack 23
  1174   000B6C                     
  1175                           ;mcc_generated_files/eusart.c: 95:     PIE3bits.RCIE = 0;
  1176   000B6C  010E               	movlb	14	; () banked
  1177   000B6E  9BC5               	bcf	197,5,b	;volatile
  1178   000B70                     
  1179                           ; BSR set to: 14
  1180                           ;mcc_generated_files/eusart.c: 96:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1181   000B70  0E42               	movlw	low _EUSART_Receive_ISR
  1182   000B72  6E36               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  1183   000B74  0E0A               	movlw	high _EUSART_Receive_ISR
  1184   000B76  6E37               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  1185   000B78  EC81  F007         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1186   000B7C                     
  1187                           ;mcc_generated_files/eusart.c: 97:     PIE3bits.TXIE = 0;
  1188   000B7C  010E               	movlb	14	; () banked
  1189   000B7E  99C5               	bcf	197,4,b	;volatile
  1190                           
  1191                           ;mcc_generated_files/eusart.c: 98:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  1192   000B80  0E84               	movlw	low _EUSART_Transmit_ISR
  1193   000B82  6E36               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  1194   000B84  0E0C               	movlw	high _EUSART_Transmit_ISR
  1195   000B86  6E37               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  1196   000B88  EC7C  F007         	call	_EUSART_SetTxInterruptHandler	;wreg free
  1197   000B8C                     
  1198                           ;mcc_generated_files/eusart.c: 102:     BAUD1CON = 0x0A;
  1199   000B8C  0E0A               	movlw	10
  1200   000B8E  6E9F               	movwf	159,c	;volatile
  1201   000B90                     
  1202                           ;mcc_generated_files/eusart.c: 105:     RC1STA = 0x90;
  1203   000B90  0E90               	movlw	144
  1204   000B92  6E9D               	movwf	157,c	;volatile
  1205   000B94                     
  1206                           ;mcc_generated_files/eusart.c: 108:     TX1STA = 0x24;
  1207   000B94  0E24               	movlw	36
  1208   000B96  6E9E               	movwf	158,c	;volatile
  1209   000B98                     
  1210                           ;mcc_generated_files/eusart.c: 111:     SP1BRGL = 0x19;
  1211   000B98  0E19               	movlw	25
  1212   000B9A  6E9B               	movwf	155,c	;volatile
  1213   000B9C                     
  1214                           ;mcc_generated_files/eusart.c: 114:     SP1BRGH = 0x00;
  1215   000B9C  0E00               	movlw	0
  1216   000B9E  6E9C               	movwf	156,c	;volatile
  1217   000BA0                     
  1218                           ;mcc_generated_files/eusart.c: 117:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1219   000BA0  0E52               	movlw	low _EUSART_DefaultFramingErrorHandler
  1220   000BA2  6E36               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1221   000BA4  0E0F               	movlw	high _EUSART_DefaultFramingErrorHandler
  1222   000BA6  6E37               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1223   000BA8  EC8B  F007         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1224   000BAC                     
  1225                           ;mcc_generated_files/eusart.c: 118:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1226   000BAC  0E34               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1227   000BAE  6E36               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1228   000BB0  0E0F               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1229   000BB2  6E37               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1230   000BB4  EC86  F007         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1231   000BB8                     
  1232                           ;mcc_generated_files/eusart.c: 119:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1233   000BB8  0E3A               	movlw	low _EUSART_DefaultErrorHandler
  1234   000BBA  6E36               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1235   000BBC  0E0F               	movlw	high _EUSART_DefaultErrorHandler
  1236   000BBE  6E37               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1237   000BC0  EC90  F007         	call	_EUSART_SetErrorHandler	;wreg free
  1238                           
  1239                           ;mcc_generated_files/eusart.c: 121:     eusartRxLastError.status = 0;
  1240   000BC4  0E00               	movlw	0
  1241   000BC6  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  1242                           
  1243                           ;mcc_generated_files/eusart.c: 124:     eusartTxHead = 0;
  1244   000BC8  0E00               	movlw	0
  1245   000BCA  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1246                           
  1247                           ;mcc_generated_files/eusart.c: 125:     eusartTxTail = 0;
  1248   000BCC  0E00               	movlw	0
  1249   000BCE  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  1250                           
  1251                           ;mcc_generated_files/eusart.c: 126:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  1252   000BD0  0E08               	movlw	8
  1253   000BD2  6E1D               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  1254                           
  1255                           ;mcc_generated_files/eusart.c: 128:     eusartRxHead = 0;
  1256   000BD4  0E00               	movlw	0
  1257   000BD6  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  1258                           
  1259                           ;mcc_generated_files/eusart.c: 129:     eusartRxTail = 0;
  1260   000BD8  0E00               	movlw	0
  1261   000BDA  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  1262                           
  1263                           ;mcc_generated_files/eusart.c: 130:     eusartRxCount = 0;
  1264   000BDC  0E00               	movlw	0
  1265   000BDE  6E1A               	movwf	_eusartRxCount^0,c	;volatile
  1266   000BE0                     
  1267                           ;mcc_generated_files/eusart.c: 133:     PIE3bits.RCIE = 1;
  1268   000BE0  010E               	movlb	14	; () banked
  1269   000BE2  8BC5               	bsf	197,5,b	;volatile
  1270   000BE4                     
  1271                           ; BSR set to: 14
  1272   000BE4  0012               	return		;funcret
  1273   000BE6                     __end_of_EUSART_Initialize:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1277 ;; Defined at:
  1278 ;;		line 282 in file "mcc_generated_files/eusart.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1281 ;;		 -> EUSART_Transmit_ISR(1), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         2       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 5
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_EUSART_Initialize
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text12
  1308   000EF8                     __ptext12:
  1309                           	callstack 0
  1310   000EF8                     _EUSART_SetTxInterruptHandler:
  1311                           	callstack 23
  1312   000EF8                     
  1313                           ;mcc_generated_files/eusart.c: 283:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  1314   000EF8  C036  F02C         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  1315   000EFC  C037  F02D         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  1316   000F00  0012               	return		;funcret
  1317   000F02                     __end_of_EUSART_SetTxInterruptHandler:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1321 ;; Defined at:
  1322 ;;		line 286 in file "mcc_generated_files/eusart.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1325 ;;		 -> EUSART_Receive_ISR(1), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 5
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_EUSART_Initialize
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text13
  1352   000F02                     __ptext13:
  1353                           	callstack 0
  1354   000F02                     _EUSART_SetRxInterruptHandler:
  1355                           	callstack 23
  1356   000F02                     
  1357                           ;mcc_generated_files/eusart.c: 287:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1358   000F02  C036  F02A         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1359   000F06  C037  F02B         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1360   000F0A  0012               	return		;funcret
  1361   000F0C                     __end_of_EUSART_SetRxInterruptHandler:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1365 ;; Defined at:
  1366 ;;		line 274 in file "mcc_generated_files/eusart.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1369 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1381 ;;      Params:         2       0       0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 5
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_EUSART_Initialize
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text14
  1396   000F0C                     __ptext14:
  1397                           	callstack 0
  1398   000F0C                     _EUSART_SetOverrunErrorHandler:
  1399                           	callstack 23
  1400   000F0C                     
  1401                           ;mcc_generated_files/eusart.c: 275:     EUSART_OverrunErrorHandler = interruptHandler;
  1402   000F0C  C036  F024         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1403   000F10  C037  F025         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1404   000F14  0012               	return		;funcret
  1405   000F16                     __end_of_EUSART_SetOverrunErrorHandler:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1409 ;; Defined at:
  1410 ;;		line 270 in file "mcc_generated_files/eusart.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1413 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         2       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 5
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_EUSART_Initialize
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text15
  1440   000F16                     __ptext15:
  1441                           	callstack 0
  1442   000F16                     _EUSART_SetFramingErrorHandler:
  1443                           	callstack 23
  1444   000F16                     
  1445                           ;mcc_generated_files/eusart.c: 271:     EUSART_FramingErrorHandler = interruptHandler;
  1446   000F16  C036  F026         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1447   000F1A  C037  F027         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1448   000F1E  0012               	return		;funcret
  1449   000F20                     __end_of_EUSART_SetFramingErrorHandler:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _EUSART_SetErrorHandler *****************
  1453 ;; Defined at:
  1454 ;;		line 278 in file "mcc_generated_files/eusart.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1457 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1472 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1473 ;;Total ram usage:        2 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 5
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_EUSART_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text16
  1484   000F20                     __ptext16:
  1485                           	callstack 0
  1486   000F20                     _EUSART_SetErrorHandler:
  1487                           	callstack 23
  1488   000F20                     
  1489                           ;mcc_generated_files/eusart.c: 279:     EUSART_ErrorHandler = interruptHandler;
  1490   000F20  C036  F022         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1491   000F24  C037  F023         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1492   000F28  0012               	return		;funcret
  1493   000F2A                     __end_of_EUSART_SetErrorHandler:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _Recieve_ArmData *****************
  1497 ;; Defined at:
  1498 ;;		line 43 in file "system_core.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  i               2   11[COMRAM] int 
  1503 ;;  j               2   13[COMRAM] int 
  1504 ;;  msgBuff         4    7[COMRAM] unsigned char [4]
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1517 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:       10 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 6
  1521 ;; This function calls:
  1522 ;;		_EUSART_Read
  1523 ;;		_EUSART_Write
  1524 ;;		_EUSART_is_rx_ready
  1525 ;;		_EUSART_is_tx_done
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text17
  1532   000802                     __ptext17:
  1533                           	callstack 0
  1534   000802                     _Recieve_ArmData:
  1535                           	callstack 24
  1536   000802                     l334:
  1537   000802  BED5               	btfsc	213,7,c	;volatile
  1538   000804  EF06  F004         	goto	u791
  1539   000808  EF08  F004         	goto	u790
  1540   00080C                     u791:
  1541   00080C  EF01  F004         	goto	l334
  1542   000810                     u790:
  1543   000810                     
  1544                           ;system_core.c: 49:     if(EUSART_is_rx_ready())
  1545   000810  EC40  F007         	call	_EUSART_is_rx_ready	;wreg free
  1546   000814  0900               	iorlw	0
  1547   000816  B4D8               	btfsc	status,2,c
  1548   000818  EF10  F004         	goto	u801
  1549   00081C  EF12  F004         	goto	u800
  1550   000820                     u801:
  1551   000820  EF2C  F004         	goto	l1799
  1552   000824                     u800:
  1553   000824                     
  1554                           ;system_core.c: 50:     {;system_core.c: 51:         for(int i=0;i<sizeof(msgBuff);i++)
  1555   000824  0E00               	movlw	0
  1556   000826  6E3E               	movwf	(Recieve_ArmData@i+1)^0,c
  1557   000828  0E00               	movlw	0
  1558   00082A  6E3D               	movwf	Recieve_ArmData@i^0,c
  1559   00082C                     l1793:
  1560                           
  1561                           ;system_core.c: 52:         {;system_core.c: 53:             msgBuff[i] = EUSART_Read();
  1562   00082C  EC1D  F006         	call	_EUSART_Read	;wreg free
  1563   000830  6E37               	movwf	??_Recieve_ArmData^0,c
  1564   000832  503D               	movf	Recieve_ArmData@i^0,w,c
  1565   000834  0F39               	addlw	low Recieve_ArmData@msgBuff
  1566   000836  6ED9               	movwf	fsr2l,c
  1567   000838  6ADA               	clrf	fsr2h,c
  1568   00083A  C037  FFDF         	movff	??_Recieve_ArmData,indf2
  1569   00083E                     
  1570                           ;system_core.c: 54:         }
  1571   00083E  4A3D               	infsnz	Recieve_ArmData@i^0,f,c
  1572   000840  2A3E               	incf	(Recieve_ArmData@i+1)^0,f,c
  1573   000842  503E               	movf	(Recieve_ArmData@i+1)^0,w,c
  1574   000844  E109               	bnz	u810
  1575   000846  0E04               	movlw	4
  1576   000848  5C3D               	subwf	Recieve_ArmData@i^0,w,c
  1577   00084A  A0D8               	btfss	status,0,c
  1578   00084C  EF2A  F004         	goto	u811
  1579   000850  EF2C  F004         	goto	u810
  1580   000854                     u811:
  1581   000854  EF16  F004         	goto	l1793
  1582   000858                     u810:
  1583   000858                     l1799:
  1584                           
  1585                           ;system_core.c: 58:     for(int j=0;j<sizeof(msgBuff);j++)
  1586   000858  0E00               	movlw	0
  1587   00085A  6E40               	movwf	(Recieve_ArmData@j+1)^0,c
  1588   00085C  0E00               	movlw	0
  1589   00085E  6E3F               	movwf	Recieve_ArmData@j^0,c
  1590   000860                     l1805:
  1591                           
  1592                           ;system_core.c: 59:     {;system_core.c: 60:         if(j != (sizeof(msgBuff)-2))
  1593   000860  0E02               	movlw	2
  1594   000862  183F               	xorwf	Recieve_ArmData@j^0,w,c
  1595   000864  1040               	iorwf	(Recieve_ArmData@j+1)^0,w,c
  1596   000866  B4D8               	btfsc	status,2,c
  1597   000868  EF38  F004         	goto	u821
  1598   00086C  EF3A  F004         	goto	u820
  1599   000870                     u821:
  1600   000870  EFBC  F004         	goto	l1827
  1601   000874                     u820:
  1602   000874                     
  1603                           ;system_core.c: 61:         {;system_core.c: 62:             if((msgBuff[j] == 0x52)
  1604   000874  503F               	movf	Recieve_ArmData@j^0,w,c
  1605   000876  0F39               	addlw	low Recieve_ArmData@msgBuff
  1606   000878  6ED9               	movwf	fsr2l,c
  1607   00087A  6ADA               	clrf	fsr2h,c
  1608   00087C  0E52               	movlw	82
  1609   00087E  18DE               	xorwf	postinc2,w,c
  1610   000880  A4D8               	btfss	status,2,c
  1611   000882  EF45  F004         	goto	u831
  1612   000886  EF47  F004         	goto	u830
  1613   00088A                     u831:
  1614   00088A  EF7B  F004         	goto	l1817
  1615   00088E                     u830:
  1616   00088E  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1617   000892  0E01               	movlw	1
  1618   000894  2637               	addwf	??_Recieve_ArmData^0,f,c
  1619   000896  5037               	movf	??_Recieve_ArmData^0,w,c
  1620   000898  0F39               	addlw	low Recieve_ArmData@msgBuff
  1621   00089A  6ED9               	movwf	fsr2l,c
  1622   00089C  6ADA               	clrf	fsr2h,c
  1623   00089E  0E53               	movlw	83
  1624   0008A0  18DE               	xorwf	postinc2,w,c
  1625   0008A2  A4D8               	btfss	status,2,c
  1626   0008A4  EF56  F004         	goto	u841
  1627   0008A8  EF58  F004         	goto	u840
  1628   0008AC                     u841:
  1629   0008AC  EF7B  F004         	goto	l1817
  1630   0008B0                     u840:
  1631   0008B0  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1632   0008B4  0E02               	movlw	2
  1633   0008B6  2637               	addwf	??_Recieve_ArmData^0,f,c
  1634   0008B8  5037               	movf	??_Recieve_ArmData^0,w,c
  1635   0008BA  0F39               	addlw	low Recieve_ArmData@msgBuff
  1636   0008BC  6ED9               	movwf	fsr2l,c
  1637   0008BE  6ADA               	clrf	fsr2h,c
  1638   0008C0  0E4D               	movlw	77
  1639   0008C2  18DE               	xorwf	postinc2,w,c
  1640   0008C4  A4D8               	btfss	status,2,c
  1641   0008C6  EF67  F004         	goto	u851
  1642   0008CA  EF69  F004         	goto	u850
  1643   0008CE                     u851:
  1644   0008CE  EF7B  F004         	goto	l1817
  1645   0008D2                     u850:
  1646   0008D2                     
  1647                           ;system_core.c: 65:             {;system_core.c: 66:                 EUSART_Write(0x41);
  1648   0008D2  0E41               	movlw	65
  1649   0008D4  ECF3  F005         	call	_EUSART_Write
  1650   0008D8                     l1815:
  1651   0008D8  EC4B  F007         	call	_EUSART_is_tx_done	;wreg free
  1652   0008DC  0900               	iorlw	0
  1653   0008DE  B4D8               	btfsc	status,2,c
  1654   0008E0  EF74  F004         	goto	u861
  1655   0008E4  EF76  F004         	goto	u860
  1656   0008E8                     u861:
  1657   0008E8  EF6C  F004         	goto	l1815
  1658   0008EC                     u860:
  1659   0008EC                     
  1660                           ;system_core.c: 70:                 mainFlags.SystemArmed = 1;
  1661   0008EC  8021               	bsf	_mainFlags^0,0,c
  1662                           
  1663                           ;system_core.c: 71:                 mainFlags.SystemDisarmed = 0;
  1664   0008EE  9221               	bcf	_mainFlags^0,1,c
  1665                           
  1666                           ;system_core.c: 73:                 mainFlags.System_BluetoothReceive = 0;
  1667   0008F0  9821               	bcf	_mainFlags^0,4,c
  1668                           
  1669                           ;system_core.c: 74:                 break;
  1670   0008F2  EFC9  F004         	goto	l341
  1671   0008F6                     l1817:
  1672                           
  1673                           ;system_core.c: 77:             if((msgBuff[j] == 0x44)
  1674   0008F6  503F               	movf	Recieve_ArmData@j^0,w,c
  1675   0008F8  0F39               	addlw	low Recieve_ArmData@msgBuff
  1676   0008FA  6ED9               	movwf	fsr2l,c
  1677   0008FC  6ADA               	clrf	fsr2h,c
  1678   0008FE  0E44               	movlw	68
  1679   000900  18DE               	xorwf	postinc2,w,c
  1680   000902  A4D8               	btfss	status,2,c
  1681   000904  EF86  F004         	goto	u871
  1682   000908  EF88  F004         	goto	u870
  1683   00090C                     u871:
  1684   00090C  EFBC  F004         	goto	l1827
  1685   000910                     u870:
  1686   000910  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1687   000914  0E01               	movlw	1
  1688   000916  2637               	addwf	??_Recieve_ArmData^0,f,c
  1689   000918  5037               	movf	??_Recieve_ArmData^0,w,c
  1690   00091A  0F39               	addlw	low Recieve_ArmData@msgBuff
  1691   00091C  6ED9               	movwf	fsr2l,c
  1692   00091E  6ADA               	clrf	fsr2h,c
  1693   000920  0E53               	movlw	83
  1694   000922  18DE               	xorwf	postinc2,w,c
  1695   000924  A4D8               	btfss	status,2,c
  1696   000926  EF97  F004         	goto	u881
  1697   00092A  EF99  F004         	goto	u880
  1698   00092E                     u881:
  1699   00092E  EFBC  F004         	goto	l1827
  1700   000932                     u880:
  1701   000932  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1702   000936  0E02               	movlw	2
  1703   000938  2637               	addwf	??_Recieve_ArmData^0,f,c
  1704   00093A  5037               	movf	??_Recieve_ArmData^0,w,c
  1705   00093C  0F39               	addlw	low Recieve_ArmData@msgBuff
  1706   00093E  6ED9               	movwf	fsr2l,c
  1707   000940  6ADA               	clrf	fsr2h,c
  1708   000942  0E4D               	movlw	77
  1709   000944  18DE               	xorwf	postinc2,w,c
  1710   000946  A4D8               	btfss	status,2,c
  1711   000948  EFA8  F004         	goto	u891
  1712   00094C  EFAA  F004         	goto	u890
  1713   000950                     u891:
  1714   000950  EFBC  F004         	goto	l1827
  1715   000954                     u890:
  1716   000954                     
  1717                           ;system_core.c: 80:             {;system_core.c: 81:                 EUSART_Write(0x41);
  1718   000954  0E41               	movlw	65
  1719   000956  ECF3  F005         	call	_EUSART_Write
  1720   00095A                     l1825:
  1721   00095A  EC4B  F007         	call	_EUSART_is_tx_done	;wreg free
  1722   00095E  0900               	iorlw	0
  1723   000960  B4D8               	btfsc	status,2,c
  1724   000962  EFB5  F004         	goto	u901
  1725   000966  EFB7  F004         	goto	u900
  1726   00096A                     u901:
  1727   00096A  EFAD  F004         	goto	l1825
  1728   00096E                     u900:
  1729   00096E                     
  1730                           ;system_core.c: 85:                 mainFlags.SystemDisarmed = 1;
  1731   00096E  8221               	bsf	_mainFlags^0,1,c
  1732                           
  1733                           ;system_core.c: 86:                 mainFlags.SystemArmed = 0;
  1734   000970  9021               	bcf	_mainFlags^0,0,c
  1735                           
  1736                           ;system_core.c: 88:                 mainFlags.System_BluetoothReceive = 0;
  1737   000972  9821               	bcf	_mainFlags^0,4,c
  1738                           
  1739                           ;system_core.c: 89:                 break;
  1740   000974  EFC9  F004         	goto	l341
  1741   000978                     l1827:
  1742                           
  1743                           ;system_core.c: 92:     }
  1744   000978  4A3F               	infsnz	Recieve_ArmData@j^0,f,c
  1745   00097A  2A40               	incf	(Recieve_ArmData@j+1)^0,f,c
  1746   00097C  5040               	movf	(Recieve_ArmData@j+1)^0,w,c
  1747   00097E  E109               	bnz	u910
  1748   000980  0E04               	movlw	4
  1749   000982  5C3F               	subwf	Recieve_ArmData@j^0,w,c
  1750   000984  A0D8               	btfss	status,0,c
  1751   000986  EFC7  F004         	goto	u911
  1752   00098A  EFC9  F004         	goto	u910
  1753   00098E                     u911:
  1754   00098E  EF30  F004         	goto	l1805
  1755   000992                     u910:
  1756   000992                     l341:
  1757                           
  1758                           ;system_core.c: 93:     mainFlags.System_BluetoothReceive = 0;
  1759   000992  9821               	bcf	_mainFlags^0,4,c
  1760   000994  0012               	return		;funcret
  1761   000996                     __end_of_Recieve_ArmData:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _EUSART_is_tx_done *****************
  1765 ;; Defined at:
  1766 ;;		line 146 in file "mcc_generated_files/eusart.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      _Bool 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 5
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_Transmit_MotionData
  1791 ;;		_Recieve_ArmData
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text18
  1796   000E96                     __ptext18:
  1797                           	callstack 0
  1798   000E96                     _EUSART_is_tx_done:
  1799                           	callstack 24
  1800   000E96                     
  1801                           ;mcc_generated_files/eusart.c: 148:     return TX1STAbits.TRMT;
  1802   000E96  B29E               	btfsc	158,1,c	;volatile
  1803   000E98  EF50  F007         	goto	u721
  1804   000E9C  EF53  F007         	goto	u720
  1805   000EA0                     u721:
  1806   000EA0  0E01               	movlw	1
  1807   000EA2  EF54  F007         	goto	u726
  1808   000EA6                     u720:
  1809   000EA6  0E00               	movlw	0
  1810   000EA8                     u726:
  1811   000EA8  0012               	return		;funcret
  1812   000EAA                     __end_of_EUSART_is_tx_done:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _EUSART_is_rx_ready *****************
  1816 ;; Defined at:
  1817 ;;		line 141 in file "mcc_generated_files/eusart.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      _Bool 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 5
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_Recieve_ArmData
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text19
  1846   000E80                     __ptext19:
  1847                           	callstack 0
  1848   000E80                     _EUSART_is_rx_ready:
  1849                           	callstack 24
  1850   000E80                     
  1851                           ;mcc_generated_files/eusart.c: 143:     return (eusartRxCount ? 1 : 0);
  1852   000E80  501A               	movf	_eusartRxCount^0,w,c	;volatile
  1853   000E82  A4D8               	btfss	status,2,c
  1854   000E84  EF46  F007         	goto	u731
  1855   000E88  EF49  F007         	goto	u730
  1856   000E8C                     u731:
  1857   000E8C  0E01               	movlw	1
  1858   000E8E  EF4A  F007         	goto	u740
  1859   000E92                     u730:
  1860   000E92  0E00               	movlw	0
  1861   000E94                     u740:
  1862   000E94  0012               	return		;funcret
  1863   000E96                     __end_of_EUSART_is_rx_ready:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _EUSART_Write *****************
  1867 ;; Defined at:
  1868 ;;		line 177 in file "mcc_generated_files/eusart.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  txData          1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  txData          1    4[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0
  1883 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1885 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1886 ;;Total ram usage:        1 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 5
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_Transmit_MotionData
  1893 ;;		_Recieve_ArmData
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text20
  1898   000BE6                     __ptext20:
  1899                           	callstack 0
  1900   000BE6                     _EUSART_Write:
  1901                           	callstack 24
  1902                           
  1903                           ;incstack = 0
  1904                           ;EUSART_Write@txData stored from wreg
  1905   000BE6  6E36               	movwf	EUSART_Write@txData^0,c
  1906   000BE8                     l1709:
  1907                           
  1908                           ;mcc_generated_files/eusart.c: 179:     while(0 == eusartTxBufferRemaining)
  1909   000BE8  501D               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
  1910   000BEA  B4D8               	btfsc	status,2,c
  1911   000BEC  EFFA  F005         	goto	u691
  1912   000BF0  EFFC  F005         	goto	u690
  1913   000BF4                     u691:
  1914   000BF4  EFF4  F005         	goto	l1709
  1915   000BF8                     u690:
  1916   000BF8                     
  1917                           ;mcc_generated_files/eusart.c: 183:     if(0 == PIE3bits.TXIE)
  1918   000BF8  010E               	movlb	14	; () banked
  1919   000BFA  B9C5               	btfsc	197,4,b	;volatile
  1920   000BFC  EF02  F006         	goto	u701
  1921   000C00  EF04  F006         	goto	u700
  1922   000C04                     u701:
  1923   000C04  EF08  F006         	goto	l453
  1924   000C08                     u700:
  1925   000C08                     
  1926                           ; BSR set to: 14
  1927                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         TX1
      +                          REG = txData;
  1928   000C08  C036  FF9A         	movff	EUSART_Write@txData,3994	;volatile
  1929                           
  1930                           ;mcc_generated_files/eusart.c: 186:     }
  1931   000C0C  EF1B  F006         	goto	l1723
  1932   000C10                     l453:
  1933                           
  1934                           ; BSR set to: 14
  1935                           ;mcc_generated_files/eusart.c: 188:     {;mcc_generated_files/eusart.c: 189:         PIE
      +                          3bits.TXIE = 0;
  1936   000C10  99C5               	bcf	197,4,b	;volatile
  1937   000C12                     
  1938                           ; BSR set to: 14
  1939                           ;mcc_generated_files/eusart.c: 190:         eusartTxBuffer[eusartTxHead++] = txData;
  1940   000C12  501F               	movf	_eusartTxHead^0,w,c
  1941   000C14  0F11               	addlw	low _eusartTxBuffer
  1942   000C16  6ED9               	movwf	fsr2l,c
  1943   000C18  6ADA               	clrf	fsr2h,c
  1944   000C1A  C036  FFDF         	movff	EUSART_Write@txData,indf2
  1945   000C1E                     
  1946                           ; BSR set to: 14
  1947   000C1E  2A1F               	incf	_eusartTxHead^0,f,c	;volatile
  1948   000C20                     
  1949                           ; BSR set to: 14
  1950                           ;mcc_generated_files/eusart.c: 191:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1951   000C20  0E07               	movlw	7
  1952   000C22  641F               	cpfsgt	_eusartTxHead^0,c	;volatile
  1953   000C24  EF16  F006         	goto	u711
  1954   000C28  EF18  F006         	goto	u710
  1955   000C2C                     u711:
  1956   000C2C  EF1A  F006         	goto	l1721
  1957   000C30                     u710:
  1958   000C30                     
  1959                           ; BSR set to: 14
  1960                           ;mcc_generated_files/eusart.c: 192:         {;mcc_generated_files/eusart.c: 193:        
      +                               eusartTxHead = 0;
  1961   000C30  0E00               	movlw	0
  1962   000C32  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1963   000C34                     l1721:
  1964                           
  1965                           ; BSR set to: 14
  1966                           ;mcc_generated_files/eusart.c: 195:         eusartTxBufferRemaining--;
  1967   000C34  061D               	decf	_eusartTxBufferRemaining^0,f,c	;volatile
  1968   000C36                     l1723:
  1969                           
  1970                           ; BSR set to: 14
  1971                           ;mcc_generated_files/eusart.c: 197:     PIE3bits.TXIE = 1;
  1972   000C36  89C5               	bsf	197,4,b	;volatile
  1973   000C38                     
  1974                           ; BSR set to: 14
  1975   000C38  0012               	return		;funcret
  1976   000C3A                     __end_of_EUSART_Write:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _EUSART_Read *****************
  1980 ;; Defined at:
  1981 ;;		line 155 in file "mcc_generated_files/eusart.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  readValue       1    4[COMRAM] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      unsigned char 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:        1 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 5
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_Recieve_ArmData
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text21
  2010   000C3A                     __ptext21:
  2011                           	callstack 0
  2012   000C3A                     _EUSART_Read:
  2013                           	callstack 24
  2014   000C3A                     l1735:
  2015                           
  2016                           ;mcc_generated_files/eusart.c: 159:     while(0 == eusartRxCount)
  2017   000C3A  501A               	movf	_eusartRxCount^0,w,c	;volatile
  2018   000C3C  B4D8               	btfsc	status,2,c
  2019   000C3E  EF23  F006         	goto	u751
  2020   000C42  EF25  F006         	goto	u750
  2021   000C46                     u751:
  2022   000C46  EF1D  F006         	goto	l1735
  2023   000C4A                     u750:
  2024   000C4A                     
  2025                           ;mcc_generated_files/eusart.c: 163:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  2026   000C4A  501B               	movf	_eusartRxTail^0,w,c
  2027   000C4C  0F01               	addlw	low _eusartRxStatusBuffer
  2028   000C4E  6ED9               	movwf	fsr2l,c
  2029   000C50  6ADA               	clrf	fsr2h,c
  2030   000C52  50DF               	movf	indf2,w,c
  2031   000C54  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  2032                           
  2033                           ;mcc_generated_files/eusart.c: 165:     readValue = eusartRxBuffer[eusartRxTail++];
  2034   000C56  501B               	movf	_eusartRxTail^0,w,c
  2035   000C58  0F09               	addlw	low _eusartRxBuffer
  2036   000C5A  6ED9               	movwf	fsr2l,c
  2037   000C5C  6ADA               	clrf	fsr2h,c
  2038   000C5E  50DF               	movf	indf2,w,c
  2039   000C60  6E36               	movwf	EUSART_Read@readValue^0,c
  2040   000C62  2A1B               	incf	_eusartRxTail^0,f,c	;volatile
  2041   000C64                     
  2042                           ;mcc_generated_files/eusart.c: 166:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2043   000C64  0E07               	movlw	7
  2044   000C66  641B               	cpfsgt	_eusartRxTail^0,c	;volatile
  2045   000C68  EF38  F006         	goto	u761
  2046   000C6C  EF3A  F006         	goto	u760
  2047   000C70                     u761:
  2048   000C70  EF3C  F006         	goto	l1745
  2049   000C74                     u760:
  2050   000C74                     
  2051                           ;mcc_generated_files/eusart.c: 167:     {;mcc_generated_files/eusart.c: 168:         eus
      +                          artRxTail = 0;
  2052   000C74  0E00               	movlw	0
  2053   000C76  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  2054   000C78                     l1745:
  2055                           
  2056                           ;mcc_generated_files/eusart.c: 170:     PIE3bits.RCIE = 0;
  2057   000C78  010E               	movlb	14	; () banked
  2058   000C7A  9BC5               	bcf	197,5,b	;volatile
  2059   000C7C                     
  2060                           ; BSR set to: 14
  2061                           ;mcc_generated_files/eusart.c: 171:     eusartRxCount--;
  2062   000C7C  061A               	decf	_eusartRxCount^0,f,c	;volatile
  2063   000C7E                     
  2064                           ; BSR set to: 14
  2065                           ;mcc_generated_files/eusart.c: 172:     PIE3bits.RCIE = 1;
  2066   000C7E  8BC5               	bsf	197,5,b	;volatile
  2067   000C80                     
  2068                           ; BSR set to: 14
  2069                           ;mcc_generated_files/eusart.c: 174:     return readValue;
  2070   000C80  5036               	movf	EUSART_Read@readValue^0,w,c
  2071   000C82                     
  2072                           ; BSR set to: 14
  2073   000C82  0012               	return		;funcret
  2074   000C84                     __end_of_EUSART_Read:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _Disarm_System *****************
  2078 ;; Defined at:
  2079 ;;		line 19 in file "system_core.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 6
  2100 ;; This function calls:
  2101 ;;		_TMR0_StopTimer
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text22
  2108   000EAA                     __ptext22:
  2109                           	callstack 0
  2110   000EAA                     _Disarm_System:
  2111                           	callstack 24
  2112   000EAA                     
  2113                           ;system_core.c: 21:     IOCCPbits.IOCCP2 = 0;
  2114   000EAA  010F               	movlb	15	; () banked
  2115   000EAC  951C               	bcf	28,2,b	;volatile
  2116                           
  2117                           ;system_core.c: 23:     PIE0bits.TMR0IE = 0;
  2118   000EAE  010E               	movlb	14	; () banked
  2119   000EB0  9BC2               	bcf	194,5,b	;volatile
  2120   000EB2                     
  2121                           ; BSR set to: 14
  2122                           ;system_core.c: 24:     TMR0_StopTimer();
  2123   000EB2  ECA2  F007         	call	_TMR0_StopTimer	;wreg free
  2124   000EB6  9685               	bcf	133,3,c	;volatile
  2125   000EB8                     
  2126                           ;system_core.c: 27:     mainFlags.SystemDisarmed_ContinuousSleep = 1;
  2127   000EB8  8421               	bsf	_mainFlags^0,2,c
  2128   000EBA                     
  2129                           ;system_core.c: 28:     mainFlags.SystemDisarmed = 0;
  2130   000EBA  9221               	bcf	_mainFlags^0,1,c
  2131   000EBC  0012               	return		;funcret
  2132   000EBE                     __end_of_Disarm_System:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _TMR0_StopTimer *****************
  2136 ;; Defined at:
  2137 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		None
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 5
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_Disarm_System
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text23
  2166   000F44                     __ptext23:
  2167                           	callstack 0
  2168   000F44                     _TMR0_StopTimer:
  2169                           	callstack 24
  2170   000F44                     
  2171                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  2172   000F44  9ED5               	bcf	213,7,c	;volatile
  2173   000F46  0012               	return		;funcret
  2174   000F48                     __end_of_TMR0_StopTimer:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _Arm_System *****************
  2178 ;; Defined at:
  2179 ;;		line 8 in file "system_core.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		None
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 5
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text24
  2208   000EBE                     __ptext24:
  2209                           	callstack 0
  2210   000EBE                     _Arm_System:
  2211                           	callstack 25
  2212   000EBE  848A               	bsf	138,2,c	;volatile
  2213   000EC0                     
  2214                           ;system_core.c: 11:     IOCCPbits.IOCCP2 = 1;
  2215   000EC0  010F               	movlb	15	; () banked
  2216   000EC2  851C               	bsf	28,2,b	;volatile
  2217                           
  2218                           ;system_core.c: 12:     PIE0bits.TMR0IE = 1;
  2219   000EC4  010E               	movlb	14	; () banked
  2220   000EC6  8BC2               	bsf	194,5,b	;volatile
  2221                           
  2222                           ;system_core.c: 14:     mainFlags.SystemArmed = 0;
  2223   000EC8  9021               	bcf	_mainFlags^0,0,c
  2224                           
  2225                           ;system_core.c: 15:     mainFlags.SystemDisarmed_ContinuousSleep = 0;
  2226   000ECA  9421               	bcf	_mainFlags^0,2,c
  2227   000ECC                     
  2228                           ; BSR set to: 14
  2229   000ECC  0012               	return		;funcret
  2230   000ECE                     __end_of_Arm_System:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _INTERRUPT_InterruptManager *****************
  2234 ;; Defined at:
  2235 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2251 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2252 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2253 ;;Total ram usage:        4 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 4
  2256 ;; This function calls:
  2257 ;;		NULL
  2258 ;;		_EUSART_Receive_ISR
  2259 ;;		_EUSART_Transmit_ISR
  2260 ;;		_PIN_MANAGER_IOC
  2261 ;;		_TMR0_ISR
  2262 ;; This function is called by:
  2263 ;;		Interrupt level 2
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	intcode
  2268   000008                     __pintcode:
  2269                           	callstack 0
  2270   000008                     _INTERRUPT_InterruptManager:
  2271                           	callstack 23
  2272                           
  2273                           ; BSR set to: 14
  2274                           ;incstack = 0
  2275   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2276   00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
  2277   00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2278   000012  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2279   000016  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2280   00001A                     
  2281                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2282   00001A  010E               	movlb	14	; () banked
  2283   00001C  ABC2               	btfss	194,5,b	;volatile
  2284   00001E  EF13  F000         	goto	i2u101_41
  2285   000022  EF15  F000         	goto	i2u101_40
  2286   000026                     i2u101_41:
  2287   000026  EF20  F000         	goto	i2l185
  2288   00002A                     i2u101_40:
  2289   00002A                     
  2290                           ; BSR set to: 14
  2291   00002A  ABCA               	btfss	202,5,b	;volatile
  2292   00002C  EF1A  F000         	goto	i2u102_41
  2293   000030  EF1C  F000         	goto	i2u102_40
  2294   000034                     i2u102_41:
  2295   000034  EF20  F000         	goto	i2l185
  2296   000038                     i2u102_40:
  2297   000038                     
  2298                           ; BSR set to: 14
  2299                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2300   000038  EC95  F007         	call	_TMR0_ISR	;wreg free
  2301                           
  2302                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2303   00003C  EF73  F000         	goto	i2l195
  2304   000040                     i2l185:
  2305                           
  2306                           ; BSR set to: 14
  2307   000040  A9C2               	btfss	194,4,b	;volatile
  2308   000042  EF25  F000         	goto	i2u103_41
  2309   000046  EF27  F000         	goto	i2u103_40
  2310   00004A                     i2u103_41:
  2311   00004A  EF32  F000         	goto	i2l187
  2312   00004E                     i2u103_40:
  2313   00004E                     
  2314                           ; BSR set to: 14
  2315   00004E  A9CA               	btfss	202,4,b	;volatile
  2316   000050  EF2C  F000         	goto	i2u104_41
  2317   000054  EF2E  F000         	goto	i2u104_40
  2318   000058                     i2u104_41:
  2319   000058  EF32  F000         	goto	i2l187
  2320   00005C                     i2u104_40:
  2321   00005C                     
  2322                           ; BSR set to: 14
  2323                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  2324   00005C  ECAA  F006         	call	_PIN_MANAGER_IOC	;wreg free
  2325                           
  2326                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  2327   000060  EF73  F000         	goto	i2l195
  2328   000064                     i2l187:
  2329                           
  2330                           ; BSR set to: 14
  2331   000064  ACF2               	btfss	242,6,c	;volatile
  2332   000066  EF37  F000         	goto	i2u105_41
  2333   00006A  EF39  F000         	goto	i2u105_40
  2334   00006E                     i2u105_41:
  2335   00006E  EF73  F000         	goto	i2l194
  2336   000072                     i2u105_40:
  2337   000072                     
  2338                           ; BSR set to: 14
  2339                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  2340   000072  A9C5               	btfss	197,4,b	;volatile
  2341   000074  EF3E  F000         	goto	i2u106_41
  2342   000078  EF40  F000         	goto	i2u106_40
  2343   00007C                     i2u106_41:
  2344   00007C  EF56  F000         	goto	i2l190
  2345   000080                     i2u106_40:
  2346   000080                     
  2347                           ; BSR set to: 14
  2348   000080  A9CD               	btfss	205,4,b	;volatile
  2349   000082  EF45  F000         	goto	i2u107_41
  2350   000086  EF47  F000         	goto	i2u107_40
  2351   00008A                     i2u107_41:
  2352   00008A  EF56  F000         	goto	i2l190
  2353   00008E                     i2u107_40:
  2354   00008E                     
  2355                           ; BSR set to: 14
  2356                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_TxDefaultInterruptHandler();
  2357   00008E  D802               	call	i2u108_48
  2358   000090  EF54  F000         	goto	i2u108_49
  2359   000094                     i2u108_48:
  2360   000094  0005               	push	
  2361   000096  6EFA               	movwf	pclath,c
  2362   000098  502C               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  2363   00009A  6EFD               	movwf	tosl,c
  2364   00009C  502D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  2365   00009E  6EFE               	movwf	tosh,c
  2366   0000A0  50F8               	movf	tblptru,w,c
  2367   0000A2  6EFF               	movwf	tosu,c
  2368   0000A4  50FA               	movf	pclath,w,c
  2369   0000A6  0012               	return		;indir
  2370   0000A8                     i2u108_49:
  2371                           
  2372                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  2373   0000A8  EF73  F000         	goto	i2l195
  2374   0000AC                     i2l190:
  2375                           
  2376                           ; BSR set to: 14
  2377   0000AC  ABC5               	btfss	197,5,b	;volatile
  2378   0000AE  EF5B  F000         	goto	i2u109_41
  2379   0000B2  EF5D  F000         	goto	i2u109_40
  2380   0000B6                     i2u109_41:
  2381   0000B6  EF73  F000         	goto	i2l194
  2382   0000BA                     i2u109_40:
  2383   0000BA                     
  2384                           ; BSR set to: 14
  2385   0000BA  ABCD               	btfss	205,5,b	;volatile
  2386   0000BC  EF62  F000         	goto	i2u110_41
  2387   0000C0  EF64  F000         	goto	i2u110_40
  2388   0000C4                     i2u110_41:
  2389   0000C4  EF73  F000         	goto	i2l194
  2390   0000C8                     i2u110_40:
  2391   0000C8                     
  2392                           ; BSR set to: 14
  2393                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  2394   0000C8  D802               	call	i2u111_48
  2395   0000CA  EF71  F000         	goto	i2u111_49
  2396   0000CE                     i2u111_48:
  2397   0000CE  0005               	push	
  2398   0000D0  6EFA               	movwf	pclath,c
  2399   0000D2  502A               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  2400   0000D4  6EFD               	movwf	tosl,c
  2401   0000D6  502B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  2402   0000D8  6EFE               	movwf	tosh,c
  2403   0000DA  50F8               	movf	tblptru,w,c
  2404   0000DC  6EFF               	movwf	tosu,c
  2405   0000DE  50FA               	movf	pclath,w,c
  2406   0000E0  0012               	return		;indir
  2407   0000E2                     i2u111_49:
  2408                           
  2409                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  2410   0000E2  EF73  F000         	goto	i2l195
  2411   0000E6                     i2l194:
  2412   0000E6                     i2l195:
  2413   0000E6  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2414   0000EA  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2415   0000EE  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2416   0000F2  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2417   0000F6  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2418   0000F8  0011               	retfie		f
  2419   0000FA                     __end_of_INTERRUPT_InterruptManager:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _TMR0_ISR *****************
  2423 ;; Defined at:
  2424 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 3
  2445 ;; This function calls:
  2446 ;;		_TMR0_CallBack
  2447 ;; This function is called by:
  2448 ;;		_INTERRUPT_InterruptManager
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text26
  2453   000F2A                     __ptext26:
  2454                           	callstack 0
  2455   000F2A                     _TMR0_ISR:
  2456                           	callstack 23
  2457   000F2A                     
  2458                           ;mcc_generated_files/tmr0.c: 125:     PIR0bits.TMR0IF = 0;
  2459   000F2A  010E               	movlb	14	; () banked
  2460   000F2C  9BCA               	bcf	202,5,b	;volatile
  2461   000F2E                     
  2462                           ; BSR set to: 14
  2463                           ;mcc_generated_files/tmr0.c: 128:     TMR0_CallBack();
  2464   000F2E  EC93  F006         	call	_TMR0_CallBack	;wreg free
  2465   000F32  0012               	return		;funcret
  2466   000F34                     __end_of_TMR0_ISR:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _TMR0_CallBack *****************
  2470 ;; Defined at:
  2471 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 2
  2492 ;; This function calls:
  2493 ;;		NULL
  2494 ;;		_TMR0_DefaultInterruptHandler
  2495 ;; This function is called by:
  2496 ;;		_TMR0_ISR
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text27
  2501   000D26                     __ptext27:
  2502                           	callstack 0
  2503   000D26                     _TMR0_CallBack:
  2504                           	callstack 23
  2505   000D26                     
  2506                           ;mcc_generated_files/tmr0.c: 137:     if(TMR0_InterruptHandler)
  2507   000D26  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2508   000D28  1029               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2509   000D2A  B4D8               	btfsc	status,2,c
  2510   000D2C  EF9A  F006         	goto	i2u67_41
  2511   000D30  EF9C  F006         	goto	i2u67_40
  2512   000D34                     i2u67_41:
  2513   000D34  EFA9  F006         	goto	i2l244
  2514   000D38                     i2u67_40:
  2515   000D38                     
  2516                           ;mcc_generated_files/tmr0.c: 138:     {;mcc_generated_files/tmr0.c: 139:         TMR0_In
      +                          terruptHandler();
  2517   000D38  D802               	call	i2u68_48
  2518   000D3A  EFA9  F006         	goto	i2u68_49
  2519   000D3E                     i2u68_48:
  2520   000D3E  0005               	push	
  2521   000D40  6EFA               	movwf	pclath,c
  2522   000D42  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2523   000D44  6EFD               	movwf	tosl,c
  2524   000D46  5029               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2525   000D48  6EFE               	movwf	tosh,c
  2526   000D4A  50F8               	movf	tblptru,w,c
  2527   000D4C  6EFF               	movwf	tosu,c
  2528   000D4E  50FA               	movf	pclath,w,c
  2529   000D50  0012               	return		;indir
  2530   000D52                     i2u68_49:
  2531   000D52                     i2l244:
  2532   000D52  0012               	return		;funcret
  2533   000D54                     __end_of_TMR0_CallBack:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2537 ;; Defined at:
  2538 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 1
  2559 ;; This function calls:
  2560 ;;		i2_TMR0_StopTimer
  2561 ;; This function is called by:
  2562 ;;		_TMR0_Initialize
  2563 ;;		_TMR0_CallBack
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text28
  2568   000ECE                     __ptext28:
  2569                           	callstack 0
  2570   000ECE                     _TMR0_DefaultInterruptHandler:
  2571                           	callstack 23
  2572   000ECE  9685               	bcf	133,3,c	;volatile
  2573   000ED0                     
  2574                           ;mcc_generated_files/tmr0.c: 152:     TMR0_StopTimer();
  2575   000ED0  ECA4  F007         	call	i2_TMR0_StopTimer	;wreg free
  2576   000ED4                     
  2577                           ;mcc_generated_files/tmr0.c: 153:     PIE0bits.IOCIE = 1;
  2578   000ED4  010E               	movlb	14	; () banked
  2579   000ED6  89C2               	bsf	194,4,b	;volatile
  2580   000ED8                     
  2581                           ; BSR set to: 14
  2582   000ED8  0012               	return		;funcret
  2583   000EDA                     __end_of_TMR0_DefaultInterruptHandler:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function i2_TMR0_StopTimer *****************
  2587 ;; Defined at:
  2588 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		None
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_TMR0_DefaultInterruptHandler
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text29
  2616   000F48                     __ptext29:
  2617                           	callstack 0
  2618   000F48                     i2_TMR0_StopTimer:
  2619                           	callstack 23
  2620   000F48                     
  2621                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  2622   000F48  9ED5               	bcf	213,7,c	;volatile
  2623   000F4A  0012               	return		;funcret
  2624   000F4C                     __end_ofi2_TMR0_StopTimer:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _PIN_MANAGER_IOC *****************
  2628 ;; Defined at:
  2629 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 3
  2650 ;; This function calls:
  2651 ;;		_IOCCF2_ISR
  2652 ;;		_IOCCF5_ISR
  2653 ;; This function is called by:
  2654 ;;		_INTERRUPT_InterruptManager
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text30
  2659   000D54                     __ptext30:
  2660                           	callstack 0
  2661   000D54                     _PIN_MANAGER_IOC:
  2662                           	callstack 23
  2663   000D54                     
  2664                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF2 == 1)
  2665   000D54  010F               	movlb	15	; () banked
  2666   000D56  A51A               	btfss	26,2,b	;volatile
  2667   000D58  EFB0  F006         	goto	i2u77_41
  2668   000D5C  EFB2  F006         	goto	i2u77_40
  2669   000D60                     i2u77_41:
  2670   000D60  EFB4  F006         	goto	i2l1775
  2671   000D64                     i2u77_40:
  2672   000D64                     
  2673                           ; BSR set to: 15
  2674                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF2_ISR();
  2675   000D64  EC7A  F006         	call	_IOCCF2_ISR	;wreg free
  2676   000D68                     i2l1775:
  2677                           
  2678                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF5 == 1)
  2679   000D68  010F               	movlb	15	; () banked
  2680   000D6A  AB1A               	btfss	26,5,b	;volatile
  2681   000D6C  EFBA  F006         	goto	i2u78_41
  2682   000D70  EFBC  F006         	goto	i2u78_40
  2683   000D74                     i2u78_41:
  2684   000D74  EFBE  F006         	goto	i2l133
  2685   000D78                     i2u78_40:
  2686   000D78                     
  2687                           ; BSR set to: 15
  2688                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCCF5_ISR();
  2689   000D78  EC61  F006         	call	_IOCCF5_ISR	;wreg free
  2690   000D7C                     i2l133:
  2691   000D7C  0012               	return		;funcret
  2692   000D7E                     __end_of_PIN_MANAGER_IOC:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _IOCCF5_ISR *****************
  2696 ;; Defined at:
  2697 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 1
  2718 ;; This function calls:
  2719 ;;		NULL
  2720 ;;		_IOCCF5_DefaultInterruptHandler
  2721 ;; This function is called by:
  2722 ;;		_PIN_MANAGER_IOC
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text31
  2727   000CC2                     __ptext31:
  2728                           	callstack 0
  2729   000CC2                     _IOCCF5_ISR:
  2730                           	callstack 24
  2731   000CC2                     
  2732                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCCF5_InterruptHandler)
  2733   000CC2  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2734   000CC4  102F               	iorwf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2735   000CC6  B4D8               	btfsc	status,2,c
  2736   000CC8  EF68  F006         	goto	i2u65_41
  2737   000CCC  EF6A  F006         	goto	i2u65_40
  2738   000CD0                     i2u65_41:
  2739   000CD0  EF77  F006         	goto	i2l1699
  2740   000CD4                     i2u65_40:
  2741   000CD4                     
  2742                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCCF5_InterruptHandler();
  2743   000CD4  D802               	call	i2u66_48
  2744   000CD6  EF77  F006         	goto	i2u66_49
  2745   000CDA                     i2u66_48:
  2746   000CDA  0005               	push	
  2747   000CDC  6EFA               	movwf	pclath,c
  2748   000CDE  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2749   000CE0  6EFD               	movwf	tosl,c
  2750   000CE2  502F               	movf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2751   000CE4  6EFE               	movwf	tosh,c
  2752   000CE6  50F8               	movf	tblptru,w,c
  2753   000CE8  6EFF               	movwf	tosu,c
  2754   000CEA  50FA               	movf	pclath,w,c
  2755   000CEC  0012               	return		;indir
  2756   000CEE                     i2u66_49:
  2757   000CEE                     i2l1699:
  2758                           
  2759                           ;mcc_generated_files/pin_manager.c: 201:     IOCCFbits.IOCCF5 = 0;
  2760   000CEE  010F               	movlb	15	; () banked
  2761   000CF0  9B1A               	bcf	26,5,b	;volatile
  2762   000CF2                     
  2763                           ; BSR set to: 15
  2764   000CF2  0012               	return		;funcret
  2765   000CF4                     __end_of_IOCCF5_ISR:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  2769 ;; Defined at:
  2770 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		None
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_PIN_MANAGER_Initialize
  2794 ;;		_IOCCF5_ISR
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text32
  2799   000F50                     __ptext32:
  2800                           	callstack 0
  2801   000F50                     _IOCCF5_DefaultInterruptHandler:
  2802                           	callstack 24
  2803   000F50  0012               	return		;funcret
  2804   000F52                     __end_of_IOCCF5_DefaultInterruptHandler:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _IOCCF2_ISR *****************
  2808 ;; Defined at:
  2809 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 2
  2830 ;; This function calls:
  2831 ;;		NULL
  2832 ;;		_movement_Detect_Interrupt
  2833 ;; This function is called by:
  2834 ;;		_PIN_MANAGER_IOC
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text33
  2839   000CF4                     __ptext33:
  2840                           	callstack 0
  2841   000CF4                     _IOCCF2_ISR:
  2842                           	callstack 23
  2843   000CF4                     
  2844                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCCF2_InterruptHandler)
  2845   000CF4  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2846   000CF6  1031               	iorwf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2847   000CF8  B4D8               	btfsc	status,2,c
  2848   000CFA  EF81  F006         	goto	i2u63_41
  2849   000CFE  EF83  F006         	goto	i2u63_40
  2850   000D02                     i2u63_41:
  2851   000D02  EF90  F006         	goto	i2l1693
  2852   000D06                     i2u63_40:
  2853   000D06                     
  2854                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCCF2_InterruptHandler();
  2855   000D06  D802               	call	i2u64_48
  2856   000D08  EF90  F006         	goto	i2u64_49
  2857   000D0C                     i2u64_48:
  2858   000D0C  0005               	push	
  2859   000D0E  6EFA               	movwf	pclath,c
  2860   000D10  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2861   000D12  6EFD               	movwf	tosl,c
  2862   000D14  5031               	movf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2863   000D16  6EFE               	movwf	tosh,c
  2864   000D18  50F8               	movf	tblptru,w,c
  2865   000D1A  6EFF               	movwf	tosu,c
  2866   000D1C  50FA               	movf	pclath,w,c
  2867   000D1E  0012               	return		;indir
  2868   000D20                     i2u64_49:
  2869   000D20                     i2l1693:
  2870                           
  2871                           ;mcc_generated_files/pin_manager.c: 171:     IOCCFbits.IOCCF2 = 0;
  2872   000D20  010F               	movlb	15	; () banked
  2873   000D22  951A               	bcf	26,2,b	;volatile
  2874   000D24                     
  2875                           ; BSR set to: 15
  2876   000D24  0012               	return		;funcret
  2877   000D26                     __end_of_IOCCF2_ISR:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _movement_Detect_Interrupt *****************
  2881 ;; Defined at:
  2882 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 1
  2903 ;; This function calls:
  2904 ;;		_TMR0_StartTimer
  2905 ;; This function is called by:
  2906 ;;		_PIN_MANAGER_Initialize
  2907 ;;		_IOCCF2_ISR
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text34
  2912   000D7E                     __ptext34:
  2913                           	callstack 0
  2914   000D7E                     _movement_Detect_Interrupt:
  2915                           	callstack 23
  2916   000D7E                     
  2917                           ;mcc_generated_files/pin_manager.c: 220:     ++sensorDebounce;
  2918   000D7E  2A20               	incf	_sensorDebounce^0,f,c
  2919   000D80                     
  2920                           ;mcc_generated_files/pin_manager.c: 222:     if(sensorDebounce == 2)
  2921   000D80  0E02               	movlw	2
  2922   000D82  1820               	xorwf	_sensorDebounce^0,w,c
  2923   000D84  A4D8               	btfss	status,2,c
  2924   000D86  EFC7  F006         	goto	i2u61_41
  2925   000D8A  EFC9  F006         	goto	i2u61_40
  2926   000D8E                     i2u61_41:
  2927   000D8E  EFD1  F006         	goto	i2l1583
  2928   000D92                     i2u61_40:
  2929   000D92  8685               	bsf	133,3,c	;volatile
  2930   000D94                     
  2931                           ;mcc_generated_files/pin_manager.c: 225:         sensorDebounce = 0;
  2932   000D94  0E00               	movlw	0
  2933   000D96  6E20               	movwf	_sensorDebounce^0,c
  2934   000D98                     
  2935                           ;mcc_generated_files/pin_manager.c: 227:         PIE0bits.IOCIE = 0;
  2936   000D98  010E               	movlb	14	; () banked
  2937   000D9A  99C2               	bcf	194,4,b	;volatile
  2938   000D9C                     
  2939                           ; BSR set to: 14
  2940                           ;mcc_generated_files/pin_manager.c: 228:         TMR0_StartTimer();
  2941   000D9C  ECA6  F007         	call	_TMR0_StartTimer	;wreg free
  2942   000DA0                     
  2943                           ;mcc_generated_files/pin_manager.c: 230:         mainFlags.System_MotionFlag = 1;
  2944   000DA0  8621               	bsf	_mainFlags^0,3,c
  2945   000DA2                     i2l1583:
  2946                           
  2947                           ;mcc_generated_files/pin_manager.c: 233:     IOCCFbits.IOCCF2 = 0;
  2948   000DA2  010F               	movlb	15	; () banked
  2949   000DA4  951A               	bcf	26,2,b	;volatile
  2950   000DA6                     
  2951                           ; BSR set to: 15
  2952   000DA6  0012               	return		;funcret
  2953   000DA8                     __end_of_movement_Detect_Interrupt:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _TMR0_StartTimer *****************
  2957 ;; Defined at:
  2958 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		None
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2975 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_movement_Detect_Interrupt
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text35
  2986   000F4C                     __ptext35:
  2987                           	callstack 0
  2988   000F4C                     _TMR0_StartTimer:
  2989                           	callstack 23
  2990   000F4C                     
  2991                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  2992   000F4C  8ED5               	bsf	213,7,c	;volatile
  2993   000F4E  0012               	return		;funcret
  2994   000F50                     __end_of_TMR0_StartTimer:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _EUSART_Transmit_ISR *****************
  2998 ;; Defined at:
  2999 ;;		line 201 in file "mcc_generated_files/eusart.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_EUSART_Initialize
  3023 ;;		_INTERRUPT_InterruptManager
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text36
  3028   000C84                     __ptext36:
  3029                           	callstack 0
  3030   000C84                     _EUSART_Transmit_ISR:
  3031                           	callstack 26
  3032   000C84                     
  3033                           ;mcc_generated_files/eusart.c: 205:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  3034   000C84  0E08               	movlw	8
  3035   000C86  601D               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  3036   000C88  EF48  F006         	goto	i2u93_41
  3037   000C8C  EF4A  F006         	goto	i2u93_40
  3038   000C90                     i2u93_41:
  3039   000C90  EF5E  F006         	goto	i2l459
  3040   000C94                     i2u93_40:
  3041   000C94                     
  3042                           ;mcc_generated_files/eusart.c: 206:     {;mcc_generated_files/eusart.c: 207:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  3043   000C94  501E               	movf	_eusartTxTail^0,w,c
  3044   000C96  0F11               	addlw	low _eusartTxBuffer
  3045   000C98  6ED9               	movwf	fsr2l,c
  3046   000C9A  6ADA               	clrf	fsr2h,c
  3047   000C9C  50DF               	movf	indf2,w,c
  3048   000C9E  6E9A               	movwf	154,c	;volatile
  3049   000CA0  2A1E               	incf	_eusartTxTail^0,f,c	;volatile
  3050   000CA2                     
  3051                           ;mcc_generated_files/eusart.c: 208:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3052   000CA2  0E07               	movlw	7
  3053   000CA4  641E               	cpfsgt	_eusartTxTail^0,c	;volatile
  3054   000CA6  EF57  F006         	goto	i2u94_41
  3055   000CAA  EF59  F006         	goto	i2u94_40
  3056   000CAE                     i2u94_41:
  3057   000CAE  EF5B  F006         	goto	i2l1857
  3058   000CB2                     i2u94_40:
  3059   000CB2                     
  3060                           ;mcc_generated_files/eusart.c: 209:         {;mcc_generated_files/eusart.c: 210:        
      +                               eusartTxTail = 0;
  3061   000CB2  0E00               	movlw	0
  3062   000CB4  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  3063   000CB6                     i2l1857:
  3064                           
  3065                           ;mcc_generated_files/eusart.c: 212:         eusartTxBufferRemaining++;
  3066   000CB6  2A1D               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  3067                           
  3068                           ;mcc_generated_files/eusart.c: 213:     }
  3069   000CB8  EF60  F006         	goto	i2l462
  3070   000CBC                     i2l459:
  3071                           
  3072                           ;mcc_generated_files/eusart.c: 215:     {;mcc_generated_files/eusart.c: 216:         PIE
      +                          3bits.TXIE = 0;
  3073   000CBC  010E               	movlb	14	; () banked
  3074   000CBE  99C5               	bcf	197,4,b	;volatile
  3075   000CC0                     i2l462:
  3076   000CC0  0012               	return		;funcret
  3077   000CC2                     __end_of_EUSART_Transmit_ISR:
  3078                           	callstack 0
  3079                           
  3080 ;; *************** function _EUSART_Receive_ISR *****************
  3081 ;; Defined at:
  3082 ;;		line 220 in file "mcc_generated_files/eusart.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 2
  3103 ;; This function calls:
  3104 ;;		NULL
  3105 ;;		_EUSART_DefaultErrorHandler
  3106 ;;		_EUSART_DefaultFramingErrorHandler
  3107 ;;		_EUSART_DefaultOverrunErrorHandler
  3108 ;;		_EUSART_RxDataHandler
  3109 ;; This function is called by:
  3110 ;;		_EUSART_Initialize
  3111 ;;		_INTERRUPT_InterruptManager
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text37
  3116   000A42                     __ptext37:
  3117                           	callstack 0
  3118   000A42                     _EUSART_Receive_ISR:
  3119                           	callstack 24
  3120   000A42                     
  3121                           ;mcc_generated_files/eusart.c: 223:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  3122   000A42  501C               	movf	_eusartRxHead^0,w,c
  3123   000A44  0F01               	addlw	low _eusartRxStatusBuffer
  3124   000A46  6ED9               	movwf	fsr2l,c
  3125   000A48  6ADA               	clrf	fsr2h,c
  3126   000A4A  6ADF               	clrf	indf2,c
  3127   000A4C                     
  3128                           ;mcc_generated_files/eusart.c: 225:     if(RC1STAbits.FERR){
  3129   000A4C  A49D               	btfss	157,2,c	;volatile
  3130   000A4E  EF2B  F005         	goto	i2u95_41
  3131   000A52  EF2D  F005         	goto	i2u95_40
  3132   000A56                     i2u95_41:
  3133   000A56  EF3F  F005         	goto	i2l1867
  3134   000A5A                     i2u95_40:
  3135   000A5A                     
  3136                           ;mcc_generated_files/eusart.c: 226:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  3137   000A5A  501C               	movf	_eusartRxHead^0,w,c
  3138   000A5C  0F01               	addlw	low _eusartRxStatusBuffer
  3139   000A5E  6ED9               	movwf	fsr2l,c
  3140   000A60  6ADA               	clrf	fsr2h,c
  3141   000A62  82DF               	bsf	indf2,1,c
  3142   000A64                     
  3143                           ;mcc_generated_files/eusart.c: 227:         EUSART_FramingErrorHandler();
  3144   000A64  D802               	call	i2u96_48
  3145   000A66  EF3F  F005         	goto	i2u96_49
  3146   000A6A                     i2u96_48:
  3147   000A6A  0005               	push	
  3148   000A6C  6EFA               	movwf	pclath,c
  3149   000A6E  5026               	movf	_EUSART_FramingErrorHandler^0,w,c
  3150   000A70  6EFD               	movwf	tosl,c
  3151   000A72  5027               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  3152   000A74  6EFE               	movwf	tosh,c
  3153   000A76  50F8               	movf	tblptru,w,c
  3154   000A78  6EFF               	movwf	tosu,c
  3155   000A7A  50FA               	movf	pclath,w,c
  3156   000A7C  0012               	return		;indir
  3157   000A7E                     i2u96_49:
  3158   000A7E                     i2l1867:
  3159                           
  3160                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.OERR){
  3161   000A7E  A29D               	btfss	157,1,c	;volatile
  3162   000A80  EF44  F005         	goto	i2u97_41
  3163   000A84  EF46  F005         	goto	i2u97_40
  3164   000A88                     i2u97_41:
  3165   000A88  EF58  F005         	goto	i2l1873
  3166   000A8C                     i2u97_40:
  3167   000A8C                     
  3168                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  3169   000A8C  501C               	movf	_eusartRxHead^0,w,c
  3170   000A8E  0F01               	addlw	low _eusartRxStatusBuffer
  3171   000A90  6ED9               	movwf	fsr2l,c
  3172   000A92  6ADA               	clrf	fsr2h,c
  3173   000A94  84DF               	bsf	indf2,2,c
  3174   000A96                     
  3175                           ;mcc_generated_files/eusart.c: 232:         EUSART_OverrunErrorHandler();
  3176   000A96  D802               	call	i2u98_48
  3177   000A98  EF58  F005         	goto	i2u98_49
  3178   000A9C                     i2u98_48:
  3179   000A9C  0005               	push	
  3180   000A9E  6EFA               	movwf	pclath,c
  3181   000AA0  5024               	movf	_EUSART_OverrunErrorHandler^0,w,c
  3182   000AA2  6EFD               	movwf	tosl,c
  3183   000AA4  5025               	movf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  3184   000AA6  6EFE               	movwf	tosh,c
  3185   000AA8  50F8               	movf	tblptru,w,c
  3186   000AAA  6EFF               	movwf	tosu,c
  3187   000AAC  50FA               	movf	pclath,w,c
  3188   000AAE  0012               	return		;indir
  3189   000AB0                     i2u98_49:
  3190   000AB0                     i2l1873:
  3191                           
  3192                           ;mcc_generated_files/eusart.c: 235:     if(eusartRxStatusBuffer[eusartRxHead].status){
  3193   000AB0  501C               	movf	_eusartRxHead^0,w,c
  3194   000AB2  0F01               	addlw	low _eusartRxStatusBuffer
  3195   000AB4  6ED9               	movwf	fsr2l,c
  3196   000AB6  6ADA               	clrf	fsr2h,c
  3197   000AB8  50DF               	movf	indf2,w,c
  3198   000ABA  B4D8               	btfsc	status,2,c
  3199   000ABC  EF62  F005         	goto	i2u99_41
  3200   000AC0  EF64  F005         	goto	i2u99_40
  3201   000AC4                     i2u99_41:
  3202   000AC4  EF73  F005         	goto	i2l1877
  3203   000AC8                     i2u99_40:
  3204   000AC8                     
  3205                           ;mcc_generated_files/eusart.c: 236:         EUSART_ErrorHandler();
  3206   000AC8  D802               	call	i2u100_48
  3207   000ACA  EF71  F005         	goto	i2u100_49
  3208   000ACE                     i2u100_48:
  3209   000ACE  0005               	push	
  3210   000AD0  6EFA               	movwf	pclath,c
  3211   000AD2  5022               	movf	_EUSART_ErrorHandler^0,w,c
  3212   000AD4  6EFD               	movwf	tosl,c
  3213   000AD6  5023               	movf	(_EUSART_ErrorHandler+1)^0,w,c
  3214   000AD8  6EFE               	movwf	tosh,c
  3215   000ADA  50F8               	movf	tblptru,w,c
  3216   000ADC  6EFF               	movwf	tosu,c
  3217   000ADE  50FA               	movf	pclath,w,c
  3218   000AE0  0012               	return		;indir
  3219   000AE2                     i2u100_49:
  3220                           
  3221                           ;mcc_generated_files/eusart.c: 237:     } else {
  3222   000AE2  EF75  F005         	goto	i2l469
  3223   000AE6                     i2l1877:
  3224                           
  3225                           ;mcc_generated_files/eusart.c: 238:         EUSART_RxDataHandler();
  3226   000AE6  ECD4  F006         	call	_EUSART_RxDataHandler	;wreg free
  3227   000AEA                     i2l469:
  3228   000AEA  0012               	return		;funcret
  3229   000AEC                     __end_of_EUSART_Receive_ISR:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  3233 ;; Defined at:
  3234 ;;		line 258 in file "mcc_generated_files/eusart.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		None
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_EUSART_Initialize
  3258 ;;		_EUSART_Receive_ISR
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text38
  3263   000F34                     __ptext38:
  3264                           	callstack 0
  3265   000F34                     _EUSART_DefaultOverrunErrorHandler:
  3266                           	callstack 25
  3267   000F34                     
  3268                           ;mcc_generated_files/eusart.c: 261:     RC1STAbits.CREN = 0;
  3269   000F34  989D               	bcf	157,4,c	;volatile
  3270                           
  3271                           ;mcc_generated_files/eusart.c: 262:     RC1STAbits.CREN = 1;
  3272   000F36  889D               	bsf	157,4,c	;volatile
  3273   000F38  0012               	return		;funcret
  3274   000F3A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  3278 ;; Defined at:
  3279 ;;		line 256 in file "mcc_generated_files/eusart.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		None
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_EUSART_Initialize
  3303 ;;		_EUSART_Receive_ISR
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text39
  3308   000F52                     __ptext39:
  3309                           	callstack 0
  3310   000F52                     _EUSART_DefaultFramingErrorHandler:
  3311                           	callstack 25
  3312   000F52  0012               	return		;funcret
  3313   000F54                     __end_of_EUSART_DefaultFramingErrorHandler:
  3314                           	callstack 0
  3315                           
  3316 ;; *************** function _EUSART_DefaultErrorHandler *****************
  3317 ;; Defined at:
  3318 ;;		line 266 in file "mcc_generated_files/eusart.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 1
  3339 ;; This function calls:
  3340 ;;		_EUSART_RxDataHandler
  3341 ;; This function is called by:
  3342 ;;		_EUSART_Initialize
  3343 ;;		_EUSART_Receive_ISR
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text40
  3348   000F3A                     __ptext40:
  3349                           	callstack 0
  3350   000F3A                     _EUSART_DefaultErrorHandler:
  3351                           	callstack 24
  3352   000F3A                     
  3353                           ;mcc_generated_files/eusart.c: 267:     EUSART_RxDataHandler();
  3354   000F3A  ECD4  F006         	call	_EUSART_RxDataHandler	;wreg free
  3355   000F3E  0012               	return		;funcret
  3356   000F40                     __end_of_EUSART_DefaultErrorHandler:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _EUSART_RxDataHandler *****************
  3360 ;; Defined at:
  3361 ;;		line 244 in file "mcc_generated_files/eusart.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_EUSART_Receive_ISR
  3385 ;;		_EUSART_DefaultErrorHandler
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text41
  3390   000DA8                     __ptext41:
  3391                           	callstack 0
  3392   000DA8                     _EUSART_RxDataHandler:
  3393                           	callstack 25
  3394   000DA8                     
  3395                           ;mcc_generated_files/eusart.c: 246:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  3396   000DA8  501C               	movf	_eusartRxHead^0,w,c
  3397   000DAA  0F09               	addlw	low _eusartRxBuffer
  3398   000DAC  6ED9               	movwf	fsr2l,c
  3399   000DAE  6ADA               	clrf	fsr2h,c
  3400   000DB0  CF99 FFDF          	movff	3993,indf2	;volatile
  3401   000DB4  2A1C               	incf	_eusartRxHead^0,f,c	;volatile
  3402   000DB6                     
  3403                           ;mcc_generated_files/eusart.c: 247:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3404   000DB6  0E07               	movlw	7
  3405   000DB8  641C               	cpfsgt	_eusartRxHead^0,c	;volatile
  3406   000DBA  EFE1  F006         	goto	i2u62_41
  3407   000DBE  EFE3  F006         	goto	i2u62_40
  3408   000DC2                     i2u62_41:
  3409   000DC2  EFE5  F006         	goto	i2l1609
  3410   000DC6                     i2u62_40:
  3411   000DC6                     
  3412                           ;mcc_generated_files/eusart.c: 248:     {;mcc_generated_files/eusart.c: 249:         eus
      +                          artRxHead = 0;
  3413   000DC6  0E00               	movlw	0
  3414   000DC8  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  3415   000DCA                     i2l1609:
  3416                           
  3417                           ;mcc_generated_files/eusart.c: 251:     eusartRxCount++;
  3418   000DCA  2A1A               	incf	_eusartRxCount^0,f,c	;volatile
  3419   000DCC                     
  3420                           ;mcc_generated_files/eusart.c: 253:     mainFlags.System_BluetoothReceive = 1;
  3421   000DCC  8821               	bsf	_mainFlags^0,4,c
  3422   000DCE  0012               	return		;funcret
  3423   000DD0                     __end_of_EUSART_RxDataHandler:
  3424                           	callstack 0
  3425                           
  3426                           	psect	smallconst
  3427   000800                     __psmallconst:
  3428                           	callstack 0
  3429   000800  00                 	db	0
  3430   000801  00                 	db	0	; dummy byte at the end
  3431   000000                     
  3432                           	psect	text42
  3433   000000                     __ptext42:
  3434                           	callstack 0
  3435   000000                     
  3436                           	psect	rparam
  3437   000000                     
  3438                           	psect	temp
  3439   000041                     btemp:
  3440                           	callstack 0
  3441   000041                     	ds	1
  3442   000000                     int$flags	set	btemp
  3443   000000                     wtemp8	set	btemp+1
  3444   000000                     ttemp5	set	btemp+1
  3445   000000                     ttemp6	set	btemp+4
  3446   000000                     ttemp7	set	btemp+8
  3447                           
  3448                           	psect	config
  3449                           
  3450                           ;Config register CONFIG1L @ 0x300000
  3451                           ;	External Oscillator mode Selection bits
  3452                           ;	FEXTOSC = OFF, Oscillator not enabled
  3453                           ;	Power-up default value for COSC bits
  3454                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3455   300000                     	org	3145728
  3456   300000  EC                 	db	236
  3457                           
  3458                           ;Config register CONFIG1H @ 0x300001
  3459                           ;	Clock Out Enable bit
  3460                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3461                           ;	Clock Switch Enable bit
  3462                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3463                           ;	Fail-Safe Clock Monitor Enable bit
  3464                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3465   300001                     	org	3145729
  3466   300001  FF                 	db	255
  3467                           
  3468                           ;Config register CONFIG2L @ 0x300002
  3469                           ;	Master Clear Enable bit
  3470                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3471                           ;	Power-up Timer Enable bit
  3472                           ;	PWRTE = OFF, Power up timer disabled
  3473                           ;	Low-power BOR enable bit
  3474                           ;	LPBOREN = OFF, ULPBOR disabled
  3475                           ;	Brown-out Reset Enable bits
  3476                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
  3477   300002                     	org	3145730
  3478   300002  BF                 	db	191
  3479                           
  3480                           ;Config register CONFIG2H @ 0x300003
  3481                           ;	Brown Out Reset Voltage selection bits
  3482                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3483                           ;	ZCD Disable bit
  3484                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3485                           ;	PPSLOCK bit One-Way Set Enable bit
  3486                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3487                           ;	Stack Full/Underflow Reset Enable bit
  3488                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3489                           ;	Debugger Enable bit
  3490                           ;	DEBUG = OFF, Background debugger disabled
  3491                           ;	Extended Instruction Set Enable bit
  3492                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3493   300003                     	org	3145731
  3494   300003  FF                 	db	255
  3495                           
  3496                           ;Config register CONFIG3L @ 0x300004
  3497                           ;	WDT Period Select bits
  3498                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3499                           ;	WDT operating mode
  3500                           ;	WDTE = OFF, WDT Disabled
  3501   300004                     	org	3145732
  3502   300004  9F                 	db	159
  3503                           
  3504                           ;Config register CONFIG3H @ 0x300005
  3505                           ;	WDT Window Select bits
  3506                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3507                           ;	WDT input clock selector
  3508                           ;	WDTCCS = SC, Software Control
  3509   300005                     	org	3145733
  3510   300005  FF                 	db	255
  3511                           
  3512                           ;Config register CONFIG4L @ 0x300006
  3513                           ;	Write Protection Block 0
  3514                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3515                           ;	Write Protection Block 1
  3516                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3517                           ;	Write Protection Block 2
  3518                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3519                           ;	Write Protection Block 3
  3520                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3521   300006                     	org	3145734
  3522   300006  FF                 	db	255
  3523                           
  3524                           ;Config register CONFIG4H @ 0x300007
  3525                           ;	Configuration Register Write Protection bit
  3526                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3527                           ;	Boot Block Write Protection bit
  3528                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3529                           ;	Data EEPROM Write Protection bit
  3530                           ;	WRTD = OFF, Data EEPROM not write-protected
  3531                           ;	Scanner Enable bit
  3532                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3533                           ;	Low Voltage Programming Enable bit
  3534                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3535   300007                     	org	3145735
  3536   300007  FF                 	db	255
  3537                           
  3538                           ;Config register CONFIG5L @ 0x300008
  3539                           ;	UserNVM Program Memory Code Protection bit
  3540                           ;	CP = OFF, UserNVM code protection disabled
  3541                           ;	DataNVM Memory Code Protection bit
  3542                           ;	CPD = OFF, DataNVM code protection disabled
  3543   300008                     	org	3145736
  3544   300008  FF                 	db	255
  3545                           
  3546                           ;Config register CONFIG5H @ 0x300009
  3547                           ;	unspecified, using default values
  3548   300009                     	org	3145737
  3549   300009  FF                 	db	255
  3550                           
  3551                           ;Config register CONFIG6L @ 0x30000A
  3552                           ;	Table Read Protection Block 0
  3553                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3554                           ;	Table Read Protection Block 1
  3555                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3556                           ;	Table Read Protection Block 2
  3557                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3558                           ;	Table Read Protection Block 3
  3559                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3560   30000A                     	org	3145738
  3561   30000A  FF                 	db	255
  3562                           
  3563                           ;Config register CONFIG6H @ 0x30000B
  3564                           ;	Boot Block Table Read Protection bit
  3565                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3566   30000B                     	org	3145739
  3567   30000B  FF                 	db	255
  3568                           tosu	equ	0xFFF
  3569                           tosh	equ	0xFFE
  3570                           tosl	equ	0xFFD
  3571                           stkptr	equ	0xFFC
  3572                           pclatu	equ	0xFFB
  3573                           pclath	equ	0xFFA
  3574                           pcl	equ	0xFF9
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           indf0	equ	0xFEF
  3582                           postinc0	equ	0xFEE
  3583                           postdec0	equ	0xFED
  3584                           preinc0	equ	0xFEC
  3585                           plusw0	equ	0xFEB
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           indf1	equ	0xFE7
  3590                           postinc1	equ	0xFE6
  3591                           postdec1	equ	0xFE5
  3592                           preinc1	equ	0xFE4
  3593                           plusw1	equ	0xFE3
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           bsr	equ	0xFE0
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           postdec2	equ	0xFDD
  3600                           preinc2	equ	0xFDC
  3601                           plusw2	equ	0xFDB
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), NULL(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), NULL(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_Recieve_ArmData
    _Transmit_MotionData->_EUSART_Write
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _Recieve_ArmData->_EUSART_Read
    _Recieve_ArmData->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1326
                         _Arm_System
                      _Disarm_System
                    _Recieve_ArmData
                  _SYSTEM_Initialize
                _Transmit_MotionData
 ---------------------------------------------------------------------------------
 (1) _Transmit_MotionData                                  0     0      0      44
                       _EUSART_Write
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
         _IOCCF2_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Recieve_ArmData                                     10    10      0     498
                                              5 COMRAM    10    10      0
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Disarm_System                                        0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Arm_System                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
                   i2_TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF2_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCCF5_ISR                                           0     0      0       0
                                NULL *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCCF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCCF2_ISR                                           0     0      0       0
                                NULL *
          _movement_Detect_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _movement_Detect_Interrupt                            0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (8) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Arm_System
   _Disarm_System
     _TMR0_StopTimer
   _Recieve_ArmData
     _EUSART_Read
     _EUSART_Write
     _EUSART_is_rx_ready
     _EUSART_is_tx_done
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Transmit_MotionData
     _EUSART_Write
     _EUSART_is_tx_done

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF2_ISR
       NULL(Fake) *
       _movement_Detect_Interrupt *
         _TMR0_StartTimer
     _IOCCF5_ISR
       NULL(Fake) *
       _IOCCF5_DefaultInterruptHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
         i2_TMR0_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      40       1       68.1%
BITBIGSFRhhhhhl     55      0       0      25        0.0%
BITBIGSFRhhhhhh     33      0       0      22        0.0%
BITBIGSFRhhhhhh     1B      0       0      21        0.0%
BITBIGSFRhhhhhl     16      0       0      30        0.0%
BITBIGSFRlll        15      0       0      39        0.0%
BITBIGSFRhhhhhl      F      0       0      29        0.0%
BITBIGSFRhhhhhh      E      0       0      23        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      38        0.0%
BITBIGSFRlhhh        A      0       0      34        0.0%
BITBIGSFRhhhhhl      8      0       0      27        0.0%
BITBIGSFRlhlh        4      0       0      36        0.0%
BITBIGSFRhhhhhl      3      0       0      28        0.0%
BITBIGSFRlhhl        2      0       0      35        0.0%
BITBIGSFRlhll        2      0       0      37        0.0%
BITBIGSFRhhhhhl      2      0       0      26        0.0%
BITBIGSFRhhhhhh      2      0       0      24        0.0%
BITBIGSFRhhhhl       2      0       0      31        0.0%
BITBIGSFRhhl         1      0       0      32        0.0%
BITBIGSFRhl          1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      40        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 21 23:46:01 2024

                ?_EUSART_SetRxInterruptHandler 0036                                             l40 0E7E  
                                           l43 0E32                                             l37 0E66  
                                          l140 0EF6                                            l150 0EEC  
                                          l222 0E16                                            l320 0ECC  
                                          l128 0B6A                                            l331 0DF2  
                                          l228 0F46                                            l180 0F42  
                                          l325 0EBC                                            l341 0992  
                                          l318 0EBE                                            l350 096E  
                                          l334 0802                                            l319 0EC0  
                                          l351 0994                                            l247 0EE2  
                                          l434 0E94                                            l346 08EC  
                                          l290 0A26                                            l452 0BF8  
                                          l428 0BE4                                            l453 0C10  
                                          l437 0EA8                                            l447 0C82  
                                          l456 0C38                                            l288 0A34  
                                          l491 0F28                                            l485 0F1E  
                                          l494 0F00                                            l488 0F14  
                                          l497 0F0A                                            u700 0C08  
                                          u701 0C04                                            u710 0C30  
                                          u711 0C2C                                            u720 0EA6  
                                          u800 0824                                            u721 0EA0  
                                          u801 0820                                            u730 0E92  
                                          u810 0858                                            u731 0E8C  
                                          u811 0854                                            u740 0E94  
                                          u900 096E                                            u820 0874  
                                          u901 096A                                            u821 0870  
                                          u750 0C4A                                            u726 0EA8  
                                          u910 0992                                            u830 088E  
                                          u751 0C46                                            u911 098E  
                                          u831 088A                                            u760 0C74  
                                          u840 08B0                                            u920 0DF2  
                                          u761 0C70                                            u841 08AC  
                                          u921 0DEE                                            u690 0BF8  
                                          u850 08D2                                            u691 0BF4  
                                          u851 08CE                                            u860 08EC  
                                          u861 08E8                                            u870 0910  
                                          u790 0810                                            u871 090C  
                                          u791 080C                                            u880 0932  
                                          u881 092E                                            u890 0954  
                                          u891 0950                         ??_EUSART_RxDataHandler 0032  
               ?_EUSART_SetFramingErrorHandler 0036                                            tosl 0FFD  
                                          wreg 0FE8                                   ?_EUSART_Read 0032  
                                         l1701 0F44                                           l1613 0F40  
                                         l1621 0B0C                                           l1711 0C08  
                                         l1631 0B32                                           l1623 0B2A  
                                         l1615 0E18                                           l1721 0C34  
                                         l1713 0C12                                           l1641 0B40  
                                         l1633 0B34                                           l1625 0B2C  
                                         l1617 0AEC                                           l1715 0C1E  
                                         l1723 0C36                                           l1707 0BE8  
                                         l1811 08B0                                           l1651 0B5E  
                                         l1643 0B42                                           l1635 0B3A  
                                         l1627 0B2E                                           l1619 0B0A  
                                         l1741 0C64                                           l1733 0C3A  
                                         l1717 0C20                                           l1709 0BE8  
                                         l1725 0E96                                           l1821 0932  
                                         l1813 08D2                                           l1805 0860  
                                         l1653 0E68                                           l1645 0B44  
                                         l1637 0B3C                                           l1629 0B30  
                                         l1661 0E06                                           l1901 099A  
                                         l1831 0EAA                                           l1751 0C80  
                                         l1743 0C74                                           l1735 0C3A  
                                         l1719 0C30                                           l1823 0954  
                                         l1815 08D8                                           l1807 0874  
                                         l1591 0F02                                           l1671 0B8C  
                                         l1567 0EEE                                           l1647 0B46  
                                         l1639 0B3E                                           l1663 0E12  
                                         l1655 0DF4                                           l1911 09B0  
                                         l1903 099C                                           l1833 0EB2  
                                         l1745 0C78                                           l1737 0C4A  
                                         l1729 0E80                                           l1825 095A  
                                         l1809 088E                                           l1817 08F6  
                                         l1593 0EF8                                           l1681 0BA0  
                                         l1673 0B90                                           l1665 0B6C  
                                         l1569 0EE4                                           l1649 0B52  
                                         l1585 0EDA                                           l1657 0E00  
                                         l1761 0E52                                           l1841 0DD0  
                                         l1921 09D8                                           l1913 09B4  
                                         l1905 099E                                           l1835 0EB6  
                                         l1747 0C7C                                           l1739 0C62  
                                         l1819 0910                                           l1827 0978  
                                         l1595 0F16                                           l1683 0BAC  
                                         l1675 0B94                                           l1667 0B70  
                                         l1659 0E04                                           l1763 0E56  
                                         l1843 0DDC                                           l1931 0A18  
                                         l1923 09E6                                           l1915 09C2  
                                         l1907 09A0                                           l1837 0EB8  
                                         l1749 0C7E                                           l1829 097C  
                                         l1597 0F0C                                           l1685 0BB8  
                                         l1677 0B98                                           l1669 0B7C  
                                         l1765 0E5A                                           l1845 0DDE  
                                         l1925 09EA                                           l1917 09C6  
                                         l1909 09A2                                           l1839 0EBA  
                                         l1783 0802                                           l1599 0F20  
                                         l1687 0BE0                                           l1679 0B9C  
                                         l1767 0E5E                                           l1759 0E4E  
                                         l1927 09FA                                           l1919 09D4  
                                         l1793 082C                                           l1785 0810  
                                         l1769 0E62                                           l1929 0A08  
                                         l1795 083E                                           l1787 0824  
                                         l1797 0842                                           l1799 0858  
                                         l1899 0996                                           u1200 0A34  
                                         u1120 09B0                                           u1201 0A30  
                                         u1121 09AC                                           u1130 09C2  
                                         u1131 09BE                                           u1140 09D4  
                                         u1141 09D0                                           u1150 09E6  
                                         u1151 09E2                                           u1160 09FA  
                                         u1161 09F6                                           u1170 0A08  
                                         u1171 0A04                                           u1180 0A18  
                                         u1181 0A14                                           _LATA 0F83  
                                         u1190 0A26                                           _LATB 0F84  
                                         u1191 0A22                                           _LATC 0F85  
                                         _PMD0 0EE1                                           _PMD1 0EE2  
                                         _PMD2 0EE3                                           _PMD3 0EE4  
                                         _PMD4 0EE5                                           _PMD5 0EE6  
                                         _WPUA 0F10                                           _WPUB 0F18  
                                         _WPUC 0F20                                           _WPUE 0F2D  
                                         _main 0996                                _TMR0_StartTimer 0F4C  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr2l 0FD9                                           btemp 0041  
            fp__IOCCF5_DefaultInterruptHandler 0000               ??_IOCCF5_DefaultInterruptHandler 0032  
              ?_IOCCF5_DefaultInterruptHandler 0032                                           start 00FA  
                                 ___param_bank 0000                                     _Arm_System 0EBE  
                      __end_of_TMR0_Initialize 0E18                 ??_TMR0_DefaultInterruptHandler 0032  
                                ?_EUSART_Write 0032                  __end_of_OSCILLATOR_Initialize 0E80  
                                        ?_main 0032                                          i2l133 0D7C  
                                        i2l240 0F32                                          i2l225 0F4E  
                                        i2l137 0D24                                          i2l153 0F50  
                                        i2l250 0ECE                                          i2l147 0CF2  
                                        i2l228 0F4A                                          i2l252 0ED8  
                                        i2l244 0D52                                          i2l157 0D92  
                                        i2l190 00AC                                          i2l159 0DA6  
                                        i2l185 0040                                          i2l194 00E6  
                                        i2l187 0064                                          i2l195 00E6  
                                        i2l462 0CC0                                          i2l473 0DCE  
                                        i2l482 0F3E                                          i2l459 0CBC  
                                        i2l476 0F52                                          i2l469 0AEA  
                                        i2l479 0F38                                          _OSCEN 0EDC  
                                        _TMR0H 0FD4                                          _TMR0L 0FD3  
                                        _TRISA 0F88                                          _TRISB 0F89  
                                        _TRISC 0F8A                                          _RXPPS 0EB5  
                    ?_TMR0_SetInterruptHandler 0036                     ?_movement_Detect_Interrupt 0032  
                             __end_of_TMR0_ISR 0F34                        __end_of_PIN_MANAGER_IOC 0D7E  
                                        pclath 0FFA                                          pclatu 0FFB  
                                        ttemp5 0042                                          ttemp6 0045  
                                        ttemp7 0049                                          status 0FD8  
                                        wtemp8 0042                                _Recieve_ArmData 0802  
                              __initialization 0E34                                   __end_of_main 0A42  
                               ??_EUSART_Write 0036                    ?_INTERRUPT_InterruptManager 0032  
               ??_EUSART_SetRxInterruptHandler 0038                                         ??_main 0041  
                                __activetblptr 0002                        _IOCCF2_InterruptHandler 0030  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 0F54  
          ??_EUSART_DefaultFramingErrorHandler 0032             ?_EUSART_DefaultFramingErrorHandler 0032  
            _EUSART_DefaultFramingErrorHandler 0F52                        __end_of_TMR0_StartTimer 0F50  
                   _EUSART_OverrunErrorHandler 0024                                         _ANSELA 0F11  
                                       _ANSELB 0F19                                         _ANSELC 0F21  
                                       _T0CON0 0FD5                                         _T0CON1 0FD6  
                   __end_of_EUSART_is_rx_ready 0E96                                         _RC1REG 0F99  
                                       _RC1STA 0F9D                                         _ODCONA 0F0F  
                                       _ODCONB 0F17                                         _RC6PPS 0EFD  
                                       _ODCONC 0F1F                                         i2l1601 0DA8  
                                       i2l1611 0DCC                                         i2l1603 0DB4  
                                       i2l1605 0DB6                                         i2l1607 0DC6  
                                       i2l1703 0D26                                         i2l1609 0DCA  
                                       i2l1705 0D38                                         i2l1563 0F4C  
                                       i2l1571 0D7E                                         i2l1581 0DA0  
                                       i2l1573 0D80                                         i2l1565 0F48  
                                       i2l1575 0D94                                         i2l1583 0DA2  
                                       i2l1577 0D98                                         i2l1755 0F34  
                                       i2l1851 0CA0                                         i2l1579 0D9C  
                                       i2l1691 0D06                                         i2l1771 0D54  
                                       i2l1587 0ED0                                         i2l1757 0F3A  
                                       i2l1861 0A4C                                         i2l1853 0CA2  
                                       i2l1693 0D20                                         i2l1773 0D64  
                                       i2l1589 0ED4                                         i2l1781 0F2E  
                                       i2l1871 0A96                                         i2l1863 0A5A  
                                       i2l1855 0CB2                                         i2l1847 0C84  
                                       i2l1695 0CC2                                         i2l1775 0D68  
                                       i2l1873 0AB0                                         i2l1865 0A64  
                                       i2l1857 0CB6                                         i2l1849 0C94  
                                       i2l1689 0CF4                                         i2l1697 0CD4  
                                       i2l1777 0D78                                         i2l1881 002A  
                                       i2l1875 0AC8                                         i2l1867 0A7E  
                                       i2l1859 0A42                                         i2l1699 0CEE  
                                       i2l1779 0F2A                                         i2l1891 0080  
                                       i2l1883 0038                                         i2l1877 0AE6  
                                       i2l1869 0A8C                                         i2l1893 008E  
                                       i2l1885 004E                                         i2l1895 00BA  
                                       i2l1887 005C                                         i2l1879 001A  
                                       i2l1897 00C8                                         i2l1889 0072  
                                       _INLVLA 0F0D                                         _INLVLB 0F15  
                                       _INLVLC 0F1D                                         _INLVLE 0F2A  
                                       _OSCFRQ 0EDE                                         _TX1REG 0F9A  
                                       _TX1STA 0F9E                            _Transmit_MotionData 0DD0  
                                  ?_Arm_System 0032                            _EUSART_Transmit_ISR 0C84  
                             ?_TMR0_Initialize 0032                                         clear_0 0E3A  
                                       isa$std 0001                           ?_Transmit_MotionData 0032  
                               _PMD_Initialize 0E18                                   __mediumconst 0000  
                                       tblptru 0FF8                          __end_of_TMR0_CallBack 0D54  
                      __end_of_Recieve_ArmData 0996       TMR0_SetInterruptHandler@InterruptHandler 0036  
   IOCCF5_SetInterruptHandler@InterruptHandler 0036     IOCCF2_SetInterruptHandler@InterruptHandler 0036  
                             ?_PIN_MANAGER_IOC 0032                          __end_of_Disarm_System 0EBE  
                         ?_EUSART_Transmit_ISR 0032                                   ??_IOCCF2_ISR 0032  
                                 ??_IOCCF5_ISR 0032                              _SYSTEM_Initialize 0E4E  
                                   __accesstop 0060                        __end_of__initialization 0E40  
                           ?_SYSTEM_Initialize 0032                                  ___rparam_used 0001  
         __end_of_EUSART_SetTxInterruptHandler 0F02                   _EUSART_SetTxInterruptHandler 0EF8  
                               __pcstackCOMRAM 0032                            ??_SYSTEM_Initialize 0038  
                                    ?_TMR0_ISR 0032                          ??_Transmit_MotionData 0037  
                       __end_of_PMD_Initialize 0E34                             __end_of_IOCCF2_ISR 0D26  
                           __end_of_IOCCF5_ISR 0CF4                           _eusartRxStatusBuffer 0001  
              ??_EUSART_SetOverrunErrorHandler 0038                               ?_TMR0_StartTimer 0032  
                    __end_of_SYSTEM_Initialize 0E68                          ??_EUSART_Transmit_ISR 0032  
                         __end_of_EUSART_Write 0C3A                                     __pnvCOMRAM 0022  
                ?_EUSART_SetTxInterruptHandler 0036               _EUSART_TxDefaultInterruptHandler 002C  
             __end_of_TMR0_SetInterruptHandler 0EE4                                     ??_TMR0_ISR 0032  
                 ??_EUSART_DefaultErrorHandler 0032         __end_of_IOCCF5_DefaultInterruptHandler 0F52  
               _IOCCF5_DefaultInterruptHandler 0F50                                ?_PMD_Initialize 0032  
                                _eusartRxCount 001A                                        _SP1BRGH 0F9C  
                                      _SP1BRGL 0F9B                                        _OSCCON1 0ED8  
                                      _OSCCON3 0EDA                    ??_movement_Detect_Interrupt 0032  
                       Recieve_ArmData@msgBuff 0039                                        i2u61_40 0D92  
                                      i2u61_41 0D8E                                        i2u62_40 0DC6  
                                      i2u62_41 0DC2                                        _OSCTUNE 0EDD  
                                      i2u63_40 0D06                                        i2u63_41 0D02  
                                      i2u64_48 0D0C                                        i2u65_40 0CD4  
                                      i2u64_49 0D20                                        i2u65_41 0CD0  
                                      i2u66_48 0CDA                                        i2u67_40 0D38  
                                      i2u66_49 0CEE                                        i2u67_41 0D34  
                                      i2u93_40 0C94                                        i2u77_40 0D64  
                                      i2u68_48 0D3E                                        i2u93_41 0C90  
                                      i2u77_41 0D60                                        i2u68_49 0D52  
                                      i2u94_40 0CB2                                        i2u78_40 0D78  
                                      i2u94_41 0CAE                                        i2u78_41 0D74  
                                      i2u95_40 0A5A                                        i2u95_41 0A56  
                                      i2u97_40 0A8C                                        i2u96_48 0A6A  
                                      i2u97_41 0A88                                        i2u96_49 0A7E  
                                      i2u99_40 0AC8                                        i2u98_48 0A9C  
                                      i2u99_41 0AC4                                        i2u98_49 0AB0  
                                      _SLRCONA 0F0E                                        _SLRCONB 0F16  
                                      _SLRCONC 0F1E                               i2_TMR0_StopTimer 0F48  
                     ??_EUSART_SetErrorHandler 0038                               ?_Recieve_ArmData 0032  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 0800                                        __pcinit 0E34  
                                      __ramtop 0800                                        __ptext0 0996  
                                      __ptext1 0DD0                                        __ptext2 0E4E  
                                      __ptext3 0DF4                                        __ptext4 0EDA  
                                      __ptext5 0E18                                        __ptext6 0AEC  
                                      __ptext7 0EE4                                        __ptext8 0EEE  
                                      __ptext9 0E68                          _OSCILLATOR_Initialize 0E68  
                     ??_PIN_MANAGER_Initialize 0038                                      _IOCCFbits 0F1A  
                                    _IOCCNbits 0F1B                                      _IOCCPbits 0F1C  
                         end_of_initialization 0E40          __end_of_EUSART_SetOverrunErrorHandler 0F16  
                _EUSART_SetOverrunErrorHandler 0F0C                                  __Lmediumconst 0000  
                            _EUSART_Initialize 0B6C                      _movement_Detect_Interrupt 0D7E  
                           ?_EUSART_Initialize 0032                             _EUSART_is_rx_ready 0E80  
                                      postinc0 0FEE                                        postinc2 0FDE  
                                 ??_Arm_System 0036                            ??_EUSART_Initialize 0038  
               ??_EUSART_SetTxInterruptHandler 0038                       _TMR0_SetInterruptHandler 0EDA  
                          ?_EUSART_is_rx_ready 0032                                      _TRISCbits 0F8A  
                 ??_IOCCF2_SetInterruptHandler 0038                   ??_IOCCF5_SetInterruptHandler 0038  
                    __end_of_EUSART_Initialize 0BE6                           ??_EUSART_is_rx_ready 0036  
                           __end_of_Arm_System 0ECE                                 _TMR0_StopTimer 0F44  
                 __end_of_INTERRUPT_Initialize 0F44             __end_of_EUSART_DefaultErrorHandler 0F40  
                   _EUSART_DefaultErrorHandler 0F3A                                   _EUSART_Write 0BE6  
                       ?_OSCILLATOR_Initialize 0032                            start_initialization 0E34  
                                ??_EUSART_Read 0036   EUSART_SetRxInterruptHandler@interruptHandler 0036  
 EUSART_SetTxInterruptHandler@interruptHandler 0036                         __end_of_TMR0_StopTimer 0F48  
                               _sensorDebounce 0020                 ?_EUSART_SetOverrunErrorHandler 0036  
                  __end_of_Transmit_MotionData 0DF4                     _EUSART_FramingErrorHandler 0026  
                             ??_PMD_Initialize 0036                         _EUSART_SetErrorHandler 0F20  
                     __end_ofi2_TMR0_StopTimer 0F4C                    __end_of_EUSART_Transmit_ISR 0CC2  
                                  __pbssCOMRAM 0001                               Recieve_ArmData@i 003D  
                             Recieve_ArmData@j 003F                     __end_of_EUSART_Receive_ISR 0AEC  
             _EUSART_RxDefaultInterruptHandler 002A                            __end_of_EUSART_Read 0C84  
                        _TMR0_InterruptHandler 0028                                ?_TMR0_StopTimer 0032  
                      _IOCCF5_InterruptHandler 002E                   __end_of_EUSART_RxDataHandler 0DD0  
                       _PIN_MANAGER_Initialize 0AEC                           EUSART_Read@readValue 0036  
                                    __pintcode 0008                                   _eusartRxHead 001C  
                                 _eusartTxHead 001F                                   _eusartRxTail 001B  
                                 _eusartTxTail 001E                   ??_INTERRUPT_InterruptManager 0032  
                                    _mainFlags 0021                        _eusartTxBufferRemaining 001D  
                                     _BAUD1CON 0F9F                                    __smallconst 0800  
           __end_of_IOCCF2_SetInterruptHandler 0EF8                     _IOCCF2_SetInterruptHandler 0EEE  
           __end_of_IOCCF5_SetInterruptHandler 0EEE                     _IOCCF5_SetInterruptHandler 0EE4  
                                _TMR0_CallBack 0D26                                  _Disarm_System 0EAA  
                         _INTERRUPT_Initialize 0F40                                 _eusartRxBuffer 0009  
                            ??_TMR0_Initialize 0038                                 _eusartTxBuffer 0011  
       EUSART_SetErrorHandler@interruptHandler 0036                                       _LATCbits 0F85  
                                     _PIE0bits 0EC2                                       _PIE3bits 0EC5  
                            _eusartRxLastError 0019                                       i2u100_48 0ACE  
                                     i2u101_40 002A                                       i2u100_49 0AE2  
                                     i2u101_41 0026                                       i2u110_40 00C8  
                                     i2u102_40 0038                                       i2u110_41 00C4  
                                     i2u102_41 0034                                       i2u103_40 004E  
                                     i2u103_41 004A                                       i2u111_48 00CE  
                                     i2u104_40 005C                                       i2u111_49 00E2  
                                     i2u104_41 0058                                       i2u105_40 0072  
                                     i2u105_41 006E                                       i2u106_40 0080  
                                     i2u106_41 007C                                       i2u107_40 008E  
                                     i2u107_41 008A                                       i2u109_40 00BA  
                                     i2u108_48 0094                                       i2u109_41 00B6  
                                     i2u108_49 00A8                     ??_TMR0_SetInterruptHandler 0038  
                                     _PIR0bits 0ECA                ??_EUSART_SetFramingErrorHandler 0038  
                                     _PIR3bits 0ECD                              _EUSART_is_tx_done 0E96  
                                     _TMR0_ISR 0F2A           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 0F3A            ??_EUSART_DefaultOverrunErrorHandler 0032  
           ?_EUSART_DefaultOverrunErrorHandler 0032              _EUSART_DefaultOverrunErrorHandler 0F34  
                            ??_PIN_MANAGER_IOC 0032                             ?_EUSART_is_tx_done 0032  
            __end_of_movement_Detect_Interrupt 0DA8                            ??_EUSART_is_tx_done 0036  
                               ?_TMR0_CallBack 0032                                    _EUSART_Read 0C3A  
                               ?_Disarm_System 0032                          ?_INTERRUPT_Initialize 0032  
                        fp__EUSART_Receive_ISR 0000                      __end_of_EUSART_is_tx_done 0EAA  
                                     __Hrparam 0000                                       __Lrparam 0000  
                      ??_OSCILLATOR_Initialize 0036                            _EUSART_ErrorHandler 0022  
                            ??_TMR0_StartTimer 0032                    ?_EUSART_DefaultErrorHandler 0032  
                                   _T0CON0bits 0FD5                           _EUSART_RxDataHandler 0DA8  
                                     __ptext10 0F40                                       __ptext11 0B6C  
                                     __ptext20 0BE6                                       __ptext12 0EF8  
                                     __ptext21 0C3A                                       __ptext13 0F02  
                                     __ptext30 0D54                                       __ptext22 0EAA  
                                     __ptext14 0F0C                                       __ptext31 0CC2  
                                     __ptext23 0F44                                       __ptext15 0F16  
                                     __ptext40 0F3A                                       __ptext32 0F50  
                                     __ptext24 0EBE                                       __ptext16 0F20  
                                     __ptext41 0DA8                                       __ptext33 0CF4  
                                     __ptext17 0802                                       __ptext42 0000  
                                     __ptext34 0D7E                                       __ptext26 0F2A  
                                     __ptext18 0E96                                       __ptext35 0F4C  
                                     __ptext27 0D26                                       __ptext19 0E80  
                                     __ptext36 0C84                                       __ptext28 0ECE  
                                     __ptext37 0A42                                       __ptext29 0F48  
                                     __ptext38 0F34                                       __ptext39 0F52  
                                   _IOCCF2_ISR 0CF4                                     _IOCCF5_ISR 0CC2  
         __end_of_TMR0_DefaultInterruptHandler 0EDA                   _TMR0_DefaultInterruptHandler 0ECE  
                      ?_EUSART_SetErrorHandler 0036                                     _RC1STAbits 0F9D  
EUSART_SetOverrunErrorHandler@interruptHandler 0036                                       isa$xinst 0000  
                                     int$flags 0041                   fp__movement_Detect_Interrupt 0000  
                            ?i2_TMR0_StopTimer 0032                              ??_Recieve_ArmData 0037  
           __end_of_INTERRUPT_InterruptManager 00FA                     _INTERRUPT_InterruptManager 0008  
        __end_of_EUSART_SetFramingErrorHandler 0F20                  _EUSART_SetFramingErrorHandler 0F16  
                           ??i2_TMR0_StopTimer 0032                                     _INTCONbits 0FF2  
                              ??_TMR0_CallBack 0032                          ?_EUSART_RxDataHandler 0032  
                              ??_Disarm_System 0036                         ??_INTERRUPT_Initialize 0036  
                                     intlevel2 0000                               ??_TMR0_StopTimer 0036  
                       fp__EUSART_Transmit_ISR 0000                        ?_PIN_MANAGER_Initialize 0032  
               __end_of_EUSART_SetErrorHandler 0F2A           __end_of_EUSART_SetRxInterruptHandler 0F0C  
                 _EUSART_SetRxInterruptHandler 0F02                fp__TMR0_DefaultInterruptHandler 0000  
                ?_TMR0_DefaultInterruptHandler 0032                             _EUSART_Receive_ISR 0A42  
EUSART_SetFramingErrorHandler@interruptHandler 0036                            ?_EUSART_Receive_ISR 0032  
                fp__EUSART_DefaultErrorHandler 0000                                _TMR0_Initialize 0DF4  
                  ?_IOCCF2_SetInterruptHandler 0036                    ?_IOCCF5_SetInterruptHandler 0036  
                                   _TX1STAbits 0F9E                             EUSART_Write@txData 0036  
                                  ?_IOCCF2_ISR 0032                                    ?_IOCCF5_ISR 0032  
               __end_of_PIN_MANAGER_Initialize 0B6C                                _PIN_MANAGER_IOC 0D54  
                         ??_EUSART_Receive_ISR 0032  
