

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 23:06:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18LF25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 21/07/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18LF25K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _SP1BRGH	set	3996
    87   000000                     _TX1STA	set	3998
    88   000000                     _T0CON0	set	4053
    89   000000                     _IOCCPbits	set	3868
    90   000000                     _IOCCNbits	set	3867
    91   000000                     _IOCCFbits	set	3866
    92   000000                     _INLVLC	set	3869
    93   000000                     _SLRCONC	set	3870
    94   000000                     _ODCONC	set	3871
    95   000000                     _WPUC	set	3872
    96   000000                     _OSCTUNE	set	3805
    97   000000                     _OSCFRQ	set	3806
    98                           
    99                           	psect	nvCOMRAM
   100   000022                     __pnvCOMRAM:
   101                           	callstack 0
   102   000022                     _EUSART_ErrorHandler:
   103                           	callstack 0
   104   000022                     	ds	2
   105   000024                     _EUSART_OverrunErrorHandler:
   106                           	callstack 0
   107   000024                     	ds	2
   108   000026                     _EUSART_FramingErrorHandler:
   109                           	callstack 0
   110   000026                     	ds	2
   111   000028                     _TMR0_InterruptHandler:
   112                           	callstack 0
   113   000028                     	ds	2
   114   00002A                     _EUSART_RxDefaultInterruptHandler:
   115                           	callstack 0
   116   00002A                     	ds	2
   117   00002C                     _EUSART_TxDefaultInterruptHandler:
   118                           	callstack 0
   119   00002C                     	ds	2
   120   00002E                     _IOCCF5_InterruptHandler:
   121                           	callstack 0
   122   00002E                     	ds	2
   123   000030                     _IOCCF2_InterruptHandler:
   124                           	callstack 0
   125   000030                     	ds	2
   126   000000                     _RC1STAbits	set	3997
   127   000000                     _TX1STAbits	set	3998
   128   000000                     _TRISCbits	set	3978
   129   000000                     _T0CON0bits	set	4053
   130   000000                     _LATCbits	set	3973
   131   000000                     _RXPPS	set	3765
   132   000000                     _PIE0bits	set	3778
   133   000000                     _OSCCON1	set	3800
   134   000000                     _OSCCON3	set	3802
   135   000000                     _OSCEN	set	3804
   136   000000                     _PMD0	set	3809
   137   000000                     _RC6PPS	set	3837
   138   000000                     _INLVLA	set	3853
   139   000000                     _SLRCONA	set	3854
   140   000000                     _ODCONA	set	3855
   141   000000                     _WPUA	set	3856
   142   000000                     _ANSELA	set	3857
   143   000000                     _ANSELB	set	3865
   144   000000                     _ANSELC	set	3873
   145   000000                     _LATA	set	3971
   146   000000                     _PMD5	set	3814
   147   000000                     _PMD4	set	3813
   148   000000                     _PMD3	set	3812
   149   000000                     _PMD2	set	3811
   150   000000                     _PMD1	set	3810
   151   000000                     _TRISA	set	3976
   152   000000                     _LATC	set	3973
   153   000000                     _LATB	set	3972
   154   000000                     _RC1REG	set	3993
   155   000000                     _TX1REG	set	3994
   156   000000                     _SP1BRGL	set	3995
   157   000000                     _RC1STA	set	3997
   158   000000                     _BAUD1CON	set	3999
   159   000000                     _TMR0L	set	4051
   160   000000                     _TMR0H	set	4052
   161   000000                     _T0CON1	set	4054
   162   000000                     _INTCONbits	set	4082
   163   000000                     _TRISC	set	3978
   164   000000                     _TRISB	set	3977
   165   000000                     _INLVLE	set	3882
   166   000000                     _WPUE	set	3885
   167   000000                     _INLVLB	set	3861
   168   000000                     _SLRCONB	set	3862
   169   000000                     _ODCONB	set	3863
   170   000000                     _WPUB	set	3864
   171   000000                     _PIE3bits	set	3781
   172   000000                     _PIR0bits	set	3786
   173   000000                     _PIR3bits	set	3789
   174                           
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178   000B98                     __pcinit:
   179                           	callstack 0
   180   000B98                     start_initialization:
   181                           	callstack 0
   182   000B98                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Clear objects allocated to COMRAM (33 bytes)
   186   000B98  EE00  F001         	lfsr	0,__pbssCOMRAM
   187   000B9C  0E21               	movlw	33
   188   000B9E                     clear_0:
   189   000B9E  6AEE               	clrf	postinc0,c
   190   000BA0  06E8               	decf	wreg,f,c
   191   000BA2  E1FD               	bnz	clear_0
   192   000BA4                     end_of_initialization:
   193                           	callstack 0
   194   000BA4                     __end_of__initialization:
   195                           	callstack 0
   196   000BA4  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197   000BA6  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198   000BA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199   000BAA  6EF8               	movwf	tblptru,c
   200   000BAC  0100               	movlb	0
   201   000BAE  EFD3  F004         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204   000001                     __pbssCOMRAM:
   205                           	callstack 0
   206   000001                     _eusartRxStatusBuffer:
   207                           	callstack 0
   208   000001                     	ds	8
   209   000009                     _eusartRxBuffer:
   210                           	callstack 0
   211   000009                     	ds	8
   212   000011                     _eusartTxBuffer:
   213                           	callstack 0
   214   000011                     	ds	8
   215   000019                     _eusartRxLastError:
   216                           	callstack 0
   217   000019                     	ds	1
   218   00001A                     _eusartRxCount:
   219                           	callstack 0
   220   00001A                     	ds	1
   221   00001B                     _eusartRxTail:
   222                           	callstack 0
   223   00001B                     	ds	1
   224   00001C                     _eusartRxHead:
   225                           	callstack 0
   226   00001C                     	ds	1
   227   00001D                     _eusartTxBufferRemaining:
   228                           	callstack 0
   229   00001D                     	ds	1
   230   00001E                     _eusartTxTail:
   231                           	callstack 0
   232   00001E                     	ds	1
   233   00001F                     _eusartTxHead:
   234                           	callstack 0
   235   00001F                     	ds	1
   236   000020                     _mainFlags:
   237                           	callstack 0
   238   000020                     	ds	1
   239   000021                     _sensorDebounce:
   240                           	callstack 0
   241   000021                     	ds	1
   242                           
   243                           	psect	cstackCOMRAM
   244   000032                     __pcstackCOMRAM:
   245                           	callstack 0
   246   000032                     ??_INTERRUPT_InterruptManager:
   247   000032                     
   248                           ; 1 bytes @ 0x0
   249   000032                     	ds	4
   250   000036                     IOCCF2_SetInterruptHandler@InterruptHandler:
   251                           	callstack 0
   252   000036                     IOCCF5_SetInterruptHandler@InterruptHandler:
   253                           	callstack 0
   254   000036                     TMR0_SetInterruptHandler@InterruptHandler:
   255                           	callstack 0
   256   000036                     EUSART_SetFramingErrorHandler@interruptHandler:
   257                           	callstack 0
   258   000036                     EUSART_SetOverrunErrorHandler@interruptHandler:
   259                           	callstack 0
   260   000036                     EUSART_SetErrorHandler@interruptHandler:
   261                           	callstack 0
   262   000036                     EUSART_SetTxInterruptHandler@interruptHandler:
   263                           	callstack 0
   264   000036                     EUSART_SetRxInterruptHandler@interruptHandler:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x4
   268   000036                     	ds	2
   269   000038                     
   270                           ; 1 bytes @ 0x6
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 51 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   290 ;;      Params:         0       0       0       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels required when called: 8
   296 ;; This function calls:
   297 ;;		_Arm_System
   298 ;;		_Disarm_System
   299 ;;		_SYSTEM_Initialize
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306   0009A6                     __ptext0:
   307                           	callstack 0
   308   0009A6                     _main:
   309                           	callstack 23
   310   0009A6                     
   311                           ;main.c: 54:     SYSTEM_Initialize();
   312   0009A6  ECD9  F005         	call	_SYSTEM_Initialize	;wreg free
   313   0009AA                     
   314                           ;main.c: 61:     (INTCONbits.GIE = 1);
   315   0009AA  8EF2               	bsf	242,7,c	;volatile
   316   0009AC                     
   317                           ;main.c: 67:     (INTCONbits.PEIE = 1);
   318   0009AC  8CF2               	bsf	242,6,c	;volatile
   319   0009AE                     
   320                           ;main.c: 75:     mainFlags.SystemDisarmed = 0;
   321   0009AE  9220               	bcf	_mainFlags^0,1,c
   322   0009B0                     
   323                           ;main.c: 76:     mainFlags.SystemArmed = 1;
   324   0009B0  8020               	bsf	_mainFlags^0,0,c
   325   0009B2                     l1665:
   326                           
   327                           ;main.c: 79:     {;main.c: 80:         if(mainFlags.SystemDisarmed) Disarm_System();
   328   0009B2  A220               	btfss	_mainFlags^0,1,c
   329   0009B4  EFDE  F004         	goto	u691
   330   0009B8  EFE0  F004         	goto	u690
   331   0009BC                     u691:
   332   0009BC  EFE2  F004         	goto	l1669
   333   0009C0                     u690:
   334   0009C0  ECF2  F005         	call	_Disarm_System	;wreg free
   335   0009C4                     l1669:
   336                           
   337                           ;main.c: 81:         if(mainFlags.SystemArmed) Arm_System();
   338   0009C4  A020               	btfss	_mainFlags^0,0,c
   339   0009C6  EFE7  F004         	goto	u701
   340   0009CA  EFE9  F004         	goto	u700
   341   0009CE                     u701:
   342   0009CE  EFEB  F004         	goto	l1673
   343   0009D2                     u700:
   344   0009D2  ECFA  F005         	call	_Arm_System	;wreg free
   345   0009D6                     l1673:
   346                           
   347                           ;main.c: 83:         if(((IOCCFbits.IOCCF2 == 0) && (T0CON0bits.T0EN == 0))
   348   0009D6  010F               	movlb	15	; () banked
   349   0009D8  B51A               	btfsc	26,2,b	;volatile
   350   0009DA  EFF1  F004         	goto	u711
   351   0009DE  EFF3  F004         	goto	u710
   352   0009E2                     u711:
   353   0009E2  EFFA  F004         	goto	l280
   354   0009E6                     u710:
   355   0009E6                     
   356                           ; BSR set to: 15
   357   0009E6  AED5               	btfss	213,7,c	;volatile
   358   0009E8  EFF8  F004         	goto	u721
   359   0009EC  EFFA  F004         	goto	u720
   360   0009F0                     u721:
   361   0009F0  EF01  F005         	goto	l278
   362   0009F4                     u720:
   363   0009F4                     l280:
   364                           
   365                           ; BSR set to: 15
   366   0009F4  A420               	btfss	_mainFlags^0,2,c
   367   0009F6  EFFF  F004         	goto	u731
   368   0009FA  EF01  F005         	goto	u730
   369   0009FE                     u731:
   370   0009FE  EFD9  F004         	goto	l1665
   371   000A02                     u730:
   372   000A02                     l278:
   373                           
   374                           ; BSR set to: 15
   375   000A02  0003               	sleep		;# 
   376                           
   377                           ;main.c: 88:             __nop();
   378   000A04  0000               	nop	
   379                           
   380                           ;main.c: 89:             __nop();
   381   000A06  0000               	nop	
   382   000A08  EFD9  F004         	goto	l1665
   383   000A0C  EF7D  F000         	goto	start
   384   000A10                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _SYSTEM_Initialize *****************
   388 ;; Defined at:
   389 ;;		line 50 in file "mcc_generated_files/mcc.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   403 ;;      Params:         0       0       0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 7
   410 ;; This function calls:
   411 ;;		_EUSART_Initialize
   412 ;;		_INTERRUPT_Initialize
   413 ;;		_OSCILLATOR_Initialize
   414 ;;		_PIN_MANAGER_Initialize
   415 ;;		_PMD_Initialize
   416 ;;		_TMR0_Initialize
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423   000BB2                     __ptext1:
   424                           	callstack 0
   425   000BB2                     _SYSTEM_Initialize:
   426                           	callstack 23
   427   000BB2                     
   428                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   429   000BB2  EC3A  F006         	call	_INTERRUPT_Initialize	;wreg free
   430   000BB6                     
   431                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   432   000BB6  ECBE  F005         	call	_PMD_Initialize	;wreg free
   433   000BBA                     
   434                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   435   000BBA  EC56  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   436   000BBE                     
   437                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   438   000BBE  ECE6  F005         	call	_OSCILLATOR_Initialize	;wreg free
   439   000BC2                     
   440                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   441   000BC2  ECAC  F005         	call	_TMR0_Initialize	;wreg free
   442   000BC6                     
   443                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
   444   000BC6  EC96  F004         	call	_EUSART_Initialize	;wreg free
   445   000BCA  0012               	return		;funcret
   446   000BCC                     __end_of_SYSTEM_Initialize:
   447                           	callstack 0
   448                           
   449 ;; *************** function _TMR0_Initialize *****************
   450 ;; Defined at:
   451 ;;		line 62 in file "mcc_generated_files/tmr0.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 6
   472 ;; This function calls:
   473 ;;		_TMR0_SetInterruptHandler
   474 ;; This function is called by:
   475 ;;		_SYSTEM_Initialize
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text2
   480   000B58                     __ptext2:
   481                           	callstack 0
   482   000B58                     _TMR0_Initialize:
   483                           	callstack 23
   484   000B58                     
   485                           ;mcc_generated_files/tmr0.c: 67:     T0CON1 = 0x6F;
   486   000B58  0E6F               	movlw	111
   487   000B5A  6ED6               	movwf	214,c	;volatile
   488                           
   489                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0xF3;
   490   000B5C  0EF3               	movlw	243
   491   000B5E  6ED4               	movwf	212,c	;volatile
   492                           
   493                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0x00;
   494   000B60  0E00               	movlw	0
   495   000B62  6ED3               	movwf	211,c	;volatile
   496   000B64                     
   497                           ;mcc_generated_files/tmr0.c: 76:     PIR0bits.TMR0IF = 0;
   498   000B64  010E               	movlb	14	; () banked
   499   000B66  9BCA               	bcf	202,5,b	;volatile
   500   000B68                     
   501                           ; BSR set to: 14
   502                           ;mcc_generated_files/tmr0.c: 79:     PIE0bits.TMR0IE = 1;
   503   000B68  8BC2               	bsf	194,5,b	;volatile
   504   000B6A                     
   505                           ; BSR set to: 14
   506                           ;mcc_generated_files/tmr0.c: 82:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   507   000B6A  0E02               	movlw	low _TMR0_DefaultInterruptHandler
   508   000B6C  6E36               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   509   000B6E  0E0C               	movlw	high _TMR0_DefaultInterruptHandler
   510   000B70  6E37               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   511   000B72  EC07  F006         	call	_TMR0_SetInterruptHandler	;wreg free
   512   000B76                     
   513                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x80;
   514   000B76  0E80               	movlw	128
   515   000B78  6ED5               	movwf	213,c	;volatile
   516   000B7A  0012               	return		;funcret
   517   000B7C                     __end_of_TMR0_Initialize:
   518                           	callstack 0
   519                           
   520 ;; *************** function _TMR0_SetInterruptHandler *****************
   521 ;; Defined at:
   522 ;;		line 143 in file "mcc_generated_files/tmr0.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   525 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   537 ;;      Params:         2       0       0       0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 5
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_TMR0_Initialize
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text3
   552   000C0E                     __ptext3:
   553                           	callstack 0
   554   000C0E                     _TMR0_SetInterruptHandler:
   555                           	callstack 23
   556   000C0E                     
   557                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
   558   000C0E  C036  F028         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   559   000C12  C037  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   560   000C16  0012               	return		;funcret
   561   000C18                     __end_of_TMR0_SetInterruptHandler:
   562                           	callstack 0
   563                           
   564 ;; *************** function _PMD_Initialize *****************
   565 ;; Defined at:
   566 ;;		line 74 in file "mcc_generated_files/mcc.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         0       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 5
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_SYSTEM_Initialize
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text4
   595   000B7C                     __ptext4:
   596                           	callstack 0
   597   000B7C                     _PMD_Initialize:
   598                           	callstack 24
   599   000B7C                     
   600                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   601   000B7C  0E00               	movlw	0
   602   000B7E  010E               	movlb	14	; () banked
   603   000B80  6FE1               	movwf	225,b	;volatile
   604                           
   605                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x7E;
   606   000B82  0E7E               	movlw	126
   607   000B84  6FE2               	movwf	226,b	;volatile
   608                           
   609                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x66;
   610   000B86  0E66               	movlw	102
   611   000B88  6FE3               	movwf	227,b	;volatile
   612                           
   613                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x0F;
   614   000B8A  0E0F               	movlw	15
   615   000B8C  6FE4               	movwf	228,b	;volatile
   616                           
   617                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x11;
   618   000B8E  0E11               	movlw	17
   619   000B90  6FE5               	movwf	229,b	;volatile
   620                           
   621                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   622   000B92  0E00               	movlw	0
   623   000B94  6FE6               	movwf	230,b	;volatile
   624   000B96                     
   625                           ; BSR set to: 14
   626   000B96  0012               	return		;funcret
   627   000B98                     __end_of_PMD_Initialize:
   628                           	callstack 0
   629                           
   630 ;; *************** function _PIN_MANAGER_Initialize *****************
   631 ;; Defined at:
   632 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         0       0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 6
   653 ;; This function calls:
   654 ;;		_IOCCF2_SetInterruptHandler
   655 ;;		_IOCCF5_SetInterruptHandler
   656 ;; This function is called by:
   657 ;;		_SYSTEM_Initialize
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text5
   662   0008AC                     __ptext5:
   663                           	callstack 0
   664   0008AC                     _PIN_MANAGER_Initialize:
   665                           	callstack 23
   666   0008AC                     
   667                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
   668   0008AC  0E00               	movlw	0
   669   0008AE  6E83               	movwf	131,c	;volatile
   670                           
   671                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
   672   0008B0  0E00               	movlw	0
   673   0008B2  6E84               	movwf	132,c	;volatile
   674                           
   675                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x00;
   676   0008B4  0E00               	movlw	0
   677   0008B6  6E85               	movwf	133,c	;volatile
   678                           
   679                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x00;
   680   0008B8  0E00               	movlw	0
   681   0008BA  6E88               	movwf	136,c	;volatile
   682                           
   683                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xC0;
   684   0008BC  0EC0               	movlw	192
   685   0008BE  6E89               	movwf	137,c	;volatile
   686                           
   687                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xA4;
   688   0008C0  0EA4               	movlw	164
   689   0008C2  6E8A               	movwf	138,c	;volatile
   690                           
   691                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x53;
   692   0008C4  0E53               	movlw	83
   693   0008C6  010F               	movlb	15	; () banked
   694   0008C8  6F21               	movwf	33,b	;volatile
   695   0008CA                     
   696                           ; BSR set to: 15
   697                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
   698   0008CA  6919               	setf	25,b	;volatile
   699   0008CC                     
   700                           ; BSR set to: 15
   701                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0xFF;
   702   0008CC  6911               	setf	17,b	;volatile
   703                           
   704                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
   705   0008CE  0E00               	movlw	0
   706   0008D0  6F2D               	movwf	45,b	;volatile
   707                           
   708                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   709   0008D2  0E00               	movlw	0
   710   0008D4  6F18               	movwf	24,b	;volatile
   711                           
   712                           ;mcc_generated_files/pin_manager.c: 88:     WPUA = 0x00;
   713   0008D6  0E00               	movlw	0
   714   0008D8  6F10               	movwf	16,b	;volatile
   715                           
   716                           ;mcc_generated_files/pin_manager.c: 89:     WPUC = 0x00;
   717   0008DA  0E00               	movlw	0
   718   0008DC  6F20               	movwf	32,b	;volatile
   719                           
   720                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
   721   0008DE  0E00               	movlw	0
   722   0008E0  6F0F               	movwf	15,b	;volatile
   723                           
   724                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
   725   0008E2  0E00               	movlw	0
   726   0008E4  6F17               	movwf	23,b	;volatile
   727                           
   728                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
   729   0008E6  0E00               	movlw	0
   730   0008E8  6F1F               	movwf	31,b	;volatile
   731   0008EA                     
   732                           ; BSR set to: 15
   733                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
   734   0008EA  690E               	setf	14,b	;volatile
   735   0008EC                     
   736                           ; BSR set to: 15
   737                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
   738   0008EC  6916               	setf	22,b	;volatile
   739   0008EE                     
   740                           ; BSR set to: 15
   741                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
   742   0008EE  691E               	setf	30,b	;volatile
   743   0008F0                     
   744                           ; BSR set to: 15
   745                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0xFF;
   746   0008F0  690D               	setf	13,b	;volatile
   747   0008F2                     
   748                           ; BSR set to: 15
   749                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0xFF;
   750   0008F2  6915               	setf	21,b	;volatile
   751   0008F4                     
   752                           ; BSR set to: 15
   753                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0xFF;
   754   0008F4  691D               	setf	29,b	;volatile
   755                           
   756                           ;mcc_generated_files/pin_manager.c: 111:     INLVLE = 0x08;
   757   0008F6  0E08               	movlw	8
   758   0008F8  6F2A               	movwf	42,b	;volatile
   759   0008FA                     
   760                           ; BSR set to: 15
   761                           ;mcc_generated_files/pin_manager.c: 118:     IOCCFbits.IOCCF2 = 0;
   762   0008FA  951A               	bcf	26,2,b	;volatile
   763   0008FC                     
   764                           ; BSR set to: 15
   765                           ;mcc_generated_files/pin_manager.c: 120:     IOCCFbits.IOCCF5 = 0;
   766   0008FC  9B1A               	bcf	26,5,b	;volatile
   767   0008FE                     
   768                           ; BSR set to: 15
   769                           ;mcc_generated_files/pin_manager.c: 122:     IOCCNbits.IOCCN2 = 0;
   770   0008FE  951B               	bcf	27,2,b	;volatile
   771   000900                     
   772                           ; BSR set to: 15
   773                           ;mcc_generated_files/pin_manager.c: 124:     IOCCNbits.IOCCN5 = 1;
   774   000900  8B1B               	bsf	27,5,b	;volatile
   775   000902                     
   776                           ; BSR set to: 15
   777                           ;mcc_generated_files/pin_manager.c: 126:     IOCCPbits.IOCCP2 = 1;
   778   000902  851C               	bsf	28,2,b	;volatile
   779   000904                     
   780                           ; BSR set to: 15
   781                           ;mcc_generated_files/pin_manager.c: 128:     IOCCPbits.IOCCP5 = 1;
   782   000904  8B1C               	bsf	28,5,b	;volatile
   783   000906                     
   784                           ; BSR set to: 15
   785                           ;mcc_generated_files/pin_manager.c: 133:     IOCCF2_SetInterruptHandler(movement_Detect_
      +                          Interrupt);
   786   000906  0E0A               	movlw	low _movement_Detect_Interrupt
   787   000908  6E36               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^0,c
   788   00090A  0E0B               	movlw	high _movement_Detect_Interrupt
   789   00090C  6E37               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^0,c
   790   00090E  EC11  F006         	call	_IOCCF2_SetInterruptHandler	;wreg free
   791   000912                     
   792                           ;mcc_generated_files/pin_manager.c: 134:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
   793   000912  0E84               	movlw	low _IOCCF5_DefaultInterruptHandler
   794   000914  6E36               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^0,c
   795   000916  0E0C               	movlw	high _IOCCF5_DefaultInterruptHandler
   796   000918  6E37               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^0,c
   797   00091A  EC0C  F006         	call	_IOCCF5_SetInterruptHandler	;wreg free
   798   00091E                     
   799                           ;mcc_generated_files/pin_manager.c: 137:     PIE0bits.IOCIE = 1;
   800   00091E  010E               	movlb	14	; () banked
   801   000920  89C2               	bsf	194,4,b	;volatile
   802                           
   803                           ;mcc_generated_files/pin_manager.c: 140:     RXPPS = 0x17;
   804   000922  0E17               	movlw	23
   805   000924  6FB5               	movwf	181,b	;volatile
   806                           
   807                           ;mcc_generated_files/pin_manager.c: 141:     RC6PPS = 0x09;
   808   000926  0E09               	movlw	9
   809   000928  6FFD               	movwf	253,b	;volatile
   810   00092A                     
   811                           ; BSR set to: 14
   812   00092A  0012               	return		;funcret
   813   00092C                     __end_of_PIN_MANAGER_Initialize:
   814                           	callstack 0
   815                           
   816 ;; *************** function _IOCCF5_SetInterruptHandler *****************
   817 ;; Defined at:
   818 ;;		line 206 in file "mcc_generated_files/pin_manager.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   821 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   833 ;;      Params:         2       0       0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0
   836 ;;      Totals:         2       0       0       0       0       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 5
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_PIN_MANAGER_Initialize
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text6
   848   000C18                     __ptext6:
   849                           	callstack 0
   850   000C18                     _IOCCF5_SetInterruptHandler:
   851                           	callstack 23
   852   000C18                     
   853                           ;mcc_generated_files/pin_manager.c: 207:     IOCCF5_InterruptHandler = InterruptHandler;
   854   000C18  C036  F02E         	movff	IOCCF5_SetInterruptHandler@InterruptHandler,_IOCCF5_InterruptHandler
   855   000C1C  C037  F02F         	movff	IOCCF5_SetInterruptHandler@InterruptHandler+1,_IOCCF5_InterruptHandler+1
   856   000C20  0012               	return		;funcret
   857   000C22                     __end_of_IOCCF5_SetInterruptHandler:
   858                           	callstack 0
   859                           
   860 ;; *************** function _IOCCF2_SetInterruptHandler *****************
   861 ;; Defined at:
   862 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   865 ;;		 -> movement_Detect_Interrupt(1), 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   877 ;;      Params:         2       0       0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0
   880 ;;      Totals:         2       0       0       0       0       0       0       0       0
   881 ;;Total ram usage:        2 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 5
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_PIN_MANAGER_Initialize
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text7
   892   000C22                     __ptext7:
   893                           	callstack 0
   894   000C22                     _IOCCF2_SetInterruptHandler:
   895                           	callstack 23
   896   000C22                     
   897                           ;mcc_generated_files/pin_manager.c: 177:     IOCCF2_InterruptHandler = InterruptHandler;
   898   000C22  C036  F030         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
   899   000C26  C037  F031         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
   900   000C2A  0012               	return		;funcret
   901   000C2C                     __end_of_IOCCF2_SetInterruptHandler:
   902                           	callstack 0
   903                           
   904 ;; *************** function _OSCILLATOR_Initialize *****************
   905 ;; Defined at:
   906 ;;		line 60 in file "mcc_generated_files/mcc.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         0       0       0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 5
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_SYSTEM_Initialize
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text8
   935   000BCC                     __ptext8:
   936                           	callstack 0
   937   000BCC                     _OSCILLATOR_Initialize:
   938                           	callstack 24
   939   000BCC                     
   940                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
   941   000BCC  0E62               	movlw	98
   942   000BCE  010E               	movlb	14	; () banked
   943   000BD0  6FD8               	movwf	216,b	;volatile
   944                           
   945                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
   946   000BD2  0E00               	movlw	0
   947   000BD4  6FDA               	movwf	218,b	;volatile
   948                           
   949                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
   950   000BD6  0E00               	movlw	0
   951   000BD8  6FDC               	movwf	220,b	;volatile
   952                           
   953                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
   954   000BDA  0E02               	movlw	2
   955   000BDC  6FDE               	movwf	222,b	;volatile
   956                           
   957                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
   958   000BDE  0E00               	movlw	0
   959   000BE0  6FDD               	movwf	221,b	;volatile
   960   000BE2                     
   961                           ; BSR set to: 14
   962   000BE2  0012               	return		;funcret
   963   000BE4                     __end_of_OSCILLATOR_Initialize:
   964                           	callstack 0
   965                           
   966 ;; *************** function _INTERRUPT_Initialize *****************
   967 ;; Defined at:
   968 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   982 ;;      Params:         0       0       0       0       0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 5
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_SYSTEM_Initialize
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text9
   997   000C74                     __ptext9:
   998                           	callstack 0
   999   000C74                     _INTERRUPT_Initialize:
  1000                           	callstack 24
  1001   000C74                     
  1002                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1003   000C74  9AF2               	bcf	242,5,c	;volatile
  1004   000C76  0012               	return		;funcret
  1005   000C78                     __end_of_INTERRUPT_Initialize:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _EUSART_Initialize *****************
  1009 ;; Defined at:
  1010 ;;		line 88 in file "mcc_generated_files/eusart.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 6
  1031 ;; This function calls:
  1032 ;;		_EUSART_SetErrorHandler
  1033 ;;		_EUSART_SetFramingErrorHandler
  1034 ;;		_EUSART_SetOverrunErrorHandler
  1035 ;;		_EUSART_SetRxInterruptHandler
  1036 ;;		_EUSART_SetTxInterruptHandler
  1037 ;; This function is called by:
  1038 ;;		_SYSTEM_Initialize
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text10
  1043   00092C                     __ptext10:
  1044                           	callstack 0
  1045   00092C                     _EUSART_Initialize:
  1046                           	callstack 23
  1047   00092C                     
  1048                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
  1049   00092C  010E               	movlb	14	; () banked
  1050   00092E  9BC5               	bcf	197,5,b	;volatile
  1051   000930                     
  1052                           ; BSR set to: 14
  1053                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1054   000930  0E02               	movlw	low _EUSART_Receive_ISR
  1055   000932  6E36               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  1056   000934  0E08               	movlw	high _EUSART_Receive_ISR
  1057   000936  6E37               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  1058   000938  EC1B  F006         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1059   00093C                     
  1060                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
  1061   00093C  010E               	movlb	14	; () banked
  1062   00093E  99C5               	bcf	197,4,b	;volatile
  1063                           
  1064                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  1065   000940  0E10               	movlw	low _EUSART_Transmit_ISR
  1066   000942  6E36               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  1067   000944  0E0A               	movlw	high _EUSART_Transmit_ISR
  1068   000946  6E37               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  1069   000948  EC16  F006         	call	_EUSART_SetTxInterruptHandler	;wreg free
  1070   00094C                     
  1071                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x0A;
  1072   00094C  0E0A               	movlw	10
  1073   00094E  6E9F               	movwf	159,c	;volatile
  1074   000950                     
  1075                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  1076   000950  0E90               	movlw	144
  1077   000952  6E9D               	movwf	157,c	;volatile
  1078   000954                     
  1079                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  1080   000954  0E24               	movlw	36
  1081   000956  6E9E               	movwf	158,c	;volatile
  1082   000958                     
  1083                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
  1084   000958  0E19               	movlw	25
  1085   00095A  6E9B               	movwf	155,c	;volatile
  1086   00095C                     
  1087                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  1088   00095C  0E00               	movlw	0
  1089   00095E  6E9C               	movwf	156,c	;volatile
  1090   000960                     
  1091                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1092   000960  0E86               	movlw	low _EUSART_DefaultFramingErrorHandler
  1093   000962  6E36               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1094   000964  0E0C               	movlw	high _EUSART_DefaultFramingErrorHandler
  1095   000966  6E37               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1096   000968  EC25  F006         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1097   00096C                     
  1098                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1099   00096C  0E68               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1100   00096E  6E36               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1101   000970  0E0C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1102   000972  6E37               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1103   000974  EC20  F006         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1104   000978                     
  1105                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1106   000978  0E6E               	movlw	low _EUSART_DefaultErrorHandler
  1107   00097A  6E36               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1108   00097C  0E0C               	movlw	high _EUSART_DefaultErrorHandler
  1109   00097E  6E37               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1110   000980  EC2A  F006         	call	_EUSART_SetErrorHandler	;wreg free
  1111                           
  1112                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  1113   000984  0E00               	movlw	0
  1114   000986  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  1115                           
  1116                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  1117   000988  0E00               	movlw	0
  1118   00098A  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1119                           
  1120                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  1121   00098C  0E00               	movlw	0
  1122   00098E  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  1123                           
  1124                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  1125   000990  0E08               	movlw	8
  1126   000992  6E1D               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  1127                           
  1128                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  1129   000994  0E00               	movlw	0
  1130   000996  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  1131                           
  1132                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  1133   000998  0E00               	movlw	0
  1134   00099A  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  1135                           
  1136                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  1137   00099C  0E00               	movlw	0
  1138   00099E  6E1A               	movwf	_eusartRxCount^0,c	;volatile
  1139   0009A0                     
  1140                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
  1141   0009A0  010E               	movlb	14	; () banked
  1142   0009A2  8BC5               	bsf	197,5,b	;volatile
  1143   0009A4                     
  1144                           ; BSR set to: 14
  1145   0009A4  0012               	return		;funcret
  1146   0009A6                     __end_of_EUSART_Initialize:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1150 ;; Defined at:
  1151 ;;		line 276 in file "mcc_generated_files/eusart.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1154 ;;		 -> EUSART_Transmit_ISR(1), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         2       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 5
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_EUSART_Initialize
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text11
  1181   000C2C                     __ptext11:
  1182                           	callstack 0
  1183   000C2C                     _EUSART_SetTxInterruptHandler:
  1184                           	callstack 23
  1185   000C2C                     
  1186                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  1187   000C2C  C036  F02C         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  1188   000C30  C037  F02D         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  1189   000C34  0012               	return		;funcret
  1190   000C36                     __end_of_EUSART_SetTxInterruptHandler:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1194 ;; Defined at:
  1195 ;;		line 280 in file "mcc_generated_files/eusart.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1198 ;;		 -> EUSART_Receive_ISR(1), 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         2       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 5
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_EUSART_Initialize
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text12
  1225   000C36                     __ptext12:
  1226                           	callstack 0
  1227   000C36                     _EUSART_SetRxInterruptHandler:
  1228                           	callstack 23
  1229   000C36                     
  1230                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1231   000C36  C036  F02A         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1232   000C3A  C037  F02B         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1233   000C3E  0012               	return		;funcret
  1234   000C40                     __end_of_EUSART_SetRxInterruptHandler:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1238 ;; Defined at:
  1239 ;;		line 268 in file "mcc_generated_files/eusart.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1242 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         2       0       0       0       0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1257 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 5
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_EUSART_Initialize
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text13
  1269   000C40                     __ptext13:
  1270                           	callstack 0
  1271   000C40                     _EUSART_SetOverrunErrorHandler:
  1272                           	callstack 23
  1273   000C40                     
  1274                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  1275   000C40  C036  F024         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1276   000C44  C037  F025         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1277   000C48  0012               	return		;funcret
  1278   000C4A                     __end_of_EUSART_SetOverrunErrorHandler:
  1279                           	callstack 0
  1280                           
  1281 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1282 ;; Defined at:
  1283 ;;		line 264 in file "mcc_generated_files/eusart.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1286 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         2       0       0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1301 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        2 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; Hardware stack levels required when called: 5
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_EUSART_Initialize
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text14
  1313   000C4A                     __ptext14:
  1314                           	callstack 0
  1315   000C4A                     _EUSART_SetFramingErrorHandler:
  1316                           	callstack 23
  1317   000C4A                     
  1318                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  1319   000C4A  C036  F026         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1320   000C4E  C037  F027         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1321   000C52  0012               	return		;funcret
  1322   000C54                     __end_of_EUSART_SetFramingErrorHandler:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _EUSART_SetErrorHandler *****************
  1326 ;; Defined at:
  1327 ;;		line 272 in file "mcc_generated_files/eusart.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1330 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         2       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        2 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 5
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_EUSART_Initialize
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text15
  1357   000C54                     __ptext15:
  1358                           	callstack 0
  1359   000C54                     _EUSART_SetErrorHandler:
  1360                           	callstack 23
  1361   000C54                     
  1362                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  1363   000C54  C036  F022         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1364   000C58  C037  F023         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1365   000C5C  0012               	return		;funcret
  1366   000C5E                     __end_of_EUSART_SetErrorHandler:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _Disarm_System *****************
  1370 ;; Defined at:
  1371 ;;		line 18 in file "system_core.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 6
  1392 ;; This function calls:
  1393 ;;		_TMR0_StopTimer
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text16
  1400   000BE4                     __ptext16:
  1401                           	callstack 0
  1402   000BE4                     _Disarm_System:
  1403                           	callstack 24
  1404   000BE4                     
  1405                           ;system_core.c: 21:     PIE0bits.IOCIE = 0;
  1406   000BE4  010E               	movlb	14	; () banked
  1407   000BE6  99C2               	bcf	194,4,b	;volatile
  1408                           
  1409                           ;system_core.c: 22:     PIE0bits.TMR0IE = 0;
  1410   000BE8  9BC2               	bcf	194,5,b	;volatile
  1411   000BEA                     
  1412                           ; BSR set to: 14
  1413                           ;system_core.c: 23:     TMR0_StopTimer();
  1414   000BEA  EC3C  F006         	call	_TMR0_StopTimer	;wreg free
  1415   000BEE                     
  1416                           ;system_core.c: 26:     mainFlags.SystemDisarmed_ContinuousSleep = 1;
  1417   000BEE  8420               	bsf	_mainFlags^0,2,c
  1418   000BF0                     
  1419                           ;system_core.c: 27:     mainFlags.SystemDisarmed = 0;
  1420   000BF0  9220               	bcf	_mainFlags^0,1,c
  1421   000BF2  0012               	return		;funcret
  1422   000BF4                     __end_of_Disarm_System:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _TMR0_StopTimer *****************
  1426 ;; Defined at:
  1427 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		None
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 5
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_Disarm_System
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text17
  1456   000C78                     __ptext17:
  1457                           	callstack 0
  1458   000C78                     _TMR0_StopTimer:
  1459                           	callstack 24
  1460   000C78                     
  1461                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  1462   000C78  9ED5               	bcf	213,7,c	;volatile
  1463   000C7A  0012               	return		;funcret
  1464   000C7C                     __end_of_TMR0_StopTimer:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _Arm_System *****************
  1468 ;; Defined at:
  1469 ;;		line 7 in file "system_core.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		None
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 5
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text18
  1498   000BF4                     __ptext18:
  1499                           	callstack 0
  1500   000BF4                     _Arm_System:
  1501                           	callstack 25
  1502   000BF4  848A               	bsf	138,2,c	;volatile
  1503   000BF6                     
  1504                           ;system_core.c: 10:     PIE0bits.IOCIE = 1;
  1505   000BF6  010E               	movlb	14	; () banked
  1506   000BF8  89C2               	bsf	194,4,b	;volatile
  1507                           
  1508                           ;system_core.c: 11:     PIE0bits.TMR0IE = 1;
  1509   000BFA  8BC2               	bsf	194,5,b	;volatile
  1510                           
  1511                           ;system_core.c: 13:     mainFlags.SystemArmed = 0;
  1512   000BFC  9020               	bcf	_mainFlags^0,0,c
  1513                           
  1514                           ;system_core.c: 14:     mainFlags.SystemDisarmed_ContinuousSleep = 0;
  1515   000BFE  9420               	bcf	_mainFlags^0,2,c
  1516   000C00                     
  1517                           ; BSR set to: 14
  1518   000C00  0012               	return		;funcret
  1519   000C02                     __end_of_Arm_System:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _INTERRUPT_InterruptManager *****************
  1523 ;; Defined at:
  1524 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        4 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		NULL
  1547 ;;		_EUSART_Receive_ISR
  1548 ;;		_EUSART_Transmit_ISR
  1549 ;;		_PIN_MANAGER_IOC
  1550 ;;		_TMR0_ISR
  1551 ;; This function is called by:
  1552 ;;		Interrupt level 2
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	intcode
  1557   000008                     __pintcode:
  1558                           	callstack 0
  1559   000008                     _INTERRUPT_InterruptManager:
  1560                           	callstack 23
  1561                           
  1562                           ; BSR set to: 14
  1563                           ;incstack = 0
  1564   000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1565   00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
  1566   00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1567   000012  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1568   000016  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1569   00001A                     
  1570                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  1571   00001A  010E               	movlb	14	; () banked
  1572   00001C  ABC2               	btfss	194,5,b	;volatile
  1573   00001E  EF13  F000         	goto	i2u58_41
  1574   000022  EF15  F000         	goto	i2u58_40
  1575   000026                     i2u58_41:
  1576   000026  EF20  F000         	goto	i2l183
  1577   00002A                     i2u58_40:
  1578   00002A                     
  1579                           ; BSR set to: 14
  1580   00002A  ABCA               	btfss	202,5,b	;volatile
  1581   00002C  EF1A  F000         	goto	i2u59_41
  1582   000030  EF1C  F000         	goto	i2u59_40
  1583   000034                     i2u59_41:
  1584   000034  EF20  F000         	goto	i2l183
  1585   000038                     i2u59_40:
  1586   000038                     
  1587                           ; BSR set to: 14
  1588                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1589   000038  EC2F  F006         	call	_TMR0_ISR	;wreg free
  1590                           
  1591                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1592   00003C  EF73  F000         	goto	i2l193
  1593   000040                     i2l183:
  1594                           
  1595                           ; BSR set to: 14
  1596   000040  A9C2               	btfss	194,4,b	;volatile
  1597   000042  EF25  F000         	goto	i2u60_41
  1598   000046  EF27  F000         	goto	i2u60_40
  1599   00004A                     i2u60_41:
  1600   00004A  EF32  F000         	goto	i2l185
  1601   00004E                     i2u60_40:
  1602   00004E                     
  1603                           ; BSR set to: 14
  1604   00004E  A9CA               	btfss	202,4,b	;volatile
  1605   000050  EF2C  F000         	goto	i2u61_41
  1606   000054  EF2E  F000         	goto	i2u61_40
  1607   000058                     i2u61_41:
  1608   000058  EF32  F000         	goto	i2l185
  1609   00005C                     i2u61_40:
  1610   00005C                     
  1611                           ; BSR set to: 14
  1612                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  1613   00005C  EC70  F005         	call	_PIN_MANAGER_IOC	;wreg free
  1614                           
  1615                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  1616   000060  EF73  F000         	goto	i2l193
  1617   000064                     i2l185:
  1618                           
  1619                           ; BSR set to: 14
  1620   000064  ACF2               	btfss	242,6,c	;volatile
  1621   000066  EF37  F000         	goto	i2u62_41
  1622   00006A  EF39  F000         	goto	i2u62_40
  1623   00006E                     i2u62_41:
  1624   00006E  EF73  F000         	goto	i2l192
  1625   000072                     i2u62_40:
  1626   000072                     
  1627                           ; BSR set to: 14
  1628                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  1629   000072  A9C5               	btfss	197,4,b	;volatile
  1630   000074  EF3E  F000         	goto	i2u63_41
  1631   000078  EF40  F000         	goto	i2u63_40
  1632   00007C                     i2u63_41:
  1633   00007C  EF56  F000         	goto	i2l188
  1634   000080                     i2u63_40:
  1635   000080                     
  1636                           ; BSR set to: 14
  1637   000080  A9CD               	btfss	205,4,b	;volatile
  1638   000082  EF45  F000         	goto	i2u64_41
  1639   000086  EF47  F000         	goto	i2u64_40
  1640   00008A                     i2u64_41:
  1641   00008A  EF56  F000         	goto	i2l188
  1642   00008E                     i2u64_40:
  1643   00008E                     
  1644                           ; BSR set to: 14
  1645                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_TxDefaultInterruptHandler();
  1646   00008E  D802               	call	i2u65_48
  1647   000090  EF54  F000         	goto	i2u65_49
  1648   000094                     i2u65_48:
  1649   000094  0005               	push	
  1650   000096  6EFA               	movwf	pclath,c
  1651   000098  502C               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  1652   00009A  6EFD               	movwf	tosl,c
  1653   00009C  502D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  1654   00009E  6EFE               	movwf	tosh,c
  1655   0000A0  50F8               	movf	tblptru,w,c
  1656   0000A2  6EFF               	movwf	tosu,c
  1657   0000A4  50FA               	movf	pclath,w,c
  1658   0000A6  0012               	return		;indir
  1659   0000A8                     i2u65_49:
  1660                           
  1661                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  1662   0000A8  EF73  F000         	goto	i2l193
  1663   0000AC                     i2l188:
  1664                           
  1665                           ; BSR set to: 14
  1666   0000AC  ABC5               	btfss	197,5,b	;volatile
  1667   0000AE  EF5B  F000         	goto	i2u66_41
  1668   0000B2  EF5D  F000         	goto	i2u66_40
  1669   0000B6                     i2u66_41:
  1670   0000B6  EF73  F000         	goto	i2l192
  1671   0000BA                     i2u66_40:
  1672   0000BA                     
  1673                           ; BSR set to: 14
  1674   0000BA  ABCD               	btfss	205,5,b	;volatile
  1675   0000BC  EF62  F000         	goto	i2u67_41
  1676   0000C0  EF64  F000         	goto	i2u67_40
  1677   0000C4                     i2u67_41:
  1678   0000C4  EF73  F000         	goto	i2l192
  1679   0000C8                     i2u67_40:
  1680   0000C8                     
  1681                           ; BSR set to: 14
  1682                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  1683   0000C8  D802               	call	i2u68_48
  1684   0000CA  EF71  F000         	goto	i2u68_49
  1685   0000CE                     i2u68_48:
  1686   0000CE  0005               	push	
  1687   0000D0  6EFA               	movwf	pclath,c
  1688   0000D2  502A               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  1689   0000D4  6EFD               	movwf	tosl,c
  1690   0000D6  502B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  1691   0000D8  6EFE               	movwf	tosh,c
  1692   0000DA  50F8               	movf	tblptru,w,c
  1693   0000DC  6EFF               	movwf	tosu,c
  1694   0000DE  50FA               	movf	pclath,w,c
  1695   0000E0  0012               	return		;indir
  1696   0000E2                     i2u68_49:
  1697                           
  1698                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  1699   0000E2  EF73  F000         	goto	i2l193
  1700   0000E6                     i2l192:
  1701   0000E6                     i2l193:
  1702   0000E6  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1703   0000EA  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1704   0000EE  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1705   0000F2  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1706   0000F6  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1707   0000F8  0011               	retfie		f
  1708   0000FA                     __end_of_INTERRUPT_InterruptManager:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _TMR0_ISR *****************
  1712 ;; Defined at:
  1713 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 3
  1734 ;; This function calls:
  1735 ;;		_TMR0_CallBack
  1736 ;; This function is called by:
  1737 ;;		_INTERRUPT_InterruptManager
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text20
  1742   000C5E                     __ptext20:
  1743                           	callstack 0
  1744   000C5E                     _TMR0_ISR:
  1745                           	callstack 23
  1746   000C5E                     
  1747                           ;mcc_generated_files/tmr0.c: 125:     PIR0bits.TMR0IF = 0;
  1748   000C5E  010E               	movlb	14	; () banked
  1749   000C60  9BCA               	bcf	202,5,b	;volatile
  1750   000C62                     
  1751                           ; BSR set to: 14
  1752                           ;mcc_generated_files/tmr0.c: 128:     TMR0_CallBack();
  1753   000C62  EC59  F005         	call	_TMR0_CallBack	;wreg free
  1754   000C66  0012               	return		;funcret
  1755   000C68                     __end_of_TMR0_ISR:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _TMR0_CallBack *****************
  1759 ;; Defined at:
  1760 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 2
  1781 ;; This function calls:
  1782 ;;		NULL
  1783 ;;		_TMR0_DefaultInterruptHandler
  1784 ;; This function is called by:
  1785 ;;		_TMR0_ISR
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text21
  1790   000AB2                     __ptext21:
  1791                           	callstack 0
  1792   000AB2                     _TMR0_CallBack:
  1793                           	callstack 23
  1794   000AB2                     
  1795                           ;mcc_generated_files/tmr0.c: 137:     if(TMR0_InterruptHandler)
  1796   000AB2  5028               	movf	_TMR0_InterruptHandler^0,w,c
  1797   000AB4  1029               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1798   000AB6  B4D8               	btfsc	status,2,c
  1799   000AB8  EF60  F005         	goto	i2u46_41
  1800   000ABC  EF62  F005         	goto	i2u46_40
  1801   000AC0                     i2u46_41:
  1802   000AC0  EF6F  F005         	goto	i2l242
  1803   000AC4                     i2u46_40:
  1804   000AC4                     
  1805                           ;mcc_generated_files/tmr0.c: 138:     {;mcc_generated_files/tmr0.c: 139:         TMR0_In
      +                          terruptHandler();
  1806   000AC4  D802               	call	i2u47_48
  1807   000AC6  EF6F  F005         	goto	i2u47_49
  1808   000ACA                     i2u47_48:
  1809   000ACA  0005               	push	
  1810   000ACC  6EFA               	movwf	pclath,c
  1811   000ACE  5028               	movf	_TMR0_InterruptHandler^0,w,c
  1812   000AD0  6EFD               	movwf	tosl,c
  1813   000AD2  5029               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1814   000AD4  6EFE               	movwf	tosh,c
  1815   000AD6  50F8               	movf	tblptru,w,c
  1816   000AD8  6EFF               	movwf	tosu,c
  1817   000ADA  50FA               	movf	pclath,w,c
  1818   000ADC  0012               	return		;indir
  1819   000ADE                     i2u47_49:
  1820   000ADE                     i2l242:
  1821   000ADE  0012               	return		;funcret
  1822   000AE0                     __end_of_TMR0_CallBack:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1826 ;; Defined at:
  1827 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 1
  1848 ;; This function calls:
  1849 ;;		i2_TMR0_StopTimer
  1850 ;; This function is called by:
  1851 ;;		_TMR0_Initialize
  1852 ;;		_TMR0_CallBack
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text22
  1857   000C02                     __ptext22:
  1858                           	callstack 0
  1859   000C02                     _TMR0_DefaultInterruptHandler:
  1860                           	callstack 23
  1861   000C02  9685               	bcf	133,3,c	;volatile
  1862   000C04                     
  1863                           ;mcc_generated_files/tmr0.c: 152:     TMR0_StopTimer();
  1864   000C04  EC3E  F006         	call	i2_TMR0_StopTimer	;wreg free
  1865   000C08                     
  1866                           ;mcc_generated_files/tmr0.c: 153:     PIE0bits.IOCIE = 1;
  1867   000C08  010E               	movlb	14	; () banked
  1868   000C0A  89C2               	bsf	194,4,b	;volatile
  1869   000C0C                     
  1870                           ; BSR set to: 14
  1871   000C0C  0012               	return		;funcret
  1872   000C0E                     __end_of_TMR0_DefaultInterruptHandler:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function i2_TMR0_StopTimer *****************
  1876 ;; Defined at:
  1877 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		None
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_TMR0_DefaultInterruptHandler
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text23
  1905   000C7C                     __ptext23:
  1906                           	callstack 0
  1907   000C7C                     i2_TMR0_StopTimer:
  1908                           	callstack 23
  1909   000C7C                     
  1910                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  1911   000C7C  9ED5               	bcf	213,7,c	;volatile
  1912   000C7E  0012               	return		;funcret
  1913   000C80                     __end_ofi2_TMR0_StopTimer:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _PIN_MANAGER_IOC *****************
  1917 ;; Defined at:
  1918 ;;		line 144 in file "mcc_generated_files/pin_manager.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 3
  1939 ;; This function calls:
  1940 ;;		_IOCCF2_ISR
  1941 ;;		_IOCCF5_ISR
  1942 ;; This function is called by:
  1943 ;;		_INTERRUPT_InterruptManager
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text24
  1948   000AE0                     __ptext24:
  1949                           	callstack 0
  1950   000AE0                     _PIN_MANAGER_IOC:
  1951                           	callstack 23
  1952   000AE0                     
  1953                           ;mcc_generated_files/pin_manager.c: 147:     if(IOCCFbits.IOCCF2 == 1)
  1954   000AE0  010F               	movlb	15	; () banked
  1955   000AE2  A51A               	btfss	26,2,b	;volatile
  1956   000AE4  EF76  F005         	goto	i2u48_41
  1957   000AE8  EF78  F005         	goto	i2u48_40
  1958   000AEC                     i2u48_41:
  1959   000AEC  EF7A  F005         	goto	i2l1587
  1960   000AF0                     i2u48_40:
  1961   000AF0                     
  1962                           ; BSR set to: 15
  1963                           ;mcc_generated_files/pin_manager.c: 148:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 IOCCF2_ISR();
  1964   000AF0  EC40  F005         	call	_IOCCF2_ISR	;wreg free
  1965   000AF4                     i2l1587:
  1966                           
  1967                           ;mcc_generated_files/pin_manager.c: 152:     if(IOCCFbits.IOCCF5 == 1)
  1968   000AF4  010F               	movlb	15	; () banked
  1969   000AF6  AB1A               	btfss	26,5,b	;volatile
  1970   000AF8  EF80  F005         	goto	i2u49_41
  1971   000AFC  EF82  F005         	goto	i2u49_40
  1972   000B00                     i2u49_41:
  1973   000B00  EF84  F005         	goto	i2l131
  1974   000B04                     i2u49_40:
  1975   000B04                     
  1976                           ; BSR set to: 15
  1977                           ;mcc_generated_files/pin_manager.c: 153:     {;mcc_generated_files/pin_manager.c: 154:  
      +                                 IOCCF5_ISR();
  1978   000B04  EC27  F005         	call	_IOCCF5_ISR	;wreg free
  1979   000B08                     i2l131:
  1980   000B08  0012               	return		;funcret
  1981   000B0A                     __end_of_PIN_MANAGER_IOC:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _IOCCF5_ISR *****************
  1985 ;; Defined at:
  1986 ;;		line 191 in file "mcc_generated_files/pin_manager.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 1
  2007 ;; This function calls:
  2008 ;;		NULL
  2009 ;;		_IOCCF5_DefaultInterruptHandler
  2010 ;; This function is called by:
  2011 ;;		_PIN_MANAGER_IOC
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text25
  2016   000A4E                     __ptext25:
  2017                           	callstack 0
  2018   000A4E                     _IOCCF5_ISR:
  2019                           	callstack 24
  2020   000A4E                     
  2021                           ;mcc_generated_files/pin_manager.c: 196:     if(IOCCF5_InterruptHandler)
  2022   000A4E  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2023   000A50  102F               	iorwf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2024   000A52  B4D8               	btfsc	status,2,c
  2025   000A54  EF2E  F005         	goto	i2u44_41
  2026   000A58  EF30  F005         	goto	i2u44_40
  2027   000A5C                     i2u44_41:
  2028   000A5C  EF3D  F005         	goto	i2l1559
  2029   000A60                     i2u44_40:
  2030   000A60                     
  2031                           ;mcc_generated_files/pin_manager.c: 197:     {;mcc_generated_files/pin_manager.c: 198:  
      +                                 IOCCF5_InterruptHandler();
  2032   000A60  D802               	call	i2u45_48
  2033   000A62  EF3D  F005         	goto	i2u45_49
  2034   000A66                     i2u45_48:
  2035   000A66  0005               	push	
  2036   000A68  6EFA               	movwf	pclath,c
  2037   000A6A  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2038   000A6C  6EFD               	movwf	tosl,c
  2039   000A6E  502F               	movf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2040   000A70  6EFE               	movwf	tosh,c
  2041   000A72  50F8               	movf	tblptru,w,c
  2042   000A74  6EFF               	movwf	tosu,c
  2043   000A76  50FA               	movf	pclath,w,c
  2044   000A78  0012               	return		;indir
  2045   000A7A                     i2u45_49:
  2046   000A7A                     i2l1559:
  2047                           
  2048                           ;mcc_generated_files/pin_manager.c: 200:     IOCCFbits.IOCCF5 = 0;
  2049   000A7A  010F               	movlb	15	; () banked
  2050   000A7C  9B1A               	bcf	26,5,b	;volatile
  2051   000A7E                     
  2052                           ; BSR set to: 15
  2053   000A7E  0012               	return		;funcret
  2054   000A80                     __end_of_IOCCF5_ISR:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  2058 ;; Defined at:
  2059 ;;		line 213 in file "mcc_generated_files/pin_manager.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		None
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_PIN_MANAGER_Initialize
  2083 ;;		_IOCCF5_ISR
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text26
  2088   000C84                     __ptext26:
  2089                           	callstack 0
  2090   000C84                     _IOCCF5_DefaultInterruptHandler:
  2091                           	callstack 24
  2092   000C84  0012               	return		;funcret
  2093   000C86                     __end_of_IOCCF5_DefaultInterruptHandler:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _IOCCF2_ISR *****************
  2097 ;; Defined at:
  2098 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		NULL
  2121 ;;		_movement_Detect_Interrupt
  2122 ;; This function is called by:
  2123 ;;		_PIN_MANAGER_IOC
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text27
  2128   000A80                     __ptext27:
  2129                           	callstack 0
  2130   000A80                     _IOCCF2_ISR:
  2131                           	callstack 23
  2132   000A80                     
  2133                           ;mcc_generated_files/pin_manager.c: 166:     if(IOCCF2_InterruptHandler)
  2134   000A80  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2135   000A82  1031               	iorwf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2136   000A84  B4D8               	btfsc	status,2,c
  2137   000A86  EF47  F005         	goto	i2u42_41
  2138   000A8A  EF49  F005         	goto	i2u42_40
  2139   000A8E                     i2u42_41:
  2140   000A8E  EF56  F005         	goto	i2l1553
  2141   000A92                     i2u42_40:
  2142   000A92                     
  2143                           ;mcc_generated_files/pin_manager.c: 167:     {;mcc_generated_files/pin_manager.c: 168:  
      +                                 IOCCF2_InterruptHandler();
  2144   000A92  D802               	call	i2u43_48
  2145   000A94  EF56  F005         	goto	i2u43_49
  2146   000A98                     i2u43_48:
  2147   000A98  0005               	push	
  2148   000A9A  6EFA               	movwf	pclath,c
  2149   000A9C  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2150   000A9E  6EFD               	movwf	tosl,c
  2151   000AA0  5031               	movf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2152   000AA2  6EFE               	movwf	tosh,c
  2153   000AA4  50F8               	movf	tblptru,w,c
  2154   000AA6  6EFF               	movwf	tosu,c
  2155   000AA8  50FA               	movf	pclath,w,c
  2156   000AAA  0012               	return		;indir
  2157   000AAC                     i2u43_49:
  2158   000AAC                     i2l1553:
  2159                           
  2160                           ;mcc_generated_files/pin_manager.c: 170:     IOCCFbits.IOCCF2 = 0;
  2161   000AAC  010F               	movlb	15	; () banked
  2162   000AAE  951A               	bcf	26,2,b	;volatile
  2163   000AB0                     
  2164                           ; BSR set to: 15
  2165   000AB0  0012               	return		;funcret
  2166   000AB2                     __end_of_IOCCF2_ISR:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _movement_Detect_Interrupt *****************
  2170 ;; Defined at:
  2171 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 1
  2192 ;; This function calls:
  2193 ;;		_TMR0_StartTimer
  2194 ;; This function is called by:
  2195 ;;		_PIN_MANAGER_Initialize
  2196 ;;		_IOCCF2_ISR
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text28
  2201   000B0A                     __ptext28:
  2202                           	callstack 0
  2203   000B0A                     _movement_Detect_Interrupt:
  2204                           	callstack 23
  2205   000B0A                     
  2206                           ;mcc_generated_files/pin_manager.c: 220:     ++sensorDebounce;
  2207   000B0A  2A21               	incf	_sensorDebounce^0,f,c
  2208   000B0C                     
  2209                           ;mcc_generated_files/pin_manager.c: 222:     if(sensorDebounce == 3)
  2210   000B0C  0E03               	movlw	3
  2211   000B0E  1821               	xorwf	_sensorDebounce^0,w,c
  2212   000B10  A4D8               	btfss	status,2,c
  2213   000B12  EF8D  F005         	goto	i2u40_41
  2214   000B16  EF8F  F005         	goto	i2u40_40
  2215   000B1A                     i2u40_41:
  2216   000B1A  EF96  F005         	goto	i2l1445
  2217   000B1E                     i2u40_40:
  2218   000B1E  8685               	bsf	133,3,c	;volatile
  2219   000B20                     
  2220                           ;mcc_generated_files/pin_manager.c: 225:         sensorDebounce = 0;
  2221   000B20  0E00               	movlw	0
  2222   000B22  6E21               	movwf	_sensorDebounce^0,c
  2223   000B24                     
  2224                           ;mcc_generated_files/pin_manager.c: 227:         PIE0bits.IOCIE = 0;
  2225   000B24  010E               	movlb	14	; () banked
  2226   000B26  99C2               	bcf	194,4,b	;volatile
  2227   000B28                     
  2228                           ; BSR set to: 14
  2229                           ;mcc_generated_files/pin_manager.c: 228:         TMR0_StartTimer();
  2230   000B28  EC40  F006         	call	_TMR0_StartTimer	;wreg free
  2231   000B2C                     i2l1445:
  2232                           
  2233                           ;mcc_generated_files/pin_manager.c: 231:     IOCCFbits.IOCCF2 = 0;
  2234   000B2C  010F               	movlb	15	; () banked
  2235   000B2E  951A               	bcf	26,2,b	;volatile
  2236   000B30                     
  2237                           ; BSR set to: 15
  2238   000B30  0012               	return		;funcret
  2239   000B32                     __end_of_movement_Detect_Interrupt:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _TMR0_StartTimer *****************
  2243 ;; Defined at:
  2244 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		None
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_movement_Detect_Interrupt
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text29
  2272   000C80                     __ptext29:
  2273                           	callstack 0
  2274   000C80                     _TMR0_StartTimer:
  2275                           	callstack 23
  2276   000C80                     
  2277                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  2278   000C80  8ED5               	bsf	213,7,c	;volatile
  2279   000C82  0012               	return		;funcret
  2280   000C84                     __end_of_TMR0_StartTimer:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _EUSART_Transmit_ISR *****************
  2284 ;; Defined at:
  2285 ;;		line 197 in file "mcc_generated_files/eusart.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_EUSART_Initialize
  2309 ;;		_INTERRUPT_InterruptManager
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text30
  2314   000A10                     __ptext30:
  2315                           	callstack 0
  2316   000A10                     _EUSART_Transmit_ISR:
  2317                           	callstack 26
  2318   000A10                     
  2319                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  2320   000A10  0E08               	movlw	8
  2321   000A12  601D               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  2322   000A14  EF0E  F005         	goto	i2u50_41
  2323   000A18  EF10  F005         	goto	i2u50_40
  2324   000A1C                     i2u50_41:
  2325   000A1C  EF24  F005         	goto	i2l405
  2326   000A20                     i2u50_40:
  2327   000A20                     
  2328                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  2329   000A20  501E               	movf	_eusartTxTail^0,w,c
  2330   000A22  0F11               	addlw	low _eusartTxBuffer
  2331   000A24  6ED9               	movwf	fsr2l,c
  2332   000A26  6ADA               	clrf	fsr2h,c
  2333   000A28  50DF               	movf	indf2,w,c
  2334   000A2A  6E9A               	movwf	154,c	;volatile
  2335   000A2C  2A1E               	incf	_eusartTxTail^0,f,c	;volatile
  2336   000A2E                     
  2337                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2338   000A2E  0E07               	movlw	7
  2339   000A30  641E               	cpfsgt	_eusartTxTail^0,c	;volatile
  2340   000A32  EF1D  F005         	goto	i2u51_41
  2341   000A36  EF1F  F005         	goto	i2u51_40
  2342   000A3A                     i2u51_41:
  2343   000A3A  EF21  F005         	goto	i2l1613
  2344   000A3E                     i2u51_40:
  2345   000A3E                     
  2346                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  2347   000A3E  0E00               	movlw	0
  2348   000A40  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  2349   000A42                     i2l1613:
  2350                           
  2351                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  2352   000A42  2A1D               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  2353                           
  2354                           ;mcc_generated_files/eusart.c: 209:     }
  2355   000A44  EF26  F005         	goto	i2l408
  2356   000A48                     i2l405:
  2357                           
  2358                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          3bits.TXIE = 0;
  2359   000A48  010E               	movlb	14	; () banked
  2360   000A4A  99C5               	bcf	197,4,b	;volatile
  2361   000A4C                     i2l408:
  2362   000A4C  0012               	return		;funcret
  2363   000A4E                     __end_of_EUSART_Transmit_ISR:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _EUSART_Receive_ISR *****************
  2367 ;; Defined at:
  2368 ;;		line 216 in file "mcc_generated_files/eusart.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 2
  2389 ;; This function calls:
  2390 ;;		NULL
  2391 ;;		_EUSART_DefaultErrorHandler
  2392 ;;		_EUSART_DefaultFramingErrorHandler
  2393 ;;		_EUSART_DefaultOverrunErrorHandler
  2394 ;;		_EUSART_RxDataHandler
  2395 ;; This function is called by:
  2396 ;;		_EUSART_Initialize
  2397 ;;		_INTERRUPT_InterruptManager
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text31
  2402   000802                     __ptext31:
  2403                           	callstack 0
  2404   000802                     _EUSART_Receive_ISR:
  2405                           	callstack 24
  2406   000802                     
  2407                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  2408   000802  501C               	movf	_eusartRxHead^0,w,c
  2409   000804  0F01               	addlw	low _eusartRxStatusBuffer
  2410   000806  6ED9               	movwf	fsr2l,c
  2411   000808  6ADA               	clrf	fsr2h,c
  2412   00080A  6ADF               	clrf	indf2,c
  2413   00080C                     
  2414                           ;mcc_generated_files/eusart.c: 221:     if(RC1STAbits.FERR){
  2415   00080C  A49D               	btfss	157,2,c	;volatile
  2416   00080E  EF0B  F004         	goto	i2u52_41
  2417   000812  EF0D  F004         	goto	i2u52_40
  2418   000816                     i2u52_41:
  2419   000816  EF1F  F004         	goto	i2l1623
  2420   00081A                     i2u52_40:
  2421   00081A                     
  2422                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  2423   00081A  501C               	movf	_eusartRxHead^0,w,c
  2424   00081C  0F01               	addlw	low _eusartRxStatusBuffer
  2425   00081E  6ED9               	movwf	fsr2l,c
  2426   000820  6ADA               	clrf	fsr2h,c
  2427   000822  82DF               	bsf	indf2,1,c
  2428   000824                     
  2429                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  2430   000824  D802               	call	i2u53_48
  2431   000826  EF1F  F004         	goto	i2u53_49
  2432   00082A                     i2u53_48:
  2433   00082A  0005               	push	
  2434   00082C  6EFA               	movwf	pclath,c
  2435   00082E  5026               	movf	_EUSART_FramingErrorHandler^0,w,c
  2436   000830  6EFD               	movwf	tosl,c
  2437   000832  5027               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  2438   000834  6EFE               	movwf	tosh,c
  2439   000836  50F8               	movf	tblptru,w,c
  2440   000838  6EFF               	movwf	tosu,c
  2441   00083A  50FA               	movf	pclath,w,c
  2442   00083C  0012               	return		;indir
  2443   00083E                     i2u53_49:
  2444   00083E                     i2l1623:
  2445                           
  2446                           ;mcc_generated_files/eusart.c: 226:     if(RC1STAbits.OERR){
  2447   00083E  A29D               	btfss	157,1,c	;volatile
  2448   000840  EF24  F004         	goto	i2u54_41
  2449   000844  EF26  F004         	goto	i2u54_40
  2450   000848                     i2u54_41:
  2451   000848  EF38  F004         	goto	i2l1629
  2452   00084C                     i2u54_40:
  2453   00084C                     
  2454                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  2455   00084C  501C               	movf	_eusartRxHead^0,w,c
  2456   00084E  0F01               	addlw	low _eusartRxStatusBuffer
  2457   000850  6ED9               	movwf	fsr2l,c
  2458   000852  6ADA               	clrf	fsr2h,c
  2459   000854  84DF               	bsf	indf2,2,c
  2460   000856                     
  2461                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  2462   000856  D802               	call	i2u55_48
  2463   000858  EF38  F004         	goto	i2u55_49
  2464   00085C                     i2u55_48:
  2465   00085C  0005               	push	
  2466   00085E  6EFA               	movwf	pclath,c
  2467   000860  5024               	movf	_EUSART_OverrunErrorHandler^0,w,c
  2468   000862  6EFD               	movwf	tosl,c
  2469   000864  5025               	movf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  2470   000866  6EFE               	movwf	tosh,c
  2471   000868  50F8               	movf	tblptru,w,c
  2472   00086A  6EFF               	movwf	tosu,c
  2473   00086C  50FA               	movf	pclath,w,c
  2474   00086E  0012               	return		;indir
  2475   000870                     i2u55_49:
  2476   000870                     i2l1629:
  2477                           
  2478                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  2479   000870  501C               	movf	_eusartRxHead^0,w,c
  2480   000872  0F01               	addlw	low _eusartRxStatusBuffer
  2481   000874  6ED9               	movwf	fsr2l,c
  2482   000876  6ADA               	clrf	fsr2h,c
  2483   000878  50DF               	movf	indf2,w,c
  2484   00087A  B4D8               	btfsc	status,2,c
  2485   00087C  EF42  F004         	goto	i2u56_41
  2486   000880  EF44  F004         	goto	i2u56_40
  2487   000884                     i2u56_41:
  2488   000884  EF53  F004         	goto	i2l1633
  2489   000888                     i2u56_40:
  2490   000888                     
  2491                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  2492   000888  D802               	call	i2u57_48
  2493   00088A  EF51  F004         	goto	i2u57_49
  2494   00088E                     i2u57_48:
  2495   00088E  0005               	push	
  2496   000890  6EFA               	movwf	pclath,c
  2497   000892  5022               	movf	_EUSART_ErrorHandler^0,w,c
  2498   000894  6EFD               	movwf	tosl,c
  2499   000896  5023               	movf	(_EUSART_ErrorHandler+1)^0,w,c
  2500   000898  6EFE               	movwf	tosh,c
  2501   00089A  50F8               	movf	tblptru,w,c
  2502   00089C  6EFF               	movwf	tosu,c
  2503   00089E  50FA               	movf	pclath,w,c
  2504   0008A0  0012               	return		;indir
  2505   0008A2                     i2u57_49:
  2506                           
  2507                           ;mcc_generated_files/eusart.c: 233:     } else {
  2508   0008A2  EF55  F004         	goto	i2l415
  2509   0008A6                     i2l1633:
  2510                           
  2511                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  2512   0008A6  EC99  F005         	call	_EUSART_RxDataHandler	;wreg free
  2513   0008AA                     i2l415:
  2514   0008AA  0012               	return		;funcret
  2515   0008AC                     __end_of_EUSART_Receive_ISR:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  2519 ;; Defined at:
  2520 ;;		line 252 in file "mcc_generated_files/eusart.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		None
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_EUSART_Initialize
  2544 ;;		_EUSART_Receive_ISR
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text32
  2549   000C68                     __ptext32:
  2550                           	callstack 0
  2551   000C68                     _EUSART_DefaultOverrunErrorHandler:
  2552                           	callstack 25
  2553   000C68                     
  2554                           ;mcc_generated_files/eusart.c: 255:     RC1STAbits.CREN = 0;
  2555   000C68  989D               	bcf	157,4,c	;volatile
  2556                           
  2557                           ;mcc_generated_files/eusart.c: 256:     RC1STAbits.CREN = 1;
  2558   000C6A  889D               	bsf	157,4,c	;volatile
  2559   000C6C  0012               	return		;funcret
  2560   000C6E                     __end_of_EUSART_DefaultOverrunErrorHandler:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  2564 ;; Defined at:
  2565 ;;		line 250 in file "mcc_generated_files/eusart.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		None
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2582 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_EUSART_Initialize
  2589 ;;		_EUSART_Receive_ISR
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text33
  2594   000C86                     __ptext33:
  2595                           	callstack 0
  2596   000C86                     _EUSART_DefaultFramingErrorHandler:
  2597                           	callstack 25
  2598   000C86  0012               	return		;funcret
  2599   000C88                     __end_of_EUSART_DefaultFramingErrorHandler:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _EUSART_DefaultErrorHandler *****************
  2603 ;; Defined at:
  2604 ;;		line 260 in file "mcc_generated_files/eusart.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 1
  2625 ;; This function calls:
  2626 ;;		_EUSART_RxDataHandler
  2627 ;; This function is called by:
  2628 ;;		_EUSART_Initialize
  2629 ;;		_EUSART_Receive_ISR
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text34
  2634   000C6E                     __ptext34:
  2635                           	callstack 0
  2636   000C6E                     _EUSART_DefaultErrorHandler:
  2637                           	callstack 24
  2638   000C6E                     
  2639                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  2640   000C6E  EC99  F005         	call	_EUSART_RxDataHandler	;wreg free
  2641   000C72  0012               	return		;funcret
  2642   000C74                     __end_of_EUSART_DefaultErrorHandler:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _EUSART_RxDataHandler *****************
  2646 ;; Defined at:
  2647 ;;		line 240 in file "mcc_generated_files/eusart.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_EUSART_Receive_ISR
  2671 ;;		_EUSART_DefaultErrorHandler
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text35
  2676   000B32                     __ptext35:
  2677                           	callstack 0
  2678   000B32                     _EUSART_RxDataHandler:
  2679                           	callstack 25
  2680   000B32                     
  2681                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  2682   000B32  501C               	movf	_eusartRxHead^0,w,c
  2683   000B34  0F09               	addlw	low _eusartRxBuffer
  2684   000B36  6ED9               	movwf	fsr2l,c
  2685   000B38  6ADA               	clrf	fsr2h,c
  2686   000B3A  CF99 FFDF          	movff	3993,indf2	;volatile
  2687   000B3E  2A1C               	incf	_eusartRxHead^0,f,c	;volatile
  2688   000B40                     
  2689                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2690   000B40  0E07               	movlw	7
  2691   000B42  641C               	cpfsgt	_eusartRxHead^0,c	;volatile
  2692   000B44  EFA6  F005         	goto	i2u41_41
  2693   000B48  EFA8  F005         	goto	i2u41_40
  2694   000B4C                     i2u41_41:
  2695   000B4C  EFAA  F005         	goto	i2l1471
  2696   000B50                     i2u41_40:
  2697   000B50                     
  2698                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  2699   000B50  0E00               	movlw	0
  2700   000B52  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  2701   000B54                     i2l1471:
  2702                           
  2703                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  2704   000B54  2A1A               	incf	_eusartRxCount^0,f,c	;volatile
  2705   000B56  0012               	return		;funcret
  2706   000B58                     __end_of_EUSART_RxDataHandler:
  2707                           	callstack 0
  2708                           
  2709                           	psect	smallconst
  2710   000800                     __psmallconst:
  2711                           	callstack 0
  2712   000800  00                 	db	0
  2713   000801  00                 	db	0	; dummy byte at the end
  2714   000000                     
  2715                           	psect	text36
  2716   000000                     __ptext36:
  2717                           	callstack 0
  2718   000000                     
  2719                           	psect	rparam
  2720   000000                     
  2721                           	psect	temp
  2722   000038                     btemp:
  2723                           	callstack 0
  2724   000038                     	ds	1
  2725   000000                     int$flags	set	btemp
  2726   000000                     wtemp8	set	btemp+1
  2727   000000                     ttemp5	set	btemp+1
  2728   000000                     ttemp6	set	btemp+4
  2729   000000                     ttemp7	set	btemp+8
  2730                           
  2731                           	psect	config
  2732                           
  2733                           ;Config register CONFIG1L @ 0x300000
  2734                           ;	External Oscillator mode Selection bits
  2735                           ;	FEXTOSC = OFF, Oscillator not enabled
  2736                           ;	Power-up default value for COSC bits
  2737                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  2738   300000                     	org	3145728
  2739   300000  EC                 	db	236
  2740                           
  2741                           ;Config register CONFIG1H @ 0x300001
  2742                           ;	Clock Out Enable bit
  2743                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2744                           ;	Clock Switch Enable bit
  2745                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2746                           ;	Fail-Safe Clock Monitor Enable bit
  2747                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2748   300001                     	org	3145729
  2749   300001  FF                 	db	255
  2750                           
  2751                           ;Config register CONFIG2L @ 0x300002
  2752                           ;	Master Clear Enable bit
  2753                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2754                           ;	Power-up Timer Enable bit
  2755                           ;	PWRTE = OFF, Power up timer disabled
  2756                           ;	Low-power BOR enable bit
  2757                           ;	LPBOREN = OFF, ULPBOR disabled
  2758                           ;	Brown-out Reset Enable bits
  2759                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
  2760   300002                     	org	3145730
  2761   300002  BF                 	db	191
  2762                           
  2763                           ;Config register CONFIG2H @ 0x300003
  2764                           ;	Brown Out Reset Voltage selection bits
  2765                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  2766                           ;	ZCD Disable bit
  2767                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2768                           ;	PPSLOCK bit One-Way Set Enable bit
  2769                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2770                           ;	Stack Full/Underflow Reset Enable bit
  2771                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2772                           ;	Debugger Enable bit
  2773                           ;	DEBUG = OFF, Background debugger disabled
  2774                           ;	Extended Instruction Set Enable bit
  2775                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2776   300003                     	org	3145731
  2777   300003  FF                 	db	255
  2778                           
  2779                           ;Config register CONFIG3L @ 0x300004
  2780                           ;	WDT Period Select bits
  2781                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2782                           ;	WDT operating mode
  2783                           ;	WDTE = OFF, WDT Disabled
  2784   300004                     	org	3145732
  2785   300004  9F                 	db	159
  2786                           
  2787                           ;Config register CONFIG3H @ 0x300005
  2788                           ;	WDT Window Select bits
  2789                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2790                           ;	WDT input clock selector
  2791                           ;	WDTCCS = SC, Software Control
  2792   300005                     	org	3145733
  2793   300005  FF                 	db	255
  2794                           
  2795                           ;Config register CONFIG4L @ 0x300006
  2796                           ;	Write Protection Block 0
  2797                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2798                           ;	Write Protection Block 1
  2799                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2800                           ;	Write Protection Block 2
  2801                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2802                           ;	Write Protection Block 3
  2803                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2804   300006                     	org	3145734
  2805   300006  FF                 	db	255
  2806                           
  2807                           ;Config register CONFIG4H @ 0x300007
  2808                           ;	Configuration Register Write Protection bit
  2809                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  2810                           ;	Boot Block Write Protection bit
  2811                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2812                           ;	Data EEPROM Write Protection bit
  2813                           ;	WRTD = OFF, Data EEPROM not write-protected
  2814                           ;	Scanner Enable bit
  2815                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  2816                           ;	Low Voltage Programming Enable bit
  2817                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2818   300007                     	org	3145735
  2819   300007  FF                 	db	255
  2820                           
  2821                           ;Config register CONFIG5L @ 0x300008
  2822                           ;	UserNVM Program Memory Code Protection bit
  2823                           ;	CP = OFF, UserNVM code protection disabled
  2824                           ;	DataNVM Memory Code Protection bit
  2825                           ;	CPD = OFF, DataNVM code protection disabled
  2826   300008                     	org	3145736
  2827   300008  FF                 	db	255
  2828                           
  2829                           ;Config register CONFIG5H @ 0x300009
  2830                           ;	unspecified, using default values
  2831   300009                     	org	3145737
  2832   300009  FF                 	db	255
  2833                           
  2834                           ;Config register CONFIG6L @ 0x30000A
  2835                           ;	Table Read Protection Block 0
  2836                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2837                           ;	Table Read Protection Block 1
  2838                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2839                           ;	Table Read Protection Block 2
  2840                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2841                           ;	Table Read Protection Block 3
  2842                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2843   30000A                     	org	3145738
  2844   30000A  FF                 	db	255
  2845                           
  2846                           ;Config register CONFIG6H @ 0x30000B
  2847                           ;	Boot Block Table Read Protection bit
  2848                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2849   30000B                     	org	3145739
  2850   30000B  FF                 	db	255
  2851                           tosu	equ	0xFFF
  2852                           tosh	equ	0xFFE
  2853                           tosl	equ	0xFFD
  2854                           stkptr	equ	0xFFC
  2855                           pclatu	equ	0xFFB
  2856                           pclath	equ	0xFFA
  2857                           pcl	equ	0xFF9
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           indf0	equ	0xFEF
  2865                           postinc0	equ	0xFEE
  2866                           postdec0	equ	0xFED
  2867                           preinc0	equ	0xFEC
  2868                           plusw0	equ	0xFEB
  2869                           fsr0h	equ	0xFEA
  2870                           fsr0l	equ	0xFE9
  2871                           wreg	equ	0xFE8
  2872                           indf1	equ	0xFE7
  2873                           postinc1	equ	0xFE6
  2874                           postdec1	equ	0xFE5
  2875                           preinc1	equ	0xFE4
  2876                           plusw1	equ	0xFE3
  2877                           fsr1h	equ	0xFE2
  2878                           fsr1l	equ	0xFE1
  2879                           bsr	equ	0xFE0
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           preinc2	equ	0xFDC
  2884                           plusw2	equ	0xFDB
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), NULL(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), NULL(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     784
                         _Arm_System
                      _Disarm_System
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
         _IOCCF2_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Disarm_System                                        0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Arm_System                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
                   i2_TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF2_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCCF5_ISR                                           0     0      0       0
                                NULL *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCCF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCCF2_ISR                                           0     0      0       0
                                NULL *
          _movement_Detect_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _movement_Detect_Interrupt                            0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (8) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Arm_System
   _Disarm_System
     _TMR0_StopTimer
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF2_ISR
       NULL(Fake) *
       _movement_Detect_Interrupt *
         _TMR0_StartTimer
     _IOCCF5_ISR
       NULL(Fake) *
       _IOCCF5_DefaultInterruptHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
         i2_TMR0_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      37       1       58.5%
BITBIGSFRhhhhhl     55      0       0      25        0.0%
BITBIGSFRhhhhhh     33      0       0      22        0.0%
BITBIGSFRhhhhhh     1B      0       0      21        0.0%
BITBIGSFRhhhhhl     16      0       0      30        0.0%
BITBIGSFRlll        15      0       0      39        0.0%
BITBIGSFRhhhhhl      F      0       0      29        0.0%
BITBIGSFRhhhhhh      E      0       0      23        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      38        0.0%
BITBIGSFRlhhh        A      0       0      34        0.0%
BITBIGSFRhhhhhl      8      0       0      27        0.0%
BITBIGSFRlhlh        4      0       0      36        0.0%
BITBIGSFRhhhhhl      3      0       0      28        0.0%
BITBIGSFRlhhl        2      0       0      35        0.0%
BITBIGSFRlhll        2      0       0      37        0.0%
BITBIGSFRhhhhhl      2      0       0      26        0.0%
BITBIGSFRhhhhhh      2      0       0      24        0.0%
BITBIGSFRhhhhl       2      0       0      31        0.0%
BITBIGSFRhhl         1      0       0      32        0.0%
BITBIGSFRhl          1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      40        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 23:06:58 2024

                ?_EUSART_SetRxInterruptHandler 0036                                             l40 0BE2  
                                           l43 0B96                                             l37 0BCA  
                                          l220 0B7A                                            l126 092A  
                                          l226 0C7A                                            l138 0C2A  
                                          l148 0C20                                            l245 0C16  
                                          l431 0C52                                            l440 0C34  
                                          l280 09F4                                            l434 0C48  
                                          l178 0C76                                            l443 0C3E  
                                          l437 0C5C                                            l294 0BF4  
                                          l374 09A4                                            l278 0A02  
                                          l295 0BF6                                            l296 0C00  
                                          l299 0BF2                                            u700 09D2  
                                          u701 09CE                                            u710 09E6  
                                          u711 09E2                                            u720 09F4  
                                          u721 09F0                                            u730 0A02  
                                          u731 09FE                                            u690 09C0  
                                          u691 09BC                         ??_EUSART_RxDataHandler 0032  
               ?_EUSART_SetFramingErrorHandler 0036                                            tosl 0FFD  
                                          wreg 0FE8                                           l1501 0900  
                                         l1431 0C22                                           l1511 091E  
                                         l1503 0902                                           l1601 0BF0  
                                         l1513 0BCC                                           l1433 0C18  
                                         l1505 0904                                           l1521 0B6A  
                                         l1531 094C                                           l1507 0906  
                                         l1523 0B76                                           l1515 0B58  
                                         l1461 0C54                                           l1453 0C36  
                                         l1541 0960                                           l1533 0950  
                                         l1525 092C                                           l1509 0912  
                                         l1517 0B64                                           l1455 0C2C  
                                         l1543 096C                                           l1535 0954  
                                         l1527 0930                                           l1447 0C0E  
                                         l1519 0B68                                           l1561 0C78  
                                         l1457 0C4A                                           l1545 0978  
                                         l1537 0958                                           l1529 093C  
                                         l1473 0C74                                           l1481 08CC  
                                         l1459 0C40                                           l1547 09A0  
                                         l1539 095C                                           l1491 08F2  
                                         l1483 08EA                                           l1475 0B7C  
                                         l1571 0BB2                                           l1493 08F4  
                                         l1485 08EC                                           l1477 08AC  
                                         l1581 0BC6                                           l1573 0BB6  
                                         l1661 09AE                                           l1495 08FA  
                                         l1487 08EE                                           l1479 08CA  
                                         l1575 0BBA                                           l1671 09D2  
                                         l1663 09B0                                           l1655 09A6  
                                         l1497 08FC                                           l1489 08F0  
                                         l1577 0BBE                                           l1673 09D6  
                                         l1665 09B2                                           l1657 09AA  
                                         l1595 0BE4                                           l1499 08FE  
                                         l1579 0BC2                                           l1675 09E6  
                                         l1667 09C0                                           l1659 09AC  
                                         l1597 0BEA                                           l1669 09C4  
                                         l1599 0BEE                                           _LATA 0F83  
                                         _LATB 0F84                                           _LATC 0F85  
                                         _PMD0 0EE1                                           _PMD1 0EE2  
                                         _PMD2 0EE3                                           _PMD3 0EE4  
                                         _PMD4 0EE5                                           _PMD5 0EE6  
                                         _WPUA 0F10                                           _WPUB 0F18  
                                         _WPUC 0F20                                           _WPUE 0F2D  
                                         _main 09A6                                _TMR0_StartTimer 0C80  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr2l 0FD9                                           btemp 0038  
            fp__IOCCF5_DefaultInterruptHandler 0000               ??_IOCCF5_DefaultInterruptHandler 0032  
              ?_IOCCF5_DefaultInterruptHandler 0032                                           start 00FA  
                                 ___param_bank 0000                                     _Arm_System 0BF4  
                      __end_of_TMR0_Initialize 0B7C                 ??_TMR0_DefaultInterruptHandler 0032  
                __end_of_OSCILLATOR_Initialize 0BE4                                          ?_main 0032  
                                        i2l131 0B08                                          i2l223 0C82  
                                        i2l135 0AB0                                          i2l151 0C84  
                                        i2l145 0A7E                                          i2l226 0C7E  
                                        i2l250 0C0C                                          i2l242 0ADE  
                                        i2l155 0B1E                                          i2l405 0A48  
                                        i2l157 0B30                                          i2l422 0C86  
                                        i2l238 0C66                                          i2l415 08AA  
                                        i2l183 0040                                          i2l408 0A4C  
                                        i2l248 0C02                                          i2l192 00E6  
                                        i2l425 0C6C                                          i2l185 0064  
                                        i2l193 00E6                                          i2l419 0B56  
                                        i2l428 0C72                                          i2l188 00AC  
                                        _OSCEN 0EDC                                          _TMR0H 0FD4  
                                        _TMR0L 0FD3                                          _TRISA 0F88  
                                        _TRISB 0F89                                          _TRISC 0F8A  
                                        _RXPPS 0EB5                      ?_TMR0_SetInterruptHandler 0036  
                   ?_movement_Detect_Interrupt 0032                               __end_of_TMR0_ISR 0C68  
                      __end_of_PIN_MANAGER_IOC 0B0A                                          pclath 0FFA  
                                        pclatu 0FFB                                          ttemp5 0039  
                                        ttemp6 003C                                          ttemp7 0040  
                                        status 0FD8                                          wtemp8 0039  
                              __initialization 0B98                                   __end_of_main 0A10  
                  ?_INTERRUPT_InterruptManager 0032                 ??_EUSART_SetRxInterruptHandler 0038  
                                       ??_main 0038                                  __activetblptr 0002  
                      _IOCCF2_InterruptHandler 0030           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 0C88            ??_EUSART_DefaultFramingErrorHandler 0032  
           ?_EUSART_DefaultFramingErrorHandler 0032              _EUSART_DefaultFramingErrorHandler 0C86  
                      __end_of_TMR0_StartTimer 0C84                     _EUSART_OverrunErrorHandler 0024  
                                       _ANSELA 0F11                                         _ANSELB 0F19  
                                       _ANSELC 0F21                                         _T0CON0 0FD5  
                                       _T0CON1 0FD6                                         _RC1REG 0F99  
                                       _RC1STA 0F9D                                         _ODCONA 0F0F  
                                       _ODCONB 0F17                                         _RC6PPS 0EFD  
                                       _ODCONC 0F1F                                         i2l1441 0B24  
                                       i2l1611 0A3E                                         i2l1603 0A10  
                                       i2l1427 0C80                                         i2l1443 0B28  
                                       i2l1435 0B0A                                         i2l1451 0C08  
                                       i2l1621 0824                                         i2l1613 0A42  
                                       i2l1605 0A20                                         i2l1445 0B2C  
                                       i2l1437 0B0C                                         i2l1429 0C7C  
                                       i2l1471 0B54                                         i2l1463 0B32  
                                       i2l1631 0888                                         i2l1623 083E  
                                       i2l1615 0802                                         i2l1607 0A2C  
                                       i2l1439 0B20                                         i2l1551 0A92  
                                       i2l1465 0B3E                                         i2l1633 08A6  
                                       i2l1625 084C                                         i2l1617 080C  
                                       i2l1609 0A2E                                         i2l1553 0AAC  
                                       i2l1449 0C04                                         i2l1641 004E  
                                       i2l1467 0B40                                         i2l1627 0856  
                                       i2l1619 081A                                         i2l1555 0A4E  
                                       i2l1563 0AB2                                         i2l1651 00BA  
                                       i2l1643 005C                                         i2l1635 001A  
                                       i2l1469 0B50                                         i2l1629 0870  
                                       i2l1549 0A80                                         i2l1557 0A60  
                                       i2l1565 0AC4                                         i2l1653 00C8  
                                       i2l1645 0072                                         i2l1637 002A  
                                       i2l1567 0C68                                         i2l1559 0A7A  
                                       i2l1583 0AE0                                         i2l1591 0C5E  
                                       i2l1647 0080                                         i2l1639 0038  
                                       i2l1569 0C6E                                         i2l1585 0AF0  
                                       i2l1593 0C62                                         i2l1649 008E  
                                       i2l1587 0AF4                                         i2l1589 0B04  
                                       _INLVLA 0F0D                                         _INLVLB 0F15  
                                       _INLVLC 0F1D                                         _INLVLE 0F2A  
                                       _OSCFRQ 0EDE                                         _TX1REG 0F9A  
                                       _TX1STA 0F9E                                    ?_Arm_System 0032  
                          _EUSART_Transmit_ISR 0A10                               ?_TMR0_Initialize 0032  
                                       clear_0 0B9E                                         isa$std 0001  
                               _PMD_Initialize 0B7C                                   __mediumconst 0000  
                                       tblptru 0FF8                          __end_of_TMR0_CallBack 0AE0  
     TMR0_SetInterruptHandler@InterruptHandler 0036     IOCCF5_SetInterruptHandler@InterruptHandler 0036  
   IOCCF2_SetInterruptHandler@InterruptHandler 0036                               ?_PIN_MANAGER_IOC 0032  
                        __end_of_Disarm_System 0BF4                           ?_EUSART_Transmit_ISR 0032  
                                 ??_IOCCF2_ISR 0032                                   ??_IOCCF5_ISR 0032  
                            _SYSTEM_Initialize 0BB2                                     __accesstop 0060  
                      __end_of__initialization 0BA4                             ?_SYSTEM_Initialize 0032  
                                ___rparam_used 0001           __end_of_EUSART_SetTxInterruptHandler 0C36  
                 _EUSART_SetTxInterruptHandler 0C2C                                 __pcstackCOMRAM 0032  
                          ??_SYSTEM_Initialize 0038                                      ?_TMR0_ISR 0032  
                       __end_of_PMD_Initialize 0B98                             __end_of_IOCCF2_ISR 0AB2  
                           __end_of_IOCCF5_ISR 0A80                           _eusartRxStatusBuffer 0001  
              ??_EUSART_SetOverrunErrorHandler 0038                               ?_TMR0_StartTimer 0032  
                    __end_of_SYSTEM_Initialize 0BCC                          ??_EUSART_Transmit_ISR 0032  
                                   __pnvCOMRAM 0022                  ?_EUSART_SetTxInterruptHandler 0036  
             _EUSART_TxDefaultInterruptHandler 002C               __end_of_TMR0_SetInterruptHandler 0C18  
                                   ??_TMR0_ISR 0032                   ??_EUSART_DefaultErrorHandler 0032  
       __end_of_IOCCF5_DefaultInterruptHandler 0C86                 _IOCCF5_DefaultInterruptHandler 0C84  
                              ?_PMD_Initialize 0032                                  _eusartRxCount 001A  
                                      _SP1BRGH 0F9C                                        _SP1BRGL 0F9B  
                                      _OSCCON1 0ED8                                        _OSCCON3 0EDA  
                  ??_movement_Detect_Interrupt 0032                                        i2u40_40 0B1E  
                                      i2u40_41 0B1A                                        i2u41_40 0B50  
                                      i2u41_41 0B4C                                        i2u50_40 0A20  
                                      i2u42_40 0A92                                        i2u50_41 0A1C  
                                      i2u42_41 0A8E                                        i2u51_40 0A3E  
                                      i2u51_41 0A3A                                        i2u52_40 081A  
                                      i2u43_48 0A98                                        i2u44_40 0A60  
                                      i2u60_40 004E                                        i2u52_41 0816  
                                      i2u43_49 0AAC                                        i2u44_41 0A5C  
                                      i2u60_41 004A                                        i2u61_40 005C  
                                      i2u61_41 0058                                        i2u54_40 084C  
                                      i2u53_48 082A                                        i2u45_48 0A66  
                                      i2u46_40 0AC4                                        i2u62_40 0072  
                                      i2u54_41 0848                                        i2u53_49 083E  
                                      i2u45_49 0A7A                                        i2u46_41 0AC0  
                                      i2u62_41 006E                                        _OSCTUNE 0EDD  
                                      i2u63_40 0080                                        i2u63_41 007C  
                                      i2u56_40 0888                                        i2u55_48 085C  
                                      i2u48_40 0AF0                                        i2u47_48 0ACA  
                                      i2u64_40 008E                                        i2u56_41 0884  
                                      i2u55_49 0870                                        i2u48_41 0AEC  
                                      i2u47_49 0ADE                                        i2u64_41 008A  
                                      i2u49_40 0B04                                        i2u49_41 0B00  
                                      i2u57_48 088E                                        i2u66_40 00BA  
                                      i2u65_48 0094                                        i2u58_40 002A  
                                      i2u57_49 08A2                                        i2u66_41 00B6  
                                      i2u65_49 00A8                                        i2u58_41 0026  
                                      i2u67_40 00C8                                        i2u59_40 0038  
                                      i2u67_41 00C4                                        i2u59_41 0034  
                                      i2u68_48 00CE                                        i2u68_49 00E2  
                                      _SLRCONA 0F0E                                        _SLRCONB 0F16  
                                      _SLRCONC 0F1E                               i2_TMR0_StopTimer 0C7C  
                     ??_EUSART_SetErrorHandler 0038                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 0800  
                                      __pcinit 0B98                                        __ramtop 0800  
                                      __ptext0 09A6                                        __ptext1 0BB2  
                                      __ptext2 0B58                                        __ptext3 0C0E  
                                      __ptext4 0B7C                                        __ptext5 08AC  
                                      __ptext6 0C18                                        __ptext7 0C22  
                                      __ptext8 0BCC                                        __ptext9 0C74  
                        _OSCILLATOR_Initialize 0BCC                       ??_PIN_MANAGER_Initialize 0038  
                                    _IOCCFbits 0F1A                                      _IOCCNbits 0F1B  
                                    _IOCCPbits 0F1C                           end_of_initialization 0BA4  
        __end_of_EUSART_SetOverrunErrorHandler 0C4A                  _EUSART_SetOverrunErrorHandler 0C40  
                                __Lmediumconst 0000                              _EUSART_Initialize 092C  
                    _movement_Detect_Interrupt 0B0A                             ?_EUSART_Initialize 0032  
                                      postinc0 0FEE                                   ??_Arm_System 0036  
                          ??_EUSART_Initialize 0038                 ??_EUSART_SetTxInterruptHandler 0038  
                     _TMR0_SetInterruptHandler 0C0E                                      _TRISCbits 0F8A  
                 ??_IOCCF2_SetInterruptHandler 0038                   ??_IOCCF5_SetInterruptHandler 0038  
                    __end_of_EUSART_Initialize 09A6                             __end_of_Arm_System 0C02  
                               _TMR0_StopTimer 0C78                   __end_of_INTERRUPT_Initialize 0C78  
           __end_of_EUSART_DefaultErrorHandler 0C74                     _EUSART_DefaultErrorHandler 0C6E  
                       ?_OSCILLATOR_Initialize 0032                            start_initialization 0B98  
 EUSART_SetRxInterruptHandler@interruptHandler 0036   EUSART_SetTxInterruptHandler@interruptHandler 0036  
                       __end_of_TMR0_StopTimer 0C7C                                 _sensorDebounce 0021  
               ?_EUSART_SetOverrunErrorHandler 0036                     _EUSART_FramingErrorHandler 0026  
                             ??_PMD_Initialize 0036                         _EUSART_SetErrorHandler 0C54  
                     __end_ofi2_TMR0_StopTimer 0C80                    __end_of_EUSART_Transmit_ISR 0A4E  
                                  __pbssCOMRAM 0001                     __end_of_EUSART_Receive_ISR 08AC  
             _EUSART_RxDefaultInterruptHandler 002A                          _TMR0_InterruptHandler 0028  
                              ?_TMR0_StopTimer 0032                        _IOCCF5_InterruptHandler 002E  
                 __end_of_EUSART_RxDataHandler 0B58                         _PIN_MANAGER_Initialize 08AC  
                                    __pintcode 0008                                   _eusartRxHead 001C  
                                 _eusartTxHead 001F                                   _eusartRxTail 001B  
                                 _eusartTxTail 001E                   ??_INTERRUPT_InterruptManager 0032  
                                    _mainFlags 0020                        _eusartTxBufferRemaining 001D  
                                     _BAUD1CON 0F9F                                    __smallconst 0800  
           __end_of_IOCCF2_SetInterruptHandler 0C2C                     _IOCCF2_SetInterruptHandler 0C22  
           __end_of_IOCCF5_SetInterruptHandler 0C22                     _IOCCF5_SetInterruptHandler 0C18  
                                _TMR0_CallBack 0AB2                                  _Disarm_System 0BE4  
                         _INTERRUPT_Initialize 0C74                                 _eusartRxBuffer 0009  
                            ??_TMR0_Initialize 0038                                 _eusartTxBuffer 0011  
       EUSART_SetErrorHandler@interruptHandler 0036                                       _LATCbits 0F85  
                                     _PIE0bits 0EC2                                       _PIE3bits 0EC5  
                            _eusartRxLastError 0019                     ??_TMR0_SetInterruptHandler 0038  
                                     _PIR0bits 0ECA                ??_EUSART_SetFramingErrorHandler 0038  
                                     _PIR3bits 0ECD                                       _TMR0_ISR 0C5E  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 0C6E  
          ??_EUSART_DefaultOverrunErrorHandler 0032             ?_EUSART_DefaultOverrunErrorHandler 0032  
            _EUSART_DefaultOverrunErrorHandler 0C68                              ??_PIN_MANAGER_IOC 0032  
            __end_of_movement_Detect_Interrupt 0B32                                 ?_TMR0_CallBack 0032  
                               ?_Disarm_System 0032                          ?_INTERRUPT_Initialize 0032  
                        fp__EUSART_Receive_ISR 0000                                       __Hrparam 0000  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0036  
                          _EUSART_ErrorHandler 0022                              ??_TMR0_StartTimer 0032  
                  ?_EUSART_DefaultErrorHandler 0032                                     _T0CON0bits 0FD5  
                         _EUSART_RxDataHandler 0B32                                       __ptext10 092C  
                                     __ptext11 0C2C                                       __ptext20 0C5E  
                                     __ptext12 0C36                                       __ptext21 0AB2  
                                     __ptext13 0C40                                       __ptext30 0A10  
                                     __ptext22 0C02                                       __ptext14 0C4A  
                                     __ptext31 0802                                       __ptext23 0C7C  
                                     __ptext15 0C54                                       __ptext32 0C68  
                                     __ptext24 0AE0                                       __ptext16 0BE4  
                                     __ptext33 0C86                                       __ptext25 0A4E  
                                     __ptext17 0C78                                       __ptext34 0C6E  
                                     __ptext26 0C84                                       __ptext18 0BF4  
                                     __ptext35 0B32                                       __ptext27 0A80  
                                     __ptext36 0000                                       __ptext28 0B0A  
                                     __ptext29 0C80                                     _IOCCF2_ISR 0A80  
                                   _IOCCF5_ISR 0A4E           __end_of_TMR0_DefaultInterruptHandler 0C0E  
                 _TMR0_DefaultInterruptHandler 0C02                        ?_EUSART_SetErrorHandler 0036  
                                   _RC1STAbits 0F9D  EUSART_SetOverrunErrorHandler@interruptHandler 0036  
                                     isa$xinst 0000                                       int$flags 0038  
                 fp__movement_Detect_Interrupt 0000                              ?i2_TMR0_StopTimer 0032  
           __end_of_INTERRUPT_InterruptManager 00FA                     _INTERRUPT_InterruptManager 0008  
        __end_of_EUSART_SetFramingErrorHandler 0C54                  _EUSART_SetFramingErrorHandler 0C4A  
                           ??i2_TMR0_StopTimer 0032                                     _INTCONbits 0FF2  
                              ??_TMR0_CallBack 0032                          ?_EUSART_RxDataHandler 0032  
                              ??_Disarm_System 0036                         ??_INTERRUPT_Initialize 0036  
                                     intlevel2 0000                               ??_TMR0_StopTimer 0036  
                       fp__EUSART_Transmit_ISR 0000                        ?_PIN_MANAGER_Initialize 0032  
               __end_of_EUSART_SetErrorHandler 0C5E           __end_of_EUSART_SetRxInterruptHandler 0C40  
                 _EUSART_SetRxInterruptHandler 0C36                fp__TMR0_DefaultInterruptHandler 0000  
                ?_TMR0_DefaultInterruptHandler 0032                             _EUSART_Receive_ISR 0802  
EUSART_SetFramingErrorHandler@interruptHandler 0036                            ?_EUSART_Receive_ISR 0032  
                fp__EUSART_DefaultErrorHandler 0000                                _TMR0_Initialize 0B58  
                  ?_IOCCF2_SetInterruptHandler 0036                    ?_IOCCF5_SetInterruptHandler 0036  
                                   _TX1STAbits 0F9E                                    ?_IOCCF2_ISR 0032  
                                  ?_IOCCF5_ISR 0032                 __end_of_PIN_MANAGER_Initialize 092C  
                              _PIN_MANAGER_IOC 0AE0                           ??_EUSART_Receive_ISR 0032  
