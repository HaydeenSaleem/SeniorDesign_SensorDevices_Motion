

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 21 23:22:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18LF25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18LF25K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     _SP1BRGH	set	3996
    93   000000                     _TX1STA	set	3998
    94   000000                     _T0CON0	set	4053
    95   000000                     _IOCCPbits	set	3868
    96   000000                     _IOCCNbits	set	3867
    97   000000                     _IOCCFbits	set	3866
    98   000000                     _INLVLC	set	3869
    99   000000                     _SLRCONC	set	3870
   100   000000                     _ODCONC	set	3871
   101   000000                     _WPUC	set	3872
   102   000000                     _OSCTUNE	set	3805
   103   000000                     _OSCFRQ	set	3806
   104                           
   105                           	psect	nvCOMRAM
   106   000022                     __pnvCOMRAM:
   107                           	callstack 0
   108   000022                     _EUSART_ErrorHandler:
   109                           	callstack 0
   110   000022                     	ds	2
   111   000024                     _EUSART_OverrunErrorHandler:
   112                           	callstack 0
   113   000024                     	ds	2
   114   000026                     _EUSART_FramingErrorHandler:
   115                           	callstack 0
   116   000026                     	ds	2
   117   000028                     _TMR0_InterruptHandler:
   118                           	callstack 0
   119   000028                     	ds	2
   120   00002A                     _EUSART_RxDefaultInterruptHandler:
   121                           	callstack 0
   122   00002A                     	ds	2
   123   00002C                     _EUSART_TxDefaultInterruptHandler:
   124                           	callstack 0
   125   00002C                     	ds	2
   126   00002E                     _IOCCF5_InterruptHandler:
   127                           	callstack 0
   128   00002E                     	ds	2
   129   000030                     _IOCCF2_InterruptHandler:
   130                           	callstack 0
   131   000030                     	ds	2
   132   000000                     _RC1STAbits	set	3997
   133   000000                     _TX1STAbits	set	3998
   134   000000                     _TRISCbits	set	3978
   135   000000                     _T0CON0bits	set	4053
   136   000000                     _LATCbits	set	3973
   137   000000                     _RXPPS	set	3765
   138   000000                     _PIE0bits	set	3778
   139   000000                     _OSCCON1	set	3800
   140   000000                     _OSCCON3	set	3802
   141   000000                     _OSCEN	set	3804
   142   000000                     _PMD0	set	3809
   143   000000                     _RC6PPS	set	3837
   144   000000                     _INLVLA	set	3853
   145   000000                     _SLRCONA	set	3854
   146   000000                     _ODCONA	set	3855
   147   000000                     _WPUA	set	3856
   148   000000                     _ANSELA	set	3857
   149   000000                     _ANSELB	set	3865
   150   000000                     _ANSELC	set	3873
   151   000000                     _LATA	set	3971
   152   000000                     _PMD5	set	3814
   153   000000                     _PMD4	set	3813
   154   000000                     _PMD3	set	3812
   155   000000                     _PMD2	set	3811
   156   000000                     _PMD1	set	3810
   157   000000                     _TRISA	set	3976
   158   000000                     _LATC	set	3973
   159   000000                     _LATB	set	3972
   160   000000                     _RC1REG	set	3993
   161   000000                     _TX1REG	set	3994
   162   000000                     _SP1BRGL	set	3995
   163   000000                     _RC1STA	set	3997
   164   000000                     _BAUD1CON	set	3999
   165   000000                     _TMR0L	set	4051
   166   000000                     _TMR0H	set	4052
   167   000000                     _T0CON1	set	4054
   168   000000                     _INTCONbits	set	4082
   169   000000                     _TRISC	set	3978
   170   000000                     _TRISB	set	3977
   171   000000                     _INLVLE	set	3882
   172   000000                     _WPUE	set	3885
   173   000000                     _INLVLB	set	3861
   174   000000                     _SLRCONB	set	3862
   175   000000                     _ODCONB	set	3863
   176   000000                     _WPUB	set	3864
   177   000000                     _PIE3bits	set	3781
   178   000000                     _PIR0bits	set	3786
   179   000000                     _PIR3bits	set	3789
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   000E26                     __pcinit:
   185                           	callstack 0
   186   000E26                     start_initialization:
   187                           	callstack 0
   188   000E26                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Clear objects allocated to COMRAM (33 bytes)
   192   000E26  EE00  F001         	lfsr	0,__pbssCOMRAM
   193   000E2A  0E21               	movlw	33
   194   000E2C                     clear_0:
   195   000E2C  6AEE               	clrf	postinc0,c
   196   000E2E  06E8               	decf	wreg,f,c
   197   000E30  E1FD               	bnz	clear_0
   198   000E32                     end_of_initialization:
   199                           	callstack 0
   200   000E32                     __end_of__initialization:
   201                           	callstack 0
   202   000E32  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   203   000E34  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   204   000E36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205   000E38  6EF8               	movwf	tblptru,c
   206   000E3A  0100               	movlb	0
   207   000E3C  EFC4  F004         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMRAM
   210   000001                     __pbssCOMRAM:
   211                           	callstack 0
   212   000001                     _eusartRxStatusBuffer:
   213                           	callstack 0
   214   000001                     	ds	8
   215   000009                     _eusartRxBuffer:
   216                           	callstack 0
   217   000009                     	ds	8
   218   000011                     _eusartTxBuffer:
   219                           	callstack 0
   220   000011                     	ds	8
   221   000019                     _eusartRxLastError:
   222                           	callstack 0
   223   000019                     	ds	1
   224   00001A                     _eusartRxCount:
   225                           	callstack 0
   226   00001A                     	ds	1
   227   00001B                     _eusartRxTail:
   228                           	callstack 0
   229   00001B                     	ds	1
   230   00001C                     _eusartRxHead:
   231                           	callstack 0
   232   00001C                     	ds	1
   233   00001D                     _eusartTxBufferRemaining:
   234                           	callstack 0
   235   00001D                     	ds	1
   236   00001E                     _eusartTxTail:
   237                           	callstack 0
   238   00001E                     	ds	1
   239   00001F                     _eusartTxHead:
   240                           	callstack 0
   241   00001F                     	ds	1
   242   000020                     _sensorDebounce:
   243                           	callstack 0
   244   000020                     	ds	1
   245   000021                     _mainFlags:
   246                           	callstack 0
   247   000021                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000032                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000032                     ??_INTERRUPT_InterruptManager:
   253   000032                     
   254                           ; 1 bytes @ 0x0
   255   000032                     	ds	4
   256   000036                     EUSART_Read@readValue:
   257                           	callstack 0
   258   000036                     EUSART_Write@txData:
   259                           	callstack 0
   260   000036                     IOCCF2_SetInterruptHandler@InterruptHandler:
   261                           	callstack 0
   262   000036                     IOCCF5_SetInterruptHandler@InterruptHandler:
   263                           	callstack 0
   264   000036                     TMR0_SetInterruptHandler@InterruptHandler:
   265                           	callstack 0
   266   000036                     EUSART_SetFramingErrorHandler@interruptHandler:
   267                           	callstack 0
   268   000036                     EUSART_SetOverrunErrorHandler@interruptHandler:
   269                           	callstack 0
   270   000036                     EUSART_SetErrorHandler@interruptHandler:
   271                           	callstack 0
   272   000036                     EUSART_SetTxInterruptHandler@interruptHandler:
   273                           	callstack 0
   274   000036                     EUSART_SetRxInterruptHandler@interruptHandler:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x4
   278   000036                     	ds	1
   279   000037                     ??_Recieve_ArmData:
   280   000037                     
   281                           ; 1 bytes @ 0x5
   282   000037                     	ds	1
   283   000038                     
   284                           ; 1 bytes @ 0x6
   285   000038                     	ds	1
   286   000039                     Recieve_ArmData@msgBuff:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x7
   290   000039                     	ds	4
   291   00003D                     Recieve_ArmData@i:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xB
   295   00003D                     	ds	2
   296   00003F                     Recieve_ArmData@j:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xD
   300   00003F                     	ds	2
   301   000041                     
   302                           ; 1 bytes @ 0xF
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 51 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   322 ;;      Params:         0       0       0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels required when called: 8
   328 ;; This function calls:
   329 ;;		_Arm_System
   330 ;;		_Disarm_System
   331 ;;		_Recieve_ArmData
   332 ;;		_SYSTEM_Initialize
   333 ;;		_Transmit_MotionData
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text0
   340   000988                     __ptext0:
   341                           	callstack 0
   342   000988                     _main:
   343                           	callstack 23
   344   000988                     
   345                           ;main.c: 54:     SYSTEM_Initialize();
   346   000988  EC20  F007         	call	_SYSTEM_Initialize	;wreg free
   347   00098C                     
   348                           ;main.c: 61:     (INTCONbits.GIE = 1);
   349   00098C  8EF2               	bsf	242,7,c	;volatile
   350   00098E                     
   351                           ;main.c: 67:     (INTCONbits.PEIE = 1);
   352   00098E  8CF2               	bsf	242,6,c	;volatile
   353   000990                     
   354                           ;main.c: 75:     mainFlags.SystemDisarmed = 0;
   355   000990  9221               	bcf	_mainFlags^0,1,c
   356   000992                     
   357                           ;main.c: 76:     mainFlags.SystemArmed = 1;
   358   000992  8021               	bsf	_mainFlags^0,0,c
   359   000994                     l1900:
   360                           
   361                           ;main.c: 79:     {;main.c: 80:         if(mainFlags.System_BluetoothReceive) Recieve_Arm
      +                          Data();
   362   000994  A821               	btfss	_mainFlags^0,4,c
   363   000996  EFCF  F004         	goto	u1101
   364   00099A  EFD1  F004         	goto	u1100
   365   00099E                     u1101:
   366   00099E  EFD3  F004         	goto	l1904
   367   0009A2                     u1100:
   368   0009A2  EC01  F004         	call	_Recieve_ArmData	;wreg free
   369   0009A6                     l1904:
   370                           
   371                           ;main.c: 81:         if(mainFlags.SystemDisarmed) Disarm_System();
   372   0009A6  A221               	btfss	_mainFlags^0,1,c
   373   0009A8  EFD8  F004         	goto	u1111
   374   0009AC  EFDA  F004         	goto	u1110
   375   0009B0                     u1111:
   376   0009B0  EFDC  F004         	goto	l1908
   377   0009B4                     u1110:
   378   0009B4  EC4E  F007         	call	_Disarm_System	;wreg free
   379   0009B8                     l1908:
   380                           
   381                           ;main.c: 82:         if(mainFlags.SystemArmed) Arm_System();
   382   0009B8  A021               	btfss	_mainFlags^0,0,c
   383   0009BA  EFE1  F004         	goto	u1121
   384   0009BE  EFE3  F004         	goto	u1120
   385   0009C2                     u1121:
   386   0009C2  EFE5  F004         	goto	l1912
   387   0009C6                     u1120:
   388   0009C6  EC58  F007         	call	_Arm_System	;wreg free
   389   0009CA                     l1912:
   390                           
   391                           ;main.c: 83:         if(mainFlags.System_MotionFlag) Transmit_MotionData();
   392   0009CA  A621               	btfss	_mainFlags^0,3,c
   393   0009CC  EFEA  F004         	goto	u1131
   394   0009D0  EFEC  F004         	goto	u1130
   395   0009D4                     u1131:
   396   0009D4  EFEE  F004         	goto	l1916
   397   0009D8                     u1130:
   398   0009D8  ECE1  F006         	call	_Transmit_MotionData	;wreg free
   399   0009DC                     l1916:
   400                           
   401                           ;main.c: 85:         if(((IOCCFbits.IOCCF2 == 0) && (T0CON0bits.T0EN == 0)
   402   0009DC  010F               	movlb	15	; () banked
   403   0009DE  B51A               	btfsc	26,2,b	;volatile
   404   0009E0  EFF4  F004         	goto	u1141
   405   0009E4  EFF6  F004         	goto	u1140
   406   0009E8                     u1141:
   407   0009E8  EF0C  F005         	goto	l290
   408   0009EC                     u1140:
   409   0009EC                     
   410                           ; BSR set to: 15
   411   0009EC  BED5               	btfsc	213,7,c	;volatile
   412   0009EE  EFFB  F004         	goto	u1151
   413   0009F2  EFFD  F004         	goto	u1150
   414   0009F6                     u1151:
   415   0009F6  EF0C  F005         	goto	l290
   416   0009FA                     u1150:
   417   0009FA                     
   418                           ; BSR set to: 15
   419   0009FA  010E               	movlb	14	; () banked
   420   0009FC  BBCD               	btfsc	205,5,b	;volatile
   421   0009FE  EF03  F005         	goto	u1161
   422   000A02  EF05  F005         	goto	u1160
   423   000A06                     u1161:
   424   000A06  EF0C  F005         	goto	l290
   425   000A0A                     u1160:
   426   000A0A                     
   427                           ; BSR set to: 14
   428   000A0A  B9CD               	btfsc	205,4,b	;volatile
   429   000A0C  EF0A  F005         	goto	u1171
   430   000A10  EF0C  F005         	goto	u1170
   431   000A14                     u1171:
   432   000A14  EF13  F005         	goto	l288
   433   000A18                     u1170:
   434   000A18                     l290:
   435   000A18  A421               	btfss	_mainFlags^0,2,c
   436   000A1A  EF11  F005         	goto	u1181
   437   000A1E  EF13  F005         	goto	u1180
   438   000A22                     u1181:
   439   000A22  EFCA  F004         	goto	l1900
   440   000A26                     u1180:
   441   000A26                     l288:
   442   000A26  0003               	sleep		;# 
   443                           
   444                           ;main.c: 91:             __nop();
   445   000A28  0000               	nop	
   446                           
   447                           ;main.c: 92:             __nop();
   448   000A2A  0000               	nop	
   449   000A2C  EFCA  F004         	goto	l1900
   450   000A30  EF7D  F000         	goto	start
   451   000A34                     __end_of_main:
   452                           	callstack 0
   453                           
   454 ;; *************** function _Transmit_MotionData *****************
   455 ;; Defined at:
   456 ;;		line 32 in file "system_core.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         0       0       0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 6
   477 ;; This function calls:
   478 ;;		_EUSART_Write
   479 ;;		_EUSART_is_tx_done
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text1
   486   000DC2                     __ptext1:
   487                           	callstack 0
   488   000DC2                     _Transmit_MotionData:
   489                           	callstack 24
   490   000DC2                     
   491                           ;system_core.c: 34:     EUSART_Write(0x4D);
   492   000DC2  0E4D               	movlw	77
   493   000DC4  ECEC  F005         	call	_EUSART_Write
   494                           
   495                           ;system_core.c: 35:     EUSART_Write(0x44);
   496   000DC8  0E44               	movlw	68
   497   000DCA  ECEC  F005         	call	_EUSART_Write
   498   000DCE                     
   499                           ;system_core.c: 37:     mainFlags.System_MotionFlag = 0;
   500   000DCE  9621               	bcf	_mainFlags^0,3,c
   501   000DD0                     l1836:
   502   000DD0  EC44  F007         	call	_EUSART_is_tx_done	;wreg free
   503   000DD4  0900               	iorlw	0
   504   000DD6  B4D8               	btfsc	status,2,c
   505   000DD8  EFF0  F006         	goto	u901
   506   000DDC  EFF2  F006         	goto	u900
   507   000DE0                     u901:
   508   000DE0  EFE8  F006         	goto	l1836
   509   000DE4                     u900:
   510   000DE4  0012               	return		;funcret
   511   000DE6                     __end_of_Transmit_MotionData:
   512                           	callstack 0
   513                           
   514 ;; *************** function _SYSTEM_Initialize *****************
   515 ;; Defined at:
   516 ;;		line 50 in file "mcc_generated_files/mcc.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 7
   537 ;; This function calls:
   538 ;;		_EUSART_Initialize
   539 ;;		_INTERRUPT_Initialize
   540 ;;		_OSCILLATOR_Initialize
   541 ;;		_PIN_MANAGER_Initialize
   542 ;;		_PMD_Initialize
   543 ;;		_TMR0_Initialize
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550   000E40                     __ptext2:
   551                           	callstack 0
   552   000E40                     _SYSTEM_Initialize:
   553                           	callstack 23
   554   000E40                     
   555                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   556   000E40  EC99  F007         	call	_INTERRUPT_Initialize	;wreg free
   557   000E44                     
   558                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   559   000E44  EC05  F007         	call	_PMD_Initialize	;wreg free
   560   000E48                     
   561                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   562   000E48  EC6F  F005         	call	_PIN_MANAGER_Initialize	;wreg free
   563   000E4C                     
   564                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   565   000E4C  EC2D  F007         	call	_OSCILLATOR_Initialize	;wreg free
   566   000E50                     
   567                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   568   000E50  ECF3  F006         	call	_TMR0_Initialize	;wreg free
   569   000E54                     
   570                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
   571   000E54  ECAF  F005         	call	_EUSART_Initialize	;wreg free
   572   000E58  0012               	return		;funcret
   573   000E5A                     __end_of_SYSTEM_Initialize:
   574                           	callstack 0
   575                           
   576 ;; *************** function _TMR0_Initialize *****************
   577 ;; Defined at:
   578 ;;		line 62 in file "mcc_generated_files/tmr0.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 6
   599 ;; This function calls:
   600 ;;		_TMR0_SetInterruptHandler
   601 ;; This function is called by:
   602 ;;		_SYSTEM_Initialize
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text3
   607   000DE6                     __ptext3:
   608                           	callstack 0
   609   000DE6                     _TMR0_Initialize:
   610                           	callstack 23
   611   000DE6                     
   612                           ;mcc_generated_files/tmr0.c: 67:     T0CON1 = 0x6F;
   613   000DE6  0E6F               	movlw	111
   614   000DE8  6ED6               	movwf	214,c	;volatile
   615                           
   616                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0xF3;
   617   000DEA  0EF3               	movlw	243
   618   000DEC  6ED4               	movwf	212,c	;volatile
   619                           
   620                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0x00;
   621   000DEE  0E00               	movlw	0
   622   000DF0  6ED3               	movwf	211,c	;volatile
   623   000DF2                     
   624                           ;mcc_generated_files/tmr0.c: 76:     PIR0bits.TMR0IF = 0;
   625   000DF2  010E               	movlb	14	; () banked
   626   000DF4  9BCA               	bcf	202,5,b	;volatile
   627   000DF6                     
   628                           ; BSR set to: 14
   629                           ;mcc_generated_files/tmr0.c: 79:     PIE0bits.TMR0IE = 1;
   630   000DF6  8BC2               	bsf	194,5,b	;volatile
   631   000DF8                     
   632                           ; BSR set to: 14
   633                           ;mcc_generated_files/tmr0.c: 82:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   634   000DF8  0EC0               	movlw	low _TMR0_DefaultInterruptHandler
   635   000DFA  6E36               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   636   000DFC  0E0E               	movlw	high _TMR0_DefaultInterruptHandler
   637   000DFE  6E37               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   638   000E00  EC66  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   639   000E04                     
   640                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x80;
   641   000E04  0E80               	movlw	128
   642   000E06  6ED5               	movwf	213,c	;volatile
   643   000E08  0012               	return		;funcret
   644   000E0A                     __end_of_TMR0_Initialize:
   645                           	callstack 0
   646                           
   647 ;; *************** function _TMR0_SetInterruptHandler *****************
   648 ;; Defined at:
   649 ;;		line 143 in file "mcc_generated_files/tmr0.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   652 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         2       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 5
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_TMR0_Initialize
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text4
   679   000ECC                     __ptext4:
   680                           	callstack 0
   681   000ECC                     _TMR0_SetInterruptHandler:
   682                           	callstack 23
   683   000ECC                     
   684                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
   685   000ECC  C036  F028         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   686   000ED0  C037  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   687   000ED4  0012               	return		;funcret
   688   000ED6                     __end_of_TMR0_SetInterruptHandler:
   689                           	callstack 0
   690                           
   691 ;; *************** function _PMD_Initialize *****************
   692 ;; Defined at:
   693 ;;		line 74 in file "mcc_generated_files/mcc.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 5
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_SYSTEM_Initialize
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text5
   722   000E0A                     __ptext5:
   723                           	callstack 0
   724   000E0A                     _PMD_Initialize:
   725                           	callstack 24
   726   000E0A                     
   727                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   728   000E0A  0E00               	movlw	0
   729   000E0C  010E               	movlb	14	; () banked
   730   000E0E  6FE1               	movwf	225,b	;volatile
   731                           
   732                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x7E;
   733   000E10  0E7E               	movlw	126
   734   000E12  6FE2               	movwf	226,b	;volatile
   735                           
   736                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x66;
   737   000E14  0E66               	movlw	102
   738   000E16  6FE3               	movwf	227,b	;volatile
   739                           
   740                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x0F;
   741   000E18  0E0F               	movlw	15
   742   000E1A  6FE4               	movwf	228,b	;volatile
   743                           
   744                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x11;
   745   000E1C  0E11               	movlw	17
   746   000E1E  6FE5               	movwf	229,b	;volatile
   747                           
   748                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   749   000E20  0E00               	movlw	0
   750   000E22  6FE6               	movwf	230,b	;volatile
   751   000E24                     
   752                           ; BSR set to: 14
   753   000E24  0012               	return		;funcret
   754   000E26                     __end_of_PMD_Initialize:
   755                           	callstack 0
   756                           
   757 ;; *************** function _PIN_MANAGER_Initialize *****************
   758 ;; Defined at:
   759 ;;		line 61 in file "mcc_generated_files/pin_manager.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 6
   780 ;; This function calls:
   781 ;;		_IOCCF2_SetInterruptHandler
   782 ;;		_IOCCF5_SetInterruptHandler
   783 ;; This function is called by:
   784 ;;		_SYSTEM_Initialize
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text6
   789   000ADE                     __ptext6:
   790                           	callstack 0
   791   000ADE                     _PIN_MANAGER_Initialize:
   792                           	callstack 23
   793   000ADE                     
   794                           ;mcc_generated_files/pin_manager.c: 66:     LATA = 0x00;
   795   000ADE  0E00               	movlw	0
   796   000AE0  6E83               	movwf	131,c	;volatile
   797                           
   798                           ;mcc_generated_files/pin_manager.c: 67:     LATB = 0x00;
   799   000AE2  0E00               	movlw	0
   800   000AE4  6E84               	movwf	132,c	;volatile
   801                           
   802                           ;mcc_generated_files/pin_manager.c: 68:     LATC = 0x00;
   803   000AE6  0E00               	movlw	0
   804   000AE8  6E85               	movwf	133,c	;volatile
   805                           
   806                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0x00;
   807   000AEA  0E00               	movlw	0
   808   000AEC  6E88               	movwf	136,c	;volatile
   809                           
   810                           ;mcc_generated_files/pin_manager.c: 74:     TRISB = 0xC0;
   811   000AEE  0EC0               	movlw	192
   812   000AF0  6E89               	movwf	137,c	;volatile
   813                           
   814                           ;mcc_generated_files/pin_manager.c: 75:     TRISC = 0xA4;
   815   000AF2  0EA4               	movlw	164
   816   000AF4  6E8A               	movwf	138,c	;volatile
   817                           
   818                           ;mcc_generated_files/pin_manager.c: 80:     ANSELC = 0x53;
   819   000AF6  0E53               	movlw	83
   820   000AF8  010F               	movlb	15	; () banked
   821   000AFA  6F21               	movwf	33,b	;volatile
   822   000AFC                     
   823                           ; BSR set to: 15
   824                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0xFF;
   825   000AFC  6919               	setf	25,b	;volatile
   826   000AFE                     
   827                           ; BSR set to: 15
   828                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
   829   000AFE  6911               	setf	17,b	;volatile
   830                           
   831                           ;mcc_generated_files/pin_manager.c: 87:     WPUE = 0x00;
   832   000B00  0E00               	movlw	0
   833   000B02  6F2D               	movwf	45,b	;volatile
   834                           
   835                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x00;
   836   000B04  0E00               	movlw	0
   837   000B06  6F18               	movwf	24,b	;volatile
   838                           
   839                           ;mcc_generated_files/pin_manager.c: 89:     WPUA = 0x00;
   840   000B08  0E00               	movlw	0
   841   000B0A  6F10               	movwf	16,b	;volatile
   842                           
   843                           ;mcc_generated_files/pin_manager.c: 90:     WPUC = 0x00;
   844   000B0C  0E00               	movlw	0
   845   000B0E  6F20               	movwf	32,b	;volatile
   846                           
   847                           ;mcc_generated_files/pin_manager.c: 95:     ODCONA = 0x00;
   848   000B10  0E00               	movlw	0
   849   000B12  6F0F               	movwf	15,b	;volatile
   850                           
   851                           ;mcc_generated_files/pin_manager.c: 96:     ODCONB = 0x00;
   852   000B14  0E00               	movlw	0
   853   000B16  6F17               	movwf	23,b	;volatile
   854                           
   855                           ;mcc_generated_files/pin_manager.c: 97:     ODCONC = 0x00;
   856   000B18  0E00               	movlw	0
   857   000B1A  6F1F               	movwf	31,b	;volatile
   858   000B1C                     
   859                           ; BSR set to: 15
   860                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONA = 0xFF;
   861   000B1C  690E               	setf	14,b	;volatile
   862   000B1E                     
   863                           ; BSR set to: 15
   864                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONB = 0xFF;
   865   000B1E  6916               	setf	22,b	;volatile
   866   000B20                     
   867                           ; BSR set to: 15
   868                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONC = 0xFF;
   869   000B20  691E               	setf	30,b	;volatile
   870   000B22                     
   871                           ; BSR set to: 15
   872                           ;mcc_generated_files/pin_manager.c: 109:     INLVLA = 0xFF;
   873   000B22  690D               	setf	13,b	;volatile
   874   000B24                     
   875                           ; BSR set to: 15
   876                           ;mcc_generated_files/pin_manager.c: 110:     INLVLB = 0xFF;
   877   000B24  6915               	setf	21,b	;volatile
   878   000B26                     
   879                           ; BSR set to: 15
   880                           ;mcc_generated_files/pin_manager.c: 111:     INLVLC = 0xFF;
   881   000B26  691D               	setf	29,b	;volatile
   882                           
   883                           ;mcc_generated_files/pin_manager.c: 112:     INLVLE = 0x08;
   884   000B28  0E08               	movlw	8
   885   000B2A  6F2A               	movwf	42,b	;volatile
   886   000B2C                     
   887                           ; BSR set to: 15
   888                           ;mcc_generated_files/pin_manager.c: 119:     IOCCFbits.IOCCF2 = 0;
   889   000B2C  951A               	bcf	26,2,b	;volatile
   890   000B2E                     
   891                           ; BSR set to: 15
   892                           ;mcc_generated_files/pin_manager.c: 121:     IOCCFbits.IOCCF5 = 0;
   893   000B2E  9B1A               	bcf	26,5,b	;volatile
   894   000B30                     
   895                           ; BSR set to: 15
   896                           ;mcc_generated_files/pin_manager.c: 123:     IOCCNbits.IOCCN2 = 0;
   897   000B30  951B               	bcf	27,2,b	;volatile
   898   000B32                     
   899                           ; BSR set to: 15
   900                           ;mcc_generated_files/pin_manager.c: 125:     IOCCNbits.IOCCN5 = 1;
   901   000B32  8B1B               	bsf	27,5,b	;volatile
   902   000B34                     
   903                           ; BSR set to: 15
   904                           ;mcc_generated_files/pin_manager.c: 127:     IOCCPbits.IOCCP2 = 1;
   905   000B34  851C               	bsf	28,2,b	;volatile
   906   000B36                     
   907                           ; BSR set to: 15
   908                           ;mcc_generated_files/pin_manager.c: 129:     IOCCPbits.IOCCP5 = 1;
   909   000B36  8B1C               	bsf	28,5,b	;volatile
   910   000B38                     
   911                           ; BSR set to: 15
   912                           ;mcc_generated_files/pin_manager.c: 134:     IOCCF2_SetInterruptHandler(movement_Detect_
      +                          Interrupt);
   913   000B38  0E70               	movlw	low _movement_Detect_Interrupt
   914   000B3A  6E36               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^0,c
   915   000B3C  0E0D               	movlw	high _movement_Detect_Interrupt
   916   000B3E  6E37               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^0,c
   917   000B40  EC70  F007         	call	_IOCCF2_SetInterruptHandler	;wreg free
   918   000B44                     
   919                           ;mcc_generated_files/pin_manager.c: 135:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
   920   000B44  0E42               	movlw	low _IOCCF5_DefaultInterruptHandler
   921   000B46  6E36               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^0,c
   922   000B48  0E0F               	movlw	high _IOCCF5_DefaultInterruptHandler
   923   000B4A  6E37               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^0,c
   924   000B4C  EC6B  F007         	call	_IOCCF5_SetInterruptHandler	;wreg free
   925   000B50                     
   926                           ;mcc_generated_files/pin_manager.c: 138:     PIE0bits.IOCIE = 1;
   927   000B50  010E               	movlb	14	; () banked
   928   000B52  89C2               	bsf	194,4,b	;volatile
   929                           
   930                           ;mcc_generated_files/pin_manager.c: 141:     RXPPS = 0x17;
   931   000B54  0E17               	movlw	23
   932   000B56  6FB5               	movwf	181,b	;volatile
   933                           
   934                           ;mcc_generated_files/pin_manager.c: 142:     RC6PPS = 0x09;
   935   000B58  0E09               	movlw	9
   936   000B5A  6FFD               	movwf	253,b	;volatile
   937   000B5C                     
   938                           ; BSR set to: 14
   939   000B5C  0012               	return		;funcret
   940   000B5E                     __end_of_PIN_MANAGER_Initialize:
   941                           	callstack 0
   942                           
   943 ;; *************** function _IOCCF5_SetInterruptHandler *****************
   944 ;; Defined at:
   945 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   948 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         2       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         2       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        2 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 5
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_PIN_MANAGER_Initialize
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text7
   975   000ED6                     __ptext7:
   976                           	callstack 0
   977   000ED6                     _IOCCF5_SetInterruptHandler:
   978                           	callstack 23
   979   000ED6                     
   980                           ;mcc_generated_files/pin_manager.c: 208:     IOCCF5_InterruptHandler = InterruptHandler;
   981   000ED6  C036  F02E         	movff	IOCCF5_SetInterruptHandler@InterruptHandler,_IOCCF5_InterruptHandler
   982   000EDA  C037  F02F         	movff	IOCCF5_SetInterruptHandler@InterruptHandler+1,_IOCCF5_InterruptHandler+1
   983   000EDE  0012               	return		;funcret
   984   000EE0                     __end_of_IOCCF5_SetInterruptHandler:
   985                           	callstack 0
   986                           
   987 ;; *************** function _IOCCF2_SetInterruptHandler *****************
   988 ;; Defined at:
   989 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   992 ;;		 -> movement_Detect_Interrupt(1), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:        2 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 5
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_PIN_MANAGER_Initialize
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text8
  1019   000EE0                     __ptext8:
  1020                           	callstack 0
  1021   000EE0                     _IOCCF2_SetInterruptHandler:
  1022                           	callstack 23
  1023   000EE0                     
  1024                           ;mcc_generated_files/pin_manager.c: 178:     IOCCF2_InterruptHandler = InterruptHandler;
  1025   000EE0  C036  F030         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  1026   000EE4  C037  F031         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  1027   000EE8  0012               	return		;funcret
  1028   000EEA                     __end_of_IOCCF2_SetInterruptHandler:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _OSCILLATOR_Initialize *****************
  1032 ;; Defined at:
  1033 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 5
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_SYSTEM_Initialize
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text9
  1062   000E5A                     __ptext9:
  1063                           	callstack 0
  1064   000E5A                     _OSCILLATOR_Initialize:
  1065                           	callstack 24
  1066   000E5A                     
  1067                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  1068   000E5A  0E62               	movlw	98
  1069   000E5C  010E               	movlb	14	; () banked
  1070   000E5E  6FD8               	movwf	216,b	;volatile
  1071                           
  1072                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1073   000E60  0E00               	movlw	0
  1074   000E62  6FDA               	movwf	218,b	;volatile
  1075                           
  1076                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1077   000E64  0E00               	movlw	0
  1078   000E66  6FDC               	movwf	220,b	;volatile
  1079                           
  1080                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  1081   000E68  0E02               	movlw	2
  1082   000E6A  6FDE               	movwf	222,b	;volatile
  1083                           
  1084                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1085   000E6C  0E00               	movlw	0
  1086   000E6E  6FDD               	movwf	221,b	;volatile
  1087   000E70                     
  1088                           ; BSR set to: 14
  1089   000E70  0012               	return		;funcret
  1090   000E72                     __end_of_OSCILLATOR_Initialize:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _INTERRUPT_Initialize *****************
  1094 ;; Defined at:
  1095 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		None
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 5
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_SYSTEM_Initialize
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text10
  1124   000F32                     __ptext10:
  1125                           	callstack 0
  1126   000F32                     _INTERRUPT_Initialize:
  1127                           	callstack 24
  1128   000F32                     
  1129                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1130   000F32  9AF2               	bcf	242,5,c	;volatile
  1131   000F34  0012               	return		;funcret
  1132   000F36                     __end_of_INTERRUPT_Initialize:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _EUSART_Initialize *****************
  1136 ;; Defined at:
  1137 ;;		line 92 in file "mcc_generated_files/eusart.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 6
  1158 ;; This function calls:
  1159 ;;		_EUSART_SetErrorHandler
  1160 ;;		_EUSART_SetFramingErrorHandler
  1161 ;;		_EUSART_SetOverrunErrorHandler
  1162 ;;		_EUSART_SetRxInterruptHandler
  1163 ;;		_EUSART_SetTxInterruptHandler
  1164 ;; This function is called by:
  1165 ;;		_SYSTEM_Initialize
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text11
  1170   000B5E                     __ptext11:
  1171                           	callstack 0
  1172   000B5E                     _EUSART_Initialize:
  1173                           	callstack 23
  1174   000B5E                     
  1175                           ;mcc_generated_files/eusart.c: 95:     PIE3bits.RCIE = 0;
  1176   000B5E  010E               	movlb	14	; () banked
  1177   000B60  9BC5               	bcf	197,5,b	;volatile
  1178   000B62                     
  1179                           ; BSR set to: 14
  1180                           ;mcc_generated_files/eusart.c: 96:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1181   000B62  0E34               	movlw	low _EUSART_Receive_ISR
  1182   000B64  6E36               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  1183   000B66  0E0A               	movlw	high _EUSART_Receive_ISR
  1184   000B68  6E37               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  1185   000B6A  EC7A  F007         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1186   000B6E                     
  1187                           ;mcc_generated_files/eusart.c: 97:     PIE3bits.TXIE = 0;
  1188   000B6E  010E               	movlb	14	; () banked
  1189   000B70  99C5               	bcf	197,4,b	;volatile
  1190                           
  1191                           ;mcc_generated_files/eusart.c: 98:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  1192   000B72  0E76               	movlw	low _EUSART_Transmit_ISR
  1193   000B74  6E36               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  1194   000B76  0E0C               	movlw	high _EUSART_Transmit_ISR
  1195   000B78  6E37               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  1196   000B7A  EC75  F007         	call	_EUSART_SetTxInterruptHandler	;wreg free
  1197   000B7E                     
  1198                           ;mcc_generated_files/eusart.c: 102:     BAUD1CON = 0x0A;
  1199   000B7E  0E0A               	movlw	10
  1200   000B80  6E9F               	movwf	159,c	;volatile
  1201   000B82                     
  1202                           ;mcc_generated_files/eusart.c: 105:     RC1STA = 0x90;
  1203   000B82  0E90               	movlw	144
  1204   000B84  6E9D               	movwf	157,c	;volatile
  1205   000B86                     
  1206                           ;mcc_generated_files/eusart.c: 108:     TX1STA = 0x24;
  1207   000B86  0E24               	movlw	36
  1208   000B88  6E9E               	movwf	158,c	;volatile
  1209   000B8A                     
  1210                           ;mcc_generated_files/eusart.c: 111:     SP1BRGL = 0x19;
  1211   000B8A  0E19               	movlw	25
  1212   000B8C  6E9B               	movwf	155,c	;volatile
  1213   000B8E                     
  1214                           ;mcc_generated_files/eusart.c: 114:     SP1BRGH = 0x00;
  1215   000B8E  0E00               	movlw	0
  1216   000B90  6E9C               	movwf	156,c	;volatile
  1217   000B92                     
  1218                           ;mcc_generated_files/eusart.c: 117:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1219   000B92  0E44               	movlw	low _EUSART_DefaultFramingErrorHandler
  1220   000B94  6E36               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1221   000B96  0E0F               	movlw	high _EUSART_DefaultFramingErrorHandler
  1222   000B98  6E37               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1223   000B9A  EC84  F007         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1224   000B9E                     
  1225                           ;mcc_generated_files/eusart.c: 118:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1226   000B9E  0E26               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1227   000BA0  6E36               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1228   000BA2  0E0F               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1229   000BA4  6E37               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1230   000BA6  EC7F  F007         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1231   000BAA                     
  1232                           ;mcc_generated_files/eusart.c: 119:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1233   000BAA  0E2C               	movlw	low _EUSART_DefaultErrorHandler
  1234   000BAC  6E36               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1235   000BAE  0E0F               	movlw	high _EUSART_DefaultErrorHandler
  1236   000BB0  6E37               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1237   000BB2  EC89  F007         	call	_EUSART_SetErrorHandler	;wreg free
  1238                           
  1239                           ;mcc_generated_files/eusart.c: 121:     eusartRxLastError.status = 0;
  1240   000BB6  0E00               	movlw	0
  1241   000BB8  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  1242                           
  1243                           ;mcc_generated_files/eusart.c: 124:     eusartTxHead = 0;
  1244   000BBA  0E00               	movlw	0
  1245   000BBC  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1246                           
  1247                           ;mcc_generated_files/eusart.c: 125:     eusartTxTail = 0;
  1248   000BBE  0E00               	movlw	0
  1249   000BC0  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  1250                           
  1251                           ;mcc_generated_files/eusart.c: 126:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  1252   000BC2  0E08               	movlw	8
  1253   000BC4  6E1D               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  1254                           
  1255                           ;mcc_generated_files/eusart.c: 128:     eusartRxHead = 0;
  1256   000BC6  0E00               	movlw	0
  1257   000BC8  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  1258                           
  1259                           ;mcc_generated_files/eusart.c: 129:     eusartRxTail = 0;
  1260   000BCA  0E00               	movlw	0
  1261   000BCC  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  1262                           
  1263                           ;mcc_generated_files/eusart.c: 130:     eusartRxCount = 0;
  1264   000BCE  0E00               	movlw	0
  1265   000BD0  6E1A               	movwf	_eusartRxCount^0,c	;volatile
  1266   000BD2                     
  1267                           ;mcc_generated_files/eusart.c: 133:     PIE3bits.RCIE = 1;
  1268   000BD2  010E               	movlb	14	; () banked
  1269   000BD4  8BC5               	bsf	197,5,b	;volatile
  1270   000BD6                     
  1271                           ; BSR set to: 14
  1272   000BD6  0012               	return		;funcret
  1273   000BD8                     __end_of_EUSART_Initialize:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1277 ;; Defined at:
  1278 ;;		line 282 in file "mcc_generated_files/eusart.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1281 ;;		 -> EUSART_Transmit_ISR(1), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         2       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 5
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_EUSART_Initialize
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text12
  1308   000EEA                     __ptext12:
  1309                           	callstack 0
  1310   000EEA                     _EUSART_SetTxInterruptHandler:
  1311                           	callstack 23
  1312   000EEA                     
  1313                           ;mcc_generated_files/eusart.c: 283:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  1314   000EEA  C036  F02C         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  1315   000EEE  C037  F02D         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  1316   000EF2  0012               	return		;funcret
  1317   000EF4                     __end_of_EUSART_SetTxInterruptHandler:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1321 ;; Defined at:
  1322 ;;		line 286 in file "mcc_generated_files/eusart.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1325 ;;		 -> EUSART_Receive_ISR(1), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 5
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_EUSART_Initialize
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text13
  1352   000EF4                     __ptext13:
  1353                           	callstack 0
  1354   000EF4                     _EUSART_SetRxInterruptHandler:
  1355                           	callstack 23
  1356   000EF4                     
  1357                           ;mcc_generated_files/eusart.c: 287:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1358   000EF4  C036  F02A         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1359   000EF8  C037  F02B         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1360   000EFC  0012               	return		;funcret
  1361   000EFE                     __end_of_EUSART_SetRxInterruptHandler:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1365 ;; Defined at:
  1366 ;;		line 274 in file "mcc_generated_files/eusart.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1369 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1381 ;;      Params:         2       0       0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 5
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_EUSART_Initialize
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text14
  1396   000EFE                     __ptext14:
  1397                           	callstack 0
  1398   000EFE                     _EUSART_SetOverrunErrorHandler:
  1399                           	callstack 23
  1400   000EFE                     
  1401                           ;mcc_generated_files/eusart.c: 275:     EUSART_OverrunErrorHandler = interruptHandler;
  1402   000EFE  C036  F024         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1403   000F02  C037  F025         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1404   000F06  0012               	return		;funcret
  1405   000F08                     __end_of_EUSART_SetOverrunErrorHandler:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1409 ;; Defined at:
  1410 ;;		line 270 in file "mcc_generated_files/eusart.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1413 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         2       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 5
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_EUSART_Initialize
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text15
  1440   000F08                     __ptext15:
  1441                           	callstack 0
  1442   000F08                     _EUSART_SetFramingErrorHandler:
  1443                           	callstack 23
  1444   000F08                     
  1445                           ;mcc_generated_files/eusart.c: 271:     EUSART_FramingErrorHandler = interruptHandler;
  1446   000F08  C036  F026         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1447   000F0C  C037  F027         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1448   000F10  0012               	return		;funcret
  1449   000F12                     __end_of_EUSART_SetFramingErrorHandler:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _EUSART_SetErrorHandler *****************
  1453 ;; Defined at:
  1454 ;;		line 278 in file "mcc_generated_files/eusart.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1457 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1472 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1473 ;;Total ram usage:        2 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 5
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_EUSART_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text16
  1484   000F12                     __ptext16:
  1485                           	callstack 0
  1486   000F12                     _EUSART_SetErrorHandler:
  1487                           	callstack 23
  1488   000F12                     
  1489                           ;mcc_generated_files/eusart.c: 279:     EUSART_ErrorHandler = interruptHandler;
  1490   000F12  C036  F022         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1491   000F16  C037  F023         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1492   000F1A  0012               	return		;funcret
  1493   000F1C                     __end_of_EUSART_SetErrorHandler:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _Recieve_ArmData *****************
  1497 ;; Defined at:
  1498 ;;		line 43 in file "system_core.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  i               2   11[COMRAM] int 
  1503 ;;  j               2   13[COMRAM] int 
  1504 ;;  msgBuff         4    7[COMRAM] unsigned char [4]
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1517 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:       10 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 6
  1521 ;; This function calls:
  1522 ;;		_EUSART_Read
  1523 ;;		_EUSART_Write
  1524 ;;		_EUSART_is_rx_ready
  1525 ;;		_EUSART_is_tx_done
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text17
  1532   000802                     __ptext17:
  1533                           	callstack 0
  1534   000802                     _Recieve_ArmData:
  1535                           	callstack 24
  1536   000802                     
  1537                           ;system_core.c: 45:     uint8_t msgBuff[4];;system_core.c: 47:     if(EUSART_is_rx_ready
      +                          ())
  1538   000802  EC39  F007         	call	_EUSART_is_rx_ready	;wreg free
  1539   000806  0900               	iorlw	0
  1540   000808  B4D8               	btfsc	status,2,c
  1541   00080A  EF09  F004         	goto	u781
  1542   00080E  EF0B  F004         	goto	u780
  1543   000812                     u781:
  1544   000812  EF25  F004         	goto	l1790
  1545   000816                     u780:
  1546   000816                     
  1547                           ;system_core.c: 48:     {;system_core.c: 49:         for(int i=0;i<sizeof(msgBuff);i++)
  1548   000816  0E00               	movlw	0
  1549   000818  6E3E               	movwf	(Recieve_ArmData@i+1)^0,c
  1550   00081A  0E00               	movlw	0
  1551   00081C  6E3D               	movwf	Recieve_ArmData@i^0,c
  1552   00081E                     l1784:
  1553                           
  1554                           ;system_core.c: 50:         {;system_core.c: 51:             msgBuff[i] = EUSART_Read();
  1555   00081E  EC16  F006         	call	_EUSART_Read	;wreg free
  1556   000822  6E37               	movwf	??_Recieve_ArmData^0,c
  1557   000824  503D               	movf	Recieve_ArmData@i^0,w,c
  1558   000826  0F39               	addlw	low Recieve_ArmData@msgBuff
  1559   000828  6ED9               	movwf	fsr2l,c
  1560   00082A  6ADA               	clrf	fsr2h,c
  1561   00082C  C037  FFDF         	movff	??_Recieve_ArmData,indf2
  1562   000830                     
  1563                           ;system_core.c: 52:         }
  1564   000830  4A3D               	infsnz	Recieve_ArmData@i^0,f,c
  1565   000832  2A3E               	incf	(Recieve_ArmData@i+1)^0,f,c
  1566   000834  503E               	movf	(Recieve_ArmData@i+1)^0,w,c
  1567   000836  E109               	bnz	u790
  1568   000838  0E04               	movlw	4
  1569   00083A  5C3D               	subwf	Recieve_ArmData@i^0,w,c
  1570   00083C  A0D8               	btfss	status,0,c
  1571   00083E  EF23  F004         	goto	u791
  1572   000842  EF25  F004         	goto	u790
  1573   000846                     u791:
  1574   000846  EF0F  F004         	goto	l1784
  1575   00084A                     u790:
  1576   00084A                     l1790:
  1577                           
  1578                           ;system_core.c: 56:     for(int j=0;j<sizeof(msgBuff);j++)
  1579   00084A  0E00               	movlw	0
  1580   00084C  6E40               	movwf	(Recieve_ArmData@j+1)^0,c
  1581   00084E  0E00               	movlw	0
  1582   000850  6E3F               	movwf	Recieve_ArmData@j^0,c
  1583   000852                     l1796:
  1584                           
  1585                           ;system_core.c: 57:     {;system_core.c: 58:         if(j != (sizeof(msgBuff)-2))
  1586   000852  0E02               	movlw	2
  1587   000854  183F               	xorwf	Recieve_ArmData@j^0,w,c
  1588   000856  1040               	iorwf	(Recieve_ArmData@j+1)^0,w,c
  1589   000858  B4D8               	btfsc	status,2,c
  1590   00085A  EF31  F004         	goto	u801
  1591   00085E  EF33  F004         	goto	u800
  1592   000862                     u801:
  1593   000862  EFB5  F004         	goto	l1818
  1594   000866                     u800:
  1595   000866                     
  1596                           ;system_core.c: 59:         {;system_core.c: 60:             if((msgBuff[j] == 0x52)
  1597   000866  503F               	movf	Recieve_ArmData@j^0,w,c
  1598   000868  0F39               	addlw	low Recieve_ArmData@msgBuff
  1599   00086A  6ED9               	movwf	fsr2l,c
  1600   00086C  6ADA               	clrf	fsr2h,c
  1601   00086E  0E52               	movlw	82
  1602   000870  18DE               	xorwf	postinc2,w,c
  1603   000872  A4D8               	btfss	status,2,c
  1604   000874  EF3E  F004         	goto	u811
  1605   000878  EF40  F004         	goto	u810
  1606   00087C                     u811:
  1607   00087C  EF74  F004         	goto	l1808
  1608   000880                     u810:
  1609   000880  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1610   000884  0E01               	movlw	1
  1611   000886  2637               	addwf	??_Recieve_ArmData^0,f,c
  1612   000888  5037               	movf	??_Recieve_ArmData^0,w,c
  1613   00088A  0F39               	addlw	low Recieve_ArmData@msgBuff
  1614   00088C  6ED9               	movwf	fsr2l,c
  1615   00088E  6ADA               	clrf	fsr2h,c
  1616   000890  0E53               	movlw	83
  1617   000892  18DE               	xorwf	postinc2,w,c
  1618   000894  A4D8               	btfss	status,2,c
  1619   000896  EF4F  F004         	goto	u821
  1620   00089A  EF51  F004         	goto	u820
  1621   00089E                     u821:
  1622   00089E  EF74  F004         	goto	l1808
  1623   0008A2                     u820:
  1624   0008A2  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1625   0008A6  0E02               	movlw	2
  1626   0008A8  2637               	addwf	??_Recieve_ArmData^0,f,c
  1627   0008AA  5037               	movf	??_Recieve_ArmData^0,w,c
  1628   0008AC  0F39               	addlw	low Recieve_ArmData@msgBuff
  1629   0008AE  6ED9               	movwf	fsr2l,c
  1630   0008B0  6ADA               	clrf	fsr2h,c
  1631   0008B2  0E4D               	movlw	77
  1632   0008B4  18DE               	xorwf	postinc2,w,c
  1633   0008B6  A4D8               	btfss	status,2,c
  1634   0008B8  EF60  F004         	goto	u831
  1635   0008BC  EF62  F004         	goto	u830
  1636   0008C0                     u831:
  1637   0008C0  EF74  F004         	goto	l1808
  1638   0008C4                     u830:
  1639   0008C4                     
  1640                           ;system_core.c: 63:             {;system_core.c: 64:                 EUSART_Write(0x41);
  1641   0008C4  0E41               	movlw	65
  1642   0008C6  ECEC  F005         	call	_EUSART_Write
  1643   0008CA                     l1806:
  1644   0008CA  EC44  F007         	call	_EUSART_is_tx_done	;wreg free
  1645   0008CE  0900               	iorlw	0
  1646   0008D0  B4D8               	btfsc	status,2,c
  1647   0008D2  EF6D  F004         	goto	u841
  1648   0008D6  EF6F  F004         	goto	u840
  1649   0008DA                     u841:
  1650   0008DA  EF65  F004         	goto	l1806
  1651   0008DE                     u840:
  1652   0008DE                     
  1653                           ;system_core.c: 68:                 mainFlags.SystemArmed = 1;
  1654   0008DE  8021               	bsf	_mainFlags^0,0,c
  1655                           
  1656                           ;system_core.c: 69:                 mainFlags.SystemDisarmed = 0;
  1657   0008E0  9221               	bcf	_mainFlags^0,1,c
  1658                           
  1659                           ;system_core.c: 71:                 mainFlags.System_BluetoothReceive = 0;
  1660   0008E2  9821               	bcf	_mainFlags^0,4,c
  1661                           
  1662                           ;system_core.c: 72:                 break;
  1663   0008E4  EFC2  F004         	goto	l336
  1664   0008E8                     l1808:
  1665                           
  1666                           ;system_core.c: 75:             if((msgBuff[j] == 0x44)
  1667   0008E8  503F               	movf	Recieve_ArmData@j^0,w,c
  1668   0008EA  0F39               	addlw	low Recieve_ArmData@msgBuff
  1669   0008EC  6ED9               	movwf	fsr2l,c
  1670   0008EE  6ADA               	clrf	fsr2h,c
  1671   0008F0  0E44               	movlw	68
  1672   0008F2  18DE               	xorwf	postinc2,w,c
  1673   0008F4  A4D8               	btfss	status,2,c
  1674   0008F6  EF7F  F004         	goto	u851
  1675   0008FA  EF81  F004         	goto	u850
  1676   0008FE                     u851:
  1677   0008FE  EFB5  F004         	goto	l1818
  1678   000902                     u850:
  1679   000902  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1680   000906  0E01               	movlw	1
  1681   000908  2637               	addwf	??_Recieve_ArmData^0,f,c
  1682   00090A  5037               	movf	??_Recieve_ArmData^0,w,c
  1683   00090C  0F39               	addlw	low Recieve_ArmData@msgBuff
  1684   00090E  6ED9               	movwf	fsr2l,c
  1685   000910  6ADA               	clrf	fsr2h,c
  1686   000912  0E53               	movlw	83
  1687   000914  18DE               	xorwf	postinc2,w,c
  1688   000916  A4D8               	btfss	status,2,c
  1689   000918  EF90  F004         	goto	u861
  1690   00091C  EF92  F004         	goto	u860
  1691   000920                     u861:
  1692   000920  EFB5  F004         	goto	l1818
  1693   000924                     u860:
  1694   000924  C03F  F037         	movff	Recieve_ArmData@j,??_Recieve_ArmData
  1695   000928  0E02               	movlw	2
  1696   00092A  2637               	addwf	??_Recieve_ArmData^0,f,c
  1697   00092C  5037               	movf	??_Recieve_ArmData^0,w,c
  1698   00092E  0F39               	addlw	low Recieve_ArmData@msgBuff
  1699   000930  6ED9               	movwf	fsr2l,c
  1700   000932  6ADA               	clrf	fsr2h,c
  1701   000934  0E4D               	movlw	77
  1702   000936  18DE               	xorwf	postinc2,w,c
  1703   000938  A4D8               	btfss	status,2,c
  1704   00093A  EFA1  F004         	goto	u871
  1705   00093E  EFA3  F004         	goto	u870
  1706   000942                     u871:
  1707   000942  EFB5  F004         	goto	l1818
  1708   000946                     u870:
  1709   000946                     
  1710                           ;system_core.c: 78:             {;system_core.c: 79:                 EUSART_Write(0x41);
  1711   000946  0E41               	movlw	65
  1712   000948  ECEC  F005         	call	_EUSART_Write
  1713   00094C                     l1816:
  1714   00094C  EC44  F007         	call	_EUSART_is_tx_done	;wreg free
  1715   000950  0900               	iorlw	0
  1716   000952  B4D8               	btfsc	status,2,c
  1717   000954  EFAE  F004         	goto	u881
  1718   000958  EFB0  F004         	goto	u880
  1719   00095C                     u881:
  1720   00095C  EFA6  F004         	goto	l1816
  1721   000960                     u880:
  1722   000960                     
  1723                           ;system_core.c: 85:                 mainFlags.SystemDisarmed = 1;
  1724   000960  8221               	bsf	_mainFlags^0,1,c
  1725                           
  1726                           ;system_core.c: 86:                 mainFlags.SystemArmed = 0;
  1727   000962  9021               	bcf	_mainFlags^0,0,c
  1728                           
  1729                           ;system_core.c: 88:                 mainFlags.System_BluetoothReceive = 0;
  1730   000964  9821               	bcf	_mainFlags^0,4,c
  1731                           
  1732                           ;system_core.c: 89:                 break;
  1733   000966  EFC2  F004         	goto	l336
  1734   00096A                     l1818:
  1735                           
  1736                           ;system_core.c: 92:     }
  1737   00096A  4A3F               	infsnz	Recieve_ArmData@j^0,f,c
  1738   00096C  2A40               	incf	(Recieve_ArmData@j+1)^0,f,c
  1739   00096E  5040               	movf	(Recieve_ArmData@j+1)^0,w,c
  1740   000970  E109               	bnz	u890
  1741   000972  0E04               	movlw	4
  1742   000974  5C3F               	subwf	Recieve_ArmData@j^0,w,c
  1743   000976  A0D8               	btfss	status,0,c
  1744   000978  EFC0  F004         	goto	u891
  1745   00097C  EFC2  F004         	goto	u890
  1746   000980                     u891:
  1747   000980  EF29  F004         	goto	l1796
  1748   000984                     u890:
  1749   000984                     l336:
  1750                           
  1751                           ;system_core.c: 93:     mainFlags.System_BluetoothReceive = 0;
  1752   000984  9821               	bcf	_mainFlags^0,4,c
  1753   000986  0012               	return		;funcret
  1754   000988                     __end_of_Recieve_ArmData:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _EUSART_is_tx_done *****************
  1758 ;; Defined at:
  1759 ;;		line 146 in file "mcc_generated_files/eusart.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      _Bool 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 5
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_Transmit_MotionData
  1784 ;;		_Recieve_ArmData
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text18
  1789   000E88                     __ptext18:
  1790                           	callstack 0
  1791   000E88                     _EUSART_is_tx_done:
  1792                           	callstack 24
  1793   000E88                     
  1794                           ;mcc_generated_files/eusart.c: 148:     return TX1STAbits.TRMT;
  1795   000E88  B29E               	btfsc	158,1,c	;volatile
  1796   000E8A  EF49  F007         	goto	u711
  1797   000E8E  EF4C  F007         	goto	u710
  1798   000E92                     u711:
  1799   000E92  0E01               	movlw	1
  1800   000E94  EF4D  F007         	goto	u716
  1801   000E98                     u710:
  1802   000E98  0E00               	movlw	0
  1803   000E9A                     u716:
  1804   000E9A  0012               	return		;funcret
  1805   000E9C                     __end_of_EUSART_is_tx_done:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _EUSART_is_rx_ready *****************
  1809 ;; Defined at:
  1810 ;;		line 141 in file "mcc_generated_files/eusart.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      _Bool 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 5
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_Recieve_ArmData
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text19
  1839   000E72                     __ptext19:
  1840                           	callstack 0
  1841   000E72                     _EUSART_is_rx_ready:
  1842                           	callstack 24
  1843   000E72                     
  1844                           ;mcc_generated_files/eusart.c: 143:     return (eusartRxCount ? 1 : 0);
  1845   000E72  501A               	movf	_eusartRxCount^0,w,c	;volatile
  1846   000E74  A4D8               	btfss	status,2,c
  1847   000E76  EF3F  F007         	goto	u721
  1848   000E7A  EF42  F007         	goto	u720
  1849   000E7E                     u721:
  1850   000E7E  0E01               	movlw	1
  1851   000E80  EF43  F007         	goto	u730
  1852   000E84                     u720:
  1853   000E84  0E00               	movlw	0
  1854   000E86                     u730:
  1855   000E86  0012               	return		;funcret
  1856   000E88                     __end_of_EUSART_is_rx_ready:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _EUSART_Write *****************
  1860 ;; Defined at:
  1861 ;;		line 177 in file "mcc_generated_files/eusart.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  txData          1    wreg     unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  txData          1    4[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 5
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_Transmit_MotionData
  1886 ;;		_Recieve_ArmData
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text20
  1891   000BD8                     __ptext20:
  1892                           	callstack 0
  1893   000BD8                     _EUSART_Write:
  1894                           	callstack 24
  1895                           
  1896                           ;incstack = 0
  1897                           ;EUSART_Write@txData stored from wreg
  1898   000BD8  6E36               	movwf	EUSART_Write@txData^0,c
  1899   000BDA                     l1702:
  1900                           
  1901                           ;mcc_generated_files/eusart.c: 179:     while(0 == eusartTxBufferRemaining)
  1902   000BDA  501D               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
  1903   000BDC  B4D8               	btfsc	status,2,c
  1904   000BDE  EFF3  F005         	goto	u681
  1905   000BE2  EFF5  F005         	goto	u680
  1906   000BE6                     u681:
  1907   000BE6  EFED  F005         	goto	l1702
  1908   000BEA                     u680:
  1909   000BEA                     
  1910                           ;mcc_generated_files/eusart.c: 183:     if(0 == PIE3bits.TXIE)
  1911   000BEA  010E               	movlb	14	; () banked
  1912   000BEC  B9C5               	btfsc	197,4,b	;volatile
  1913   000BEE  EFFB  F005         	goto	u691
  1914   000BF2  EFFD  F005         	goto	u690
  1915   000BF6                     u691:
  1916   000BF6  EF01  F006         	goto	l448
  1917   000BFA                     u690:
  1918   000BFA                     
  1919                           ; BSR set to: 14
  1920                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         TX1
      +                          REG = txData;
  1921   000BFA  C036  FF9A         	movff	EUSART_Write@txData,3994	;volatile
  1922                           
  1923                           ;mcc_generated_files/eusart.c: 186:     }
  1924   000BFE  EF14  F006         	goto	l1716
  1925   000C02                     l448:
  1926                           
  1927                           ; BSR set to: 14
  1928                           ;mcc_generated_files/eusart.c: 188:     {;mcc_generated_files/eusart.c: 189:         PIE
      +                          3bits.TXIE = 0;
  1929   000C02  99C5               	bcf	197,4,b	;volatile
  1930   000C04                     
  1931                           ; BSR set to: 14
  1932                           ;mcc_generated_files/eusart.c: 190:         eusartTxBuffer[eusartTxHead++] = txData;
  1933   000C04  501F               	movf	_eusartTxHead^0,w,c
  1934   000C06  0F11               	addlw	low _eusartTxBuffer
  1935   000C08  6ED9               	movwf	fsr2l,c
  1936   000C0A  6ADA               	clrf	fsr2h,c
  1937   000C0C  C036  FFDF         	movff	EUSART_Write@txData,indf2
  1938   000C10                     
  1939                           ; BSR set to: 14
  1940   000C10  2A1F               	incf	_eusartTxHead^0,f,c	;volatile
  1941   000C12                     
  1942                           ; BSR set to: 14
  1943                           ;mcc_generated_files/eusart.c: 191:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1944   000C12  0E07               	movlw	7
  1945   000C14  641F               	cpfsgt	_eusartTxHead^0,c	;volatile
  1946   000C16  EF0F  F006         	goto	u701
  1947   000C1A  EF11  F006         	goto	u700
  1948   000C1E                     u701:
  1949   000C1E  EF13  F006         	goto	l1714
  1950   000C22                     u700:
  1951   000C22                     
  1952                           ; BSR set to: 14
  1953                           ;mcc_generated_files/eusart.c: 192:         {;mcc_generated_files/eusart.c: 193:        
      +                               eusartTxHead = 0;
  1954   000C22  0E00               	movlw	0
  1955   000C24  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1956   000C26                     l1714:
  1957                           
  1958                           ; BSR set to: 14
  1959                           ;mcc_generated_files/eusart.c: 195:         eusartTxBufferRemaining--;
  1960   000C26  061D               	decf	_eusartTxBufferRemaining^0,f,c	;volatile
  1961   000C28                     l1716:
  1962                           
  1963                           ; BSR set to: 14
  1964                           ;mcc_generated_files/eusart.c: 197:     PIE3bits.TXIE = 1;
  1965   000C28  89C5               	bsf	197,4,b	;volatile
  1966   000C2A                     
  1967                           ; BSR set to: 14
  1968   000C2A  0012               	return		;funcret
  1969   000C2C                     __end_of_EUSART_Write:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _EUSART_Read *****************
  1973 ;; Defined at:
  1974 ;;		line 155 in file "mcc_generated_files/eusart.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  readValue       1    4[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 5
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_Recieve_ArmData
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text21
  2003   000C2C                     __ptext21:
  2004                           	callstack 0
  2005   000C2C                     _EUSART_Read:
  2006                           	callstack 24
  2007   000C2C                     l1728:
  2008                           
  2009                           ;mcc_generated_files/eusart.c: 159:     while(0 == eusartRxCount)
  2010   000C2C  501A               	movf	_eusartRxCount^0,w,c	;volatile
  2011   000C2E  B4D8               	btfsc	status,2,c
  2012   000C30  EF1C  F006         	goto	u741
  2013   000C34  EF1E  F006         	goto	u740
  2014   000C38                     u741:
  2015   000C38  EF16  F006         	goto	l1728
  2016   000C3C                     u740:
  2017   000C3C                     
  2018                           ;mcc_generated_files/eusart.c: 163:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  2019   000C3C  501B               	movf	_eusartRxTail^0,w,c
  2020   000C3E  0F01               	addlw	low _eusartRxStatusBuffer
  2021   000C40  6ED9               	movwf	fsr2l,c
  2022   000C42  6ADA               	clrf	fsr2h,c
  2023   000C44  50DF               	movf	indf2,w,c
  2024   000C46  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  2025                           
  2026                           ;mcc_generated_files/eusart.c: 165:     readValue = eusartRxBuffer[eusartRxTail++];
  2027   000C48  501B               	movf	_eusartRxTail^0,w,c
  2028   000C4A  0F09               	addlw	low _eusartRxBuffer
  2029   000C4C  6ED9               	movwf	fsr2l,c
  2030   000C4E  6ADA               	clrf	fsr2h,c
  2031   000C50  50DF               	movf	indf2,w,c
  2032   000C52  6E36               	movwf	EUSART_Read@readValue^0,c
  2033   000C54  2A1B               	incf	_eusartRxTail^0,f,c	;volatile
  2034   000C56                     
  2035                           ;mcc_generated_files/eusart.c: 166:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2036   000C56  0E07               	movlw	7
  2037   000C58  641B               	cpfsgt	_eusartRxTail^0,c	;volatile
  2038   000C5A  EF31  F006         	goto	u751
  2039   000C5E  EF33  F006         	goto	u750
  2040   000C62                     u751:
  2041   000C62  EF35  F006         	goto	l1738
  2042   000C66                     u750:
  2043   000C66                     
  2044                           ;mcc_generated_files/eusart.c: 167:     {;mcc_generated_files/eusart.c: 168:         eus
      +                          artRxTail = 0;
  2045   000C66  0E00               	movlw	0
  2046   000C68  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  2047   000C6A                     l1738:
  2048                           
  2049                           ;mcc_generated_files/eusart.c: 170:     PIE3bits.RCIE = 0;
  2050   000C6A  010E               	movlb	14	; () banked
  2051   000C6C  9BC5               	bcf	197,5,b	;volatile
  2052   000C6E                     
  2053                           ; BSR set to: 14
  2054                           ;mcc_generated_files/eusart.c: 171:     eusartRxCount--;
  2055   000C6E  061A               	decf	_eusartRxCount^0,f,c	;volatile
  2056   000C70                     
  2057                           ; BSR set to: 14
  2058                           ;mcc_generated_files/eusart.c: 172:     PIE3bits.RCIE = 1;
  2059   000C70  8BC5               	bsf	197,5,b	;volatile
  2060   000C72                     
  2061                           ; BSR set to: 14
  2062                           ;mcc_generated_files/eusart.c: 174:     return readValue;
  2063   000C72  5036               	movf	EUSART_Read@readValue^0,w,c
  2064   000C74                     
  2065                           ; BSR set to: 14
  2066   000C74  0012               	return		;funcret
  2067   000C76                     __end_of_EUSART_Read:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _Disarm_System *****************
  2071 ;; Defined at:
  2072 ;;		line 19 in file "system_core.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 6
  2093 ;; This function calls:
  2094 ;;		_TMR0_StopTimer
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text22
  2101   000E9C                     __ptext22:
  2102                           	callstack 0
  2103   000E9C                     _Disarm_System:
  2104                           	callstack 24
  2105   000E9C                     
  2106                           ;system_core.c: 21:     IOCCPbits.IOCCP2 = 0;
  2107   000E9C  010F               	movlb	15	; () banked
  2108   000E9E  951C               	bcf	28,2,b	;volatile
  2109                           
  2110                           ;system_core.c: 23:     PIE0bits.TMR0IE = 0;
  2111   000EA0  010E               	movlb	14	; () banked
  2112   000EA2  9BC2               	bcf	194,5,b	;volatile
  2113   000EA4                     
  2114                           ; BSR set to: 14
  2115                           ;system_core.c: 24:     TMR0_StopTimer();
  2116   000EA4  EC9B  F007         	call	_TMR0_StopTimer	;wreg free
  2117   000EA8  9685               	bcf	133,3,c	;volatile
  2118   000EAA                     
  2119                           ;system_core.c: 27:     mainFlags.SystemDisarmed_ContinuousSleep = 1;
  2120   000EAA  8421               	bsf	_mainFlags^0,2,c
  2121   000EAC                     
  2122                           ;system_core.c: 28:     mainFlags.SystemDisarmed = 0;
  2123   000EAC  9221               	bcf	_mainFlags^0,1,c
  2124   000EAE  0012               	return		;funcret
  2125   000EB0                     __end_of_Disarm_System:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _TMR0_StopTimer *****************
  2129 ;; Defined at:
  2130 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		None
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2144 ;;      Params:         0       0       0       0       0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 5
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_Disarm_System
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text23
  2159   000F36                     __ptext23:
  2160                           	callstack 0
  2161   000F36                     _TMR0_StopTimer:
  2162                           	callstack 24
  2163   000F36                     
  2164                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  2165   000F36  9ED5               	bcf	213,7,c	;volatile
  2166   000F38  0012               	return		;funcret
  2167   000F3A                     __end_of_TMR0_StopTimer:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _Arm_System *****************
  2171 ;; Defined at:
  2172 ;;		line 8 in file "system_core.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		None
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 5
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text24
  2201   000EB0                     __ptext24:
  2202                           	callstack 0
  2203   000EB0                     _Arm_System:
  2204                           	callstack 25
  2205   000EB0  848A               	bsf	138,2,c	;volatile
  2206   000EB2                     
  2207                           ;system_core.c: 11:     IOCCPbits.IOCCP2 = 1;
  2208   000EB2  010F               	movlb	15	; () banked
  2209   000EB4  851C               	bsf	28,2,b	;volatile
  2210                           
  2211                           ;system_core.c: 12:     PIE0bits.TMR0IE = 1;
  2212   000EB6  010E               	movlb	14	; () banked
  2213   000EB8  8BC2               	bsf	194,5,b	;volatile
  2214                           
  2215                           ;system_core.c: 14:     mainFlags.SystemArmed = 0;
  2216   000EBA  9021               	bcf	_mainFlags^0,0,c
  2217                           
  2218                           ;system_core.c: 15:     mainFlags.SystemDisarmed_ContinuousSleep = 0;
  2219   000EBC  9421               	bcf	_mainFlags^0,2,c
  2220   000EBE                     
  2221                           ; BSR set to: 14
  2222   000EBE  0012               	return		;funcret
  2223   000EC0                     __end_of_Arm_System:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _INTERRUPT_InterruptManager *****************
  2227 ;; Defined at:
  2228 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2244 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2245 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2246 ;;Total ram usage:        4 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 4
  2249 ;; This function calls:
  2250 ;;		NULL
  2251 ;;		_EUSART_Receive_ISR
  2252 ;;		_EUSART_Transmit_ISR
  2253 ;;		_PIN_MANAGER_IOC
  2254 ;;		_TMR0_ISR
  2255 ;; This function is called by:
  2256 ;;		Interrupt level 2
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	intcode
  2261   000008                     __pintcode:
  2262                           	callstack 0
  2263   000008                     _INTERRUPT_InterruptManager:
  2264                           	callstack 23
  2265                           
  2266                           ; BSR set to: 14
  2267                           ;incstack = 0
  2268   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2269   00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
  2270   00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2271   000012  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2272   000016  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2273   00001A                     
  2274                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2275   00001A  010E               	movlb	14	; () banked
  2276   00001C  ABC2               	btfss	194,5,b	;volatile
  2277   00001E  EF13  F000         	goto	i2u99_41
  2278   000022  EF15  F000         	goto	i2u99_40
  2279   000026                     i2u99_41:
  2280   000026  EF20  F000         	goto	i2l185
  2281   00002A                     i2u99_40:
  2282   00002A                     
  2283                           ; BSR set to: 14
  2284   00002A  ABCA               	btfss	202,5,b	;volatile
  2285   00002C  EF1A  F000         	goto	i2u100_41
  2286   000030  EF1C  F000         	goto	i2u100_40
  2287   000034                     i2u100_41:
  2288   000034  EF20  F000         	goto	i2l185
  2289   000038                     i2u100_40:
  2290   000038                     
  2291                           ; BSR set to: 14
  2292                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2293   000038  EC8E  F007         	call	_TMR0_ISR	;wreg free
  2294                           
  2295                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2296   00003C  EF73  F000         	goto	i2l195
  2297   000040                     i2l185:
  2298                           
  2299                           ; BSR set to: 14
  2300   000040  A9C2               	btfss	194,4,b	;volatile
  2301   000042  EF25  F000         	goto	i2u101_41
  2302   000046  EF27  F000         	goto	i2u101_40
  2303   00004A                     i2u101_41:
  2304   00004A  EF32  F000         	goto	i2l187
  2305   00004E                     i2u101_40:
  2306   00004E                     
  2307                           ; BSR set to: 14
  2308   00004E  A9CA               	btfss	202,4,b	;volatile
  2309   000050  EF2C  F000         	goto	i2u102_41
  2310   000054  EF2E  F000         	goto	i2u102_40
  2311   000058                     i2u102_41:
  2312   000058  EF32  F000         	goto	i2l187
  2313   00005C                     i2u102_40:
  2314   00005C                     
  2315                           ; BSR set to: 14
  2316                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  2317   00005C  ECA3  F006         	call	_PIN_MANAGER_IOC	;wreg free
  2318                           
  2319                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  2320   000060  EF73  F000         	goto	i2l195
  2321   000064                     i2l187:
  2322                           
  2323                           ; BSR set to: 14
  2324   000064  ACF2               	btfss	242,6,c	;volatile
  2325   000066  EF37  F000         	goto	i2u103_41
  2326   00006A  EF39  F000         	goto	i2u103_40
  2327   00006E                     i2u103_41:
  2328   00006E  EF73  F000         	goto	i2l194
  2329   000072                     i2u103_40:
  2330   000072                     
  2331                           ; BSR set to: 14
  2332                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  2333   000072  A9C5               	btfss	197,4,b	;volatile
  2334   000074  EF3E  F000         	goto	i2u104_41
  2335   000078  EF40  F000         	goto	i2u104_40
  2336   00007C                     i2u104_41:
  2337   00007C  EF56  F000         	goto	i2l190
  2338   000080                     i2u104_40:
  2339   000080                     
  2340                           ; BSR set to: 14
  2341   000080  A9CD               	btfss	205,4,b	;volatile
  2342   000082  EF45  F000         	goto	i2u105_41
  2343   000086  EF47  F000         	goto	i2u105_40
  2344   00008A                     i2u105_41:
  2345   00008A  EF56  F000         	goto	i2l190
  2346   00008E                     i2u105_40:
  2347   00008E                     
  2348                           ; BSR set to: 14
  2349                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_TxDefaultInterruptHandler();
  2350   00008E  D802               	call	i2u106_48
  2351   000090  EF54  F000         	goto	i2u106_49
  2352   000094                     i2u106_48:
  2353   000094  0005               	push	
  2354   000096  6EFA               	movwf	pclath,c
  2355   000098  502C               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  2356   00009A  6EFD               	movwf	tosl,c
  2357   00009C  502D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  2358   00009E  6EFE               	movwf	tosh,c
  2359   0000A0  50F8               	movf	tblptru,w,c
  2360   0000A2  6EFF               	movwf	tosu,c
  2361   0000A4  50FA               	movf	pclath,w,c
  2362   0000A6  0012               	return		;indir
  2363   0000A8                     i2u106_49:
  2364                           
  2365                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  2366   0000A8  EF73  F000         	goto	i2l195
  2367   0000AC                     i2l190:
  2368                           
  2369                           ; BSR set to: 14
  2370   0000AC  ABC5               	btfss	197,5,b	;volatile
  2371   0000AE  EF5B  F000         	goto	i2u107_41
  2372   0000B2  EF5D  F000         	goto	i2u107_40
  2373   0000B6                     i2u107_41:
  2374   0000B6  EF73  F000         	goto	i2l194
  2375   0000BA                     i2u107_40:
  2376   0000BA                     
  2377                           ; BSR set to: 14
  2378   0000BA  ABCD               	btfss	205,5,b	;volatile
  2379   0000BC  EF62  F000         	goto	i2u108_41
  2380   0000C0  EF64  F000         	goto	i2u108_40
  2381   0000C4                     i2u108_41:
  2382   0000C4  EF73  F000         	goto	i2l194
  2383   0000C8                     i2u108_40:
  2384   0000C8                     
  2385                           ; BSR set to: 14
  2386                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  2387   0000C8  D802               	call	i2u109_48
  2388   0000CA  EF71  F000         	goto	i2u109_49
  2389   0000CE                     i2u109_48:
  2390   0000CE  0005               	push	
  2391   0000D0  6EFA               	movwf	pclath,c
  2392   0000D2  502A               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  2393   0000D4  6EFD               	movwf	tosl,c
  2394   0000D6  502B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  2395   0000D8  6EFE               	movwf	tosh,c
  2396   0000DA  50F8               	movf	tblptru,w,c
  2397   0000DC  6EFF               	movwf	tosu,c
  2398   0000DE  50FA               	movf	pclath,w,c
  2399   0000E0  0012               	return		;indir
  2400   0000E2                     i2u109_49:
  2401                           
  2402                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  2403   0000E2  EF73  F000         	goto	i2l195
  2404   0000E6                     i2l194:
  2405   0000E6                     i2l195:
  2406   0000E6  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2407   0000EA  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2408   0000EE  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2409   0000F2  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2410   0000F6  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2411   0000F8  0011               	retfie		f
  2412   0000FA                     __end_of_INTERRUPT_InterruptManager:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _TMR0_ISR *****************
  2416 ;; Defined at:
  2417 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 3
  2438 ;; This function calls:
  2439 ;;		_TMR0_CallBack
  2440 ;; This function is called by:
  2441 ;;		_INTERRUPT_InterruptManager
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text26
  2446   000F1C                     __ptext26:
  2447                           	callstack 0
  2448   000F1C                     _TMR0_ISR:
  2449                           	callstack 23
  2450   000F1C                     
  2451                           ;mcc_generated_files/tmr0.c: 125:     PIR0bits.TMR0IF = 0;
  2452   000F1C  010E               	movlb	14	; () banked
  2453   000F1E  9BCA               	bcf	202,5,b	;volatile
  2454   000F20                     
  2455                           ; BSR set to: 14
  2456                           ;mcc_generated_files/tmr0.c: 128:     TMR0_CallBack();
  2457   000F20  EC8C  F006         	call	_TMR0_CallBack	;wreg free
  2458   000F24  0012               	return		;funcret
  2459   000F26                     __end_of_TMR0_ISR:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _TMR0_CallBack *****************
  2463 ;; Defined at:
  2464 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2481 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 2
  2485 ;; This function calls:
  2486 ;;		NULL
  2487 ;;		_TMR0_DefaultInterruptHandler
  2488 ;; This function is called by:
  2489 ;;		_TMR0_ISR
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text27
  2494   000D18                     __ptext27:
  2495                           	callstack 0
  2496   000D18                     _TMR0_CallBack:
  2497                           	callstack 23
  2498   000D18                     
  2499                           ;mcc_generated_files/tmr0.c: 137:     if(TMR0_InterruptHandler)
  2500   000D18  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2501   000D1A  1029               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2502   000D1C  B4D8               	btfsc	status,2,c
  2503   000D1E  EF93  F006         	goto	i2u66_41
  2504   000D22  EF95  F006         	goto	i2u66_40
  2505   000D26                     i2u66_41:
  2506   000D26  EFA2  F006         	goto	i2l244
  2507   000D2A                     i2u66_40:
  2508   000D2A                     
  2509                           ;mcc_generated_files/tmr0.c: 138:     {;mcc_generated_files/tmr0.c: 139:         TMR0_In
      +                          terruptHandler();
  2510   000D2A  D802               	call	i2u67_48
  2511   000D2C  EFA2  F006         	goto	i2u67_49
  2512   000D30                     i2u67_48:
  2513   000D30  0005               	push	
  2514   000D32  6EFA               	movwf	pclath,c
  2515   000D34  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2516   000D36  6EFD               	movwf	tosl,c
  2517   000D38  5029               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2518   000D3A  6EFE               	movwf	tosh,c
  2519   000D3C  50F8               	movf	tblptru,w,c
  2520   000D3E  6EFF               	movwf	tosu,c
  2521   000D40  50FA               	movf	pclath,w,c
  2522   000D42  0012               	return		;indir
  2523   000D44                     i2u67_49:
  2524   000D44                     i2l244:
  2525   000D44  0012               	return		;funcret
  2526   000D46                     __end_of_TMR0_CallBack:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2530 ;; Defined at:
  2531 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 1
  2552 ;; This function calls:
  2553 ;;		i2_TMR0_StopTimer
  2554 ;; This function is called by:
  2555 ;;		_TMR0_Initialize
  2556 ;;		_TMR0_CallBack
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text28
  2561   000EC0                     __ptext28:
  2562                           	callstack 0
  2563   000EC0                     _TMR0_DefaultInterruptHandler:
  2564                           	callstack 23
  2565   000EC0  9685               	bcf	133,3,c	;volatile
  2566   000EC2                     
  2567                           ;mcc_generated_files/tmr0.c: 152:     TMR0_StopTimer();
  2568   000EC2  EC9D  F007         	call	i2_TMR0_StopTimer	;wreg free
  2569   000EC6                     
  2570                           ;mcc_generated_files/tmr0.c: 153:     PIE0bits.IOCIE = 1;
  2571   000EC6  010E               	movlb	14	; () banked
  2572   000EC8  89C2               	bsf	194,4,b	;volatile
  2573   000ECA                     
  2574                           ; BSR set to: 14
  2575   000ECA  0012               	return		;funcret
  2576   000ECC                     __end_of_TMR0_DefaultInterruptHandler:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function i2_TMR0_StopTimer *****************
  2580 ;; Defined at:
  2581 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		None
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_TMR0_DefaultInterruptHandler
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text29
  2609   000F3A                     __ptext29:
  2610                           	callstack 0
  2611   000F3A                     i2_TMR0_StopTimer:
  2612                           	callstack 23
  2613   000F3A                     
  2614                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  2615   000F3A  9ED5               	bcf	213,7,c	;volatile
  2616   000F3C  0012               	return		;funcret
  2617   000F3E                     __end_ofi2_TMR0_StopTimer:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _PIN_MANAGER_IOC *****************
  2621 ;; Defined at:
  2622 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 3
  2643 ;; This function calls:
  2644 ;;		_IOCCF2_ISR
  2645 ;;		_IOCCF5_ISR
  2646 ;; This function is called by:
  2647 ;;		_INTERRUPT_InterruptManager
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text30
  2652   000D46                     __ptext30:
  2653                           	callstack 0
  2654   000D46                     _PIN_MANAGER_IOC:
  2655                           	callstack 23
  2656   000D46                     
  2657                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF2 == 1)
  2658   000D46  010F               	movlb	15	; () banked
  2659   000D48  A51A               	btfss	26,2,b	;volatile
  2660   000D4A  EFA9  F006         	goto	i2u76_41
  2661   000D4E  EFAB  F006         	goto	i2u76_40
  2662   000D52                     i2u76_41:
  2663   000D52  EFAD  F006         	goto	i2l1768
  2664   000D56                     i2u76_40:
  2665   000D56                     
  2666                           ; BSR set to: 15
  2667                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF2_ISR();
  2668   000D56  EC73  F006         	call	_IOCCF2_ISR	;wreg free
  2669   000D5A                     i2l1768:
  2670                           
  2671                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF5 == 1)
  2672   000D5A  010F               	movlb	15	; () banked
  2673   000D5C  AB1A               	btfss	26,5,b	;volatile
  2674   000D5E  EFB3  F006         	goto	i2u77_41
  2675   000D62  EFB5  F006         	goto	i2u77_40
  2676   000D66                     i2u77_41:
  2677   000D66  EFB7  F006         	goto	i2l133
  2678   000D6A                     i2u77_40:
  2679   000D6A                     
  2680                           ; BSR set to: 15
  2681                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCCF5_ISR();
  2682   000D6A  EC5A  F006         	call	_IOCCF5_ISR	;wreg free
  2683   000D6E                     i2l133:
  2684   000D6E  0012               	return		;funcret
  2685   000D70                     __end_of_PIN_MANAGER_IOC:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _IOCCF5_ISR *****************
  2689 ;; Defined at:
  2690 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 1
  2711 ;; This function calls:
  2712 ;;		NULL
  2713 ;;		_IOCCF5_DefaultInterruptHandler
  2714 ;; This function is called by:
  2715 ;;		_PIN_MANAGER_IOC
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text31
  2720   000CB4                     __ptext31:
  2721                           	callstack 0
  2722   000CB4                     _IOCCF5_ISR:
  2723                           	callstack 24
  2724   000CB4                     
  2725                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCCF5_InterruptHandler)
  2726   000CB4  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2727   000CB6  102F               	iorwf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2728   000CB8  B4D8               	btfsc	status,2,c
  2729   000CBA  EF61  F006         	goto	i2u64_41
  2730   000CBE  EF63  F006         	goto	i2u64_40
  2731   000CC2                     i2u64_41:
  2732   000CC2  EF70  F006         	goto	i2l1692
  2733   000CC6                     i2u64_40:
  2734   000CC6                     
  2735                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCCF5_InterruptHandler();
  2736   000CC6  D802               	call	i2u65_48
  2737   000CC8  EF70  F006         	goto	i2u65_49
  2738   000CCC                     i2u65_48:
  2739   000CCC  0005               	push	
  2740   000CCE  6EFA               	movwf	pclath,c
  2741   000CD0  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2742   000CD2  6EFD               	movwf	tosl,c
  2743   000CD4  502F               	movf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2744   000CD6  6EFE               	movwf	tosh,c
  2745   000CD8  50F8               	movf	tblptru,w,c
  2746   000CDA  6EFF               	movwf	tosu,c
  2747   000CDC  50FA               	movf	pclath,w,c
  2748   000CDE  0012               	return		;indir
  2749   000CE0                     i2u65_49:
  2750   000CE0                     i2l1692:
  2751                           
  2752                           ;mcc_generated_files/pin_manager.c: 201:     IOCCFbits.IOCCF5 = 0;
  2753   000CE0  010F               	movlb	15	; () banked
  2754   000CE2  9B1A               	bcf	26,5,b	;volatile
  2755   000CE4                     
  2756                           ; BSR set to: 15
  2757   000CE4  0012               	return		;funcret
  2758   000CE6                     __end_of_IOCCF5_ISR:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  2762 ;; Defined at:
  2763 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		None
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_PIN_MANAGER_Initialize
  2787 ;;		_IOCCF5_ISR
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text32
  2792   000F42                     __ptext32:
  2793                           	callstack 0
  2794   000F42                     _IOCCF5_DefaultInterruptHandler:
  2795                           	callstack 24
  2796   000F42  0012               	return		;funcret
  2797   000F44                     __end_of_IOCCF5_DefaultInterruptHandler:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _IOCCF2_ISR *****************
  2801 ;; Defined at:
  2802 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		NULL
  2825 ;;		_movement_Detect_Interrupt
  2826 ;; This function is called by:
  2827 ;;		_PIN_MANAGER_IOC
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text33
  2832   000CE6                     __ptext33:
  2833                           	callstack 0
  2834   000CE6                     _IOCCF2_ISR:
  2835                           	callstack 23
  2836   000CE6                     
  2837                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCCF2_InterruptHandler)
  2838   000CE6  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2839   000CE8  1031               	iorwf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2840   000CEA  B4D8               	btfsc	status,2,c
  2841   000CEC  EF7A  F006         	goto	i2u62_41
  2842   000CF0  EF7C  F006         	goto	i2u62_40
  2843   000CF4                     i2u62_41:
  2844   000CF4  EF89  F006         	goto	i2l1686
  2845   000CF8                     i2u62_40:
  2846   000CF8                     
  2847                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCCF2_InterruptHandler();
  2848   000CF8  D802               	call	i2u63_48
  2849   000CFA  EF89  F006         	goto	i2u63_49
  2850   000CFE                     i2u63_48:
  2851   000CFE  0005               	push	
  2852   000D00  6EFA               	movwf	pclath,c
  2853   000D02  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2854   000D04  6EFD               	movwf	tosl,c
  2855   000D06  5031               	movf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2856   000D08  6EFE               	movwf	tosh,c
  2857   000D0A  50F8               	movf	tblptru,w,c
  2858   000D0C  6EFF               	movwf	tosu,c
  2859   000D0E  50FA               	movf	pclath,w,c
  2860   000D10  0012               	return		;indir
  2861   000D12                     i2u63_49:
  2862   000D12                     i2l1686:
  2863                           
  2864                           ;mcc_generated_files/pin_manager.c: 171:     IOCCFbits.IOCCF2 = 0;
  2865   000D12  010F               	movlb	15	; () banked
  2866   000D14  951A               	bcf	26,2,b	;volatile
  2867   000D16                     
  2868                           ; BSR set to: 15
  2869   000D16  0012               	return		;funcret
  2870   000D18                     __end_of_IOCCF2_ISR:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _movement_Detect_Interrupt *****************
  2874 ;; Defined at:
  2875 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 1
  2896 ;; This function calls:
  2897 ;;		_TMR0_StartTimer
  2898 ;; This function is called by:
  2899 ;;		_PIN_MANAGER_Initialize
  2900 ;;		_IOCCF2_ISR
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text34
  2905   000D70                     __ptext34:
  2906                           	callstack 0
  2907   000D70                     _movement_Detect_Interrupt:
  2908                           	callstack 23
  2909   000D70                     
  2910                           ;mcc_generated_files/pin_manager.c: 220:     ++sensorDebounce;
  2911   000D70  2A20               	incf	_sensorDebounce^0,f,c
  2912   000D72                     
  2913                           ;mcc_generated_files/pin_manager.c: 222:     if(sensorDebounce == 2)
  2914   000D72  0E02               	movlw	2
  2915   000D74  1820               	xorwf	_sensorDebounce^0,w,c
  2916   000D76  A4D8               	btfss	status,2,c
  2917   000D78  EFC0  F006         	goto	i2u60_41
  2918   000D7C  EFC2  F006         	goto	i2u60_40
  2919   000D80                     i2u60_41:
  2920   000D80  EFCA  F006         	goto	i2l1576
  2921   000D84                     i2u60_40:
  2922   000D84  8685               	bsf	133,3,c	;volatile
  2923   000D86                     
  2924                           ;mcc_generated_files/pin_manager.c: 225:         sensorDebounce = 0;
  2925   000D86  0E00               	movlw	0
  2926   000D88  6E20               	movwf	_sensorDebounce^0,c
  2927   000D8A                     
  2928                           ;mcc_generated_files/pin_manager.c: 227:         PIE0bits.IOCIE = 0;
  2929   000D8A  010E               	movlb	14	; () banked
  2930   000D8C  99C2               	bcf	194,4,b	;volatile
  2931   000D8E                     
  2932                           ; BSR set to: 14
  2933                           ;mcc_generated_files/pin_manager.c: 228:         TMR0_StartTimer();
  2934   000D8E  EC9F  F007         	call	_TMR0_StartTimer	;wreg free
  2935   000D92                     
  2936                           ;mcc_generated_files/pin_manager.c: 230:         mainFlags.System_MotionFlag = 1;
  2937   000D92  8621               	bsf	_mainFlags^0,3,c
  2938   000D94                     i2l1576:
  2939                           
  2940                           ;mcc_generated_files/pin_manager.c: 233:     IOCCFbits.IOCCF2 = 0;
  2941   000D94  010F               	movlb	15	; () banked
  2942   000D96  951A               	bcf	26,2,b	;volatile
  2943   000D98                     
  2944                           ; BSR set to: 15
  2945   000D98  0012               	return		;funcret
  2946   000D9A                     __end_of_movement_Detect_Interrupt:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _TMR0_StartTimer *****************
  2950 ;; Defined at:
  2951 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		None
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_movement_Detect_Interrupt
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text35
  2979   000F3E                     __ptext35:
  2980                           	callstack 0
  2981   000F3E                     _TMR0_StartTimer:
  2982                           	callstack 23
  2983   000F3E                     
  2984                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  2985   000F3E  8ED5               	bsf	213,7,c	;volatile
  2986   000F40  0012               	return		;funcret
  2987   000F42                     __end_of_TMR0_StartTimer:
  2988                           	callstack 0
  2989                           
  2990 ;; *************** function _EUSART_Transmit_ISR *****************
  2991 ;; Defined at:
  2992 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_EUSART_Initialize
  3016 ;;		_INTERRUPT_InterruptManager
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text36
  3021   000C76                     __ptext36:
  3022                           	callstack 0
  3023   000C76                     _EUSART_Transmit_ISR:
  3024                           	callstack 26
  3025   000C76                     
  3026                           ;mcc_generated_files/eusart.c: 205:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  3027   000C76  0E08               	movlw	8
  3028   000C78  601D               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  3029   000C7A  EF41  F006         	goto	i2u91_41
  3030   000C7E  EF43  F006         	goto	i2u91_40
  3031   000C82                     i2u91_41:
  3032   000C82  EF57  F006         	goto	i2l454
  3033   000C86                     i2u91_40:
  3034   000C86                     
  3035                           ;mcc_generated_files/eusart.c: 206:     {;mcc_generated_files/eusart.c: 207:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  3036   000C86  501E               	movf	_eusartTxTail^0,w,c
  3037   000C88  0F11               	addlw	low _eusartTxBuffer
  3038   000C8A  6ED9               	movwf	fsr2l,c
  3039   000C8C  6ADA               	clrf	fsr2h,c
  3040   000C8E  50DF               	movf	indf2,w,c
  3041   000C90  6E9A               	movwf	154,c	;volatile
  3042   000C92  2A1E               	incf	_eusartTxTail^0,f,c	;volatile
  3043   000C94                     
  3044                           ;mcc_generated_files/eusart.c: 208:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3045   000C94  0E07               	movlw	7
  3046   000C96  641E               	cpfsgt	_eusartTxTail^0,c	;volatile
  3047   000C98  EF50  F006         	goto	i2u92_41
  3048   000C9C  EF52  F006         	goto	i2u92_40
  3049   000CA0                     i2u92_41:
  3050   000CA0  EF54  F006         	goto	i2l1848
  3051   000CA4                     i2u92_40:
  3052   000CA4                     
  3053                           ;mcc_generated_files/eusart.c: 209:         {;mcc_generated_files/eusart.c: 210:        
      +                               eusartTxTail = 0;
  3054   000CA4  0E00               	movlw	0
  3055   000CA6  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  3056   000CA8                     i2l1848:
  3057                           
  3058                           ;mcc_generated_files/eusart.c: 212:         eusartTxBufferRemaining++;
  3059   000CA8  2A1D               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  3060                           
  3061                           ;mcc_generated_files/eusart.c: 213:     }
  3062   000CAA  EF59  F006         	goto	i2l457
  3063   000CAE                     i2l454:
  3064                           
  3065                           ;mcc_generated_files/eusart.c: 215:     {;mcc_generated_files/eusart.c: 216:         PIE
      +                          3bits.TXIE = 0;
  3066   000CAE  010E               	movlb	14	; () banked
  3067   000CB0  99C5               	bcf	197,4,b	;volatile
  3068   000CB2                     i2l457:
  3069   000CB2  0012               	return		;funcret
  3070   000CB4                     __end_of_EUSART_Transmit_ISR:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _EUSART_Receive_ISR *****************
  3074 ;; Defined at:
  3075 ;;		line 220 in file "mcc_generated_files/eusart.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 2
  3096 ;; This function calls:
  3097 ;;		NULL
  3098 ;;		_EUSART_DefaultErrorHandler
  3099 ;;		_EUSART_DefaultFramingErrorHandler
  3100 ;;		_EUSART_DefaultOverrunErrorHandler
  3101 ;;		_EUSART_RxDataHandler
  3102 ;; This function is called by:
  3103 ;;		_EUSART_Initialize
  3104 ;;		_INTERRUPT_InterruptManager
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text37
  3109   000A34                     __ptext37:
  3110                           	callstack 0
  3111   000A34                     _EUSART_Receive_ISR:
  3112                           	callstack 24
  3113   000A34                     
  3114                           ;mcc_generated_files/eusart.c: 223:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  3115   000A34  501C               	movf	_eusartRxHead^0,w,c
  3116   000A36  0F01               	addlw	low _eusartRxStatusBuffer
  3117   000A38  6ED9               	movwf	fsr2l,c
  3118   000A3A  6ADA               	clrf	fsr2h,c
  3119   000A3C  6ADF               	clrf	indf2,c
  3120   000A3E                     
  3121                           ;mcc_generated_files/eusart.c: 225:     if(RC1STAbits.FERR){
  3122   000A3E  A49D               	btfss	157,2,c	;volatile
  3123   000A40  EF24  F005         	goto	i2u93_41
  3124   000A44  EF26  F005         	goto	i2u93_40
  3125   000A48                     i2u93_41:
  3126   000A48  EF38  F005         	goto	i2l1858
  3127   000A4C                     i2u93_40:
  3128   000A4C                     
  3129                           ;mcc_generated_files/eusart.c: 226:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  3130   000A4C  501C               	movf	_eusartRxHead^0,w,c
  3131   000A4E  0F01               	addlw	low _eusartRxStatusBuffer
  3132   000A50  6ED9               	movwf	fsr2l,c
  3133   000A52  6ADA               	clrf	fsr2h,c
  3134   000A54  82DF               	bsf	indf2,1,c
  3135   000A56                     
  3136                           ;mcc_generated_files/eusart.c: 227:         EUSART_FramingErrorHandler();
  3137   000A56  D802               	call	i2u94_48
  3138   000A58  EF38  F005         	goto	i2u94_49
  3139   000A5C                     i2u94_48:
  3140   000A5C  0005               	push	
  3141   000A5E  6EFA               	movwf	pclath,c
  3142   000A60  5026               	movf	_EUSART_FramingErrorHandler^0,w,c
  3143   000A62  6EFD               	movwf	tosl,c
  3144   000A64  5027               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  3145   000A66  6EFE               	movwf	tosh,c
  3146   000A68  50F8               	movf	tblptru,w,c
  3147   000A6A  6EFF               	movwf	tosu,c
  3148   000A6C  50FA               	movf	pclath,w,c
  3149   000A6E  0012               	return		;indir
  3150   000A70                     i2u94_49:
  3151   000A70                     i2l1858:
  3152                           
  3153                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.OERR){
  3154   000A70  A29D               	btfss	157,1,c	;volatile
  3155   000A72  EF3D  F005         	goto	i2u95_41
  3156   000A76  EF3F  F005         	goto	i2u95_40
  3157   000A7A                     i2u95_41:
  3158   000A7A  EF51  F005         	goto	i2l1864
  3159   000A7E                     i2u95_40:
  3160   000A7E                     
  3161                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  3162   000A7E  501C               	movf	_eusartRxHead^0,w,c
  3163   000A80  0F01               	addlw	low _eusartRxStatusBuffer
  3164   000A82  6ED9               	movwf	fsr2l,c
  3165   000A84  6ADA               	clrf	fsr2h,c
  3166   000A86  84DF               	bsf	indf2,2,c
  3167   000A88                     
  3168                           ;mcc_generated_files/eusart.c: 232:         EUSART_OverrunErrorHandler();
  3169   000A88  D802               	call	i2u96_48
  3170   000A8A  EF51  F005         	goto	i2u96_49
  3171   000A8E                     i2u96_48:
  3172   000A8E  0005               	push	
  3173   000A90  6EFA               	movwf	pclath,c
  3174   000A92  5024               	movf	_EUSART_OverrunErrorHandler^0,w,c
  3175   000A94  6EFD               	movwf	tosl,c
  3176   000A96  5025               	movf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  3177   000A98  6EFE               	movwf	tosh,c
  3178   000A9A  50F8               	movf	tblptru,w,c
  3179   000A9C  6EFF               	movwf	tosu,c
  3180   000A9E  50FA               	movf	pclath,w,c
  3181   000AA0  0012               	return		;indir
  3182   000AA2                     i2u96_49:
  3183   000AA2                     i2l1864:
  3184                           
  3185                           ;mcc_generated_files/eusart.c: 235:     if(eusartRxStatusBuffer[eusartRxHead].status){
  3186   000AA2  501C               	movf	_eusartRxHead^0,w,c
  3187   000AA4  0F01               	addlw	low _eusartRxStatusBuffer
  3188   000AA6  6ED9               	movwf	fsr2l,c
  3189   000AA8  6ADA               	clrf	fsr2h,c
  3190   000AAA  50DF               	movf	indf2,w,c
  3191   000AAC  B4D8               	btfsc	status,2,c
  3192   000AAE  EF5B  F005         	goto	i2u97_41
  3193   000AB2  EF5D  F005         	goto	i2u97_40
  3194   000AB6                     i2u97_41:
  3195   000AB6  EF6C  F005         	goto	i2l1868
  3196   000ABA                     i2u97_40:
  3197   000ABA                     
  3198                           ;mcc_generated_files/eusart.c: 236:         EUSART_ErrorHandler();
  3199   000ABA  D802               	call	i2u98_48
  3200   000ABC  EF6A  F005         	goto	i2u98_49
  3201   000AC0                     i2u98_48:
  3202   000AC0  0005               	push	
  3203   000AC2  6EFA               	movwf	pclath,c
  3204   000AC4  5022               	movf	_EUSART_ErrorHandler^0,w,c
  3205   000AC6  6EFD               	movwf	tosl,c
  3206   000AC8  5023               	movf	(_EUSART_ErrorHandler+1)^0,w,c
  3207   000ACA  6EFE               	movwf	tosh,c
  3208   000ACC  50F8               	movf	tblptru,w,c
  3209   000ACE  6EFF               	movwf	tosu,c
  3210   000AD0  50FA               	movf	pclath,w,c
  3211   000AD2  0012               	return		;indir
  3212   000AD4                     i2u98_49:
  3213                           
  3214                           ;mcc_generated_files/eusart.c: 237:     } else {
  3215   000AD4  EF6E  F005         	goto	i2l464
  3216   000AD8                     i2l1868:
  3217                           
  3218                           ;mcc_generated_files/eusart.c: 238:         EUSART_RxDataHandler();
  3219   000AD8  ECCD  F006         	call	_EUSART_RxDataHandler	;wreg free
  3220   000ADC                     i2l464:
  3221   000ADC  0012               	return		;funcret
  3222   000ADE                     __end_of_EUSART_Receive_ISR:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  3226 ;; Defined at:
  3227 ;;		line 258 in file "mcc_generated_files/eusart.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		None
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_EUSART_Initialize
  3251 ;;		_EUSART_Receive_ISR
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text38
  3256   000F26                     __ptext38:
  3257                           	callstack 0
  3258   000F26                     _EUSART_DefaultOverrunErrorHandler:
  3259                           	callstack 25
  3260   000F26                     
  3261                           ;mcc_generated_files/eusart.c: 261:     RC1STAbits.CREN = 0;
  3262   000F26  989D               	bcf	157,4,c	;volatile
  3263                           
  3264                           ;mcc_generated_files/eusart.c: 262:     RC1STAbits.CREN = 1;
  3265   000F28  889D               	bsf	157,4,c	;volatile
  3266   000F2A  0012               	return		;funcret
  3267   000F2C                     __end_of_EUSART_DefaultOverrunErrorHandler:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  3271 ;; Defined at:
  3272 ;;		line 256 in file "mcc_generated_files/eusart.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		None
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_EUSART_Initialize
  3296 ;;		_EUSART_Receive_ISR
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text39
  3301   000F44                     __ptext39:
  3302                           	callstack 0
  3303   000F44                     _EUSART_DefaultFramingErrorHandler:
  3304                           	callstack 25
  3305   000F44  0012               	return		;funcret
  3306   000F46                     __end_of_EUSART_DefaultFramingErrorHandler:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _EUSART_DefaultErrorHandler *****************
  3310 ;; Defined at:
  3311 ;;		line 266 in file "mcc_generated_files/eusart.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 1
  3332 ;; This function calls:
  3333 ;;		_EUSART_RxDataHandler
  3334 ;; This function is called by:
  3335 ;;		_EUSART_Initialize
  3336 ;;		_EUSART_Receive_ISR
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text40
  3341   000F2C                     __ptext40:
  3342                           	callstack 0
  3343   000F2C                     _EUSART_DefaultErrorHandler:
  3344                           	callstack 24
  3345   000F2C                     
  3346                           ;mcc_generated_files/eusart.c: 267:     EUSART_RxDataHandler();
  3347   000F2C  ECCD  F006         	call	_EUSART_RxDataHandler	;wreg free
  3348   000F30  0012               	return		;funcret
  3349   000F32                     __end_of_EUSART_DefaultErrorHandler:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _EUSART_RxDataHandler *****************
  3353 ;; Defined at:
  3354 ;;		line 244 in file "mcc_generated_files/eusart.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_EUSART_Receive_ISR
  3378 ;;		_EUSART_DefaultErrorHandler
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text41
  3383   000D9A                     __ptext41:
  3384                           	callstack 0
  3385   000D9A                     _EUSART_RxDataHandler:
  3386                           	callstack 25
  3387   000D9A                     
  3388                           ;mcc_generated_files/eusart.c: 246:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  3389   000D9A  501C               	movf	_eusartRxHead^0,w,c
  3390   000D9C  0F09               	addlw	low _eusartRxBuffer
  3391   000D9E  6ED9               	movwf	fsr2l,c
  3392   000DA0  6ADA               	clrf	fsr2h,c
  3393   000DA2  CF99 FFDF          	movff	3993,indf2	;volatile
  3394   000DA6  2A1C               	incf	_eusartRxHead^0,f,c	;volatile
  3395   000DA8                     
  3396                           ;mcc_generated_files/eusart.c: 247:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3397   000DA8  0E07               	movlw	7
  3398   000DAA  641C               	cpfsgt	_eusartRxHead^0,c	;volatile
  3399   000DAC  EFDA  F006         	goto	i2u61_41
  3400   000DB0  EFDC  F006         	goto	i2u61_40
  3401   000DB4                     i2u61_41:
  3402   000DB4  EFDE  F006         	goto	i2l1602
  3403   000DB8                     i2u61_40:
  3404   000DB8                     
  3405                           ;mcc_generated_files/eusart.c: 248:     {;mcc_generated_files/eusart.c: 249:         eus
      +                          artRxHead = 0;
  3406   000DB8  0E00               	movlw	0
  3407   000DBA  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  3408   000DBC                     i2l1602:
  3409                           
  3410                           ;mcc_generated_files/eusart.c: 251:     eusartRxCount++;
  3411   000DBC  2A1A               	incf	_eusartRxCount^0,f,c	;volatile
  3412   000DBE                     
  3413                           ;mcc_generated_files/eusart.c: 253:     mainFlags.System_BluetoothReceive = 1;
  3414   000DBE  8821               	bsf	_mainFlags^0,4,c
  3415   000DC0  0012               	return		;funcret
  3416   000DC2                     __end_of_EUSART_RxDataHandler:
  3417                           	callstack 0
  3418                           
  3419                           	psect	smallconst
  3420   000800                     __psmallconst:
  3421                           	callstack 0
  3422   000800  00                 	db	0
  3423   000801  00                 	db	0	; dummy byte at the end
  3424   000000                     
  3425                           	psect	text42
  3426   000000                     __ptext42:
  3427                           	callstack 0
  3428   000000                     
  3429                           	psect	rparam
  3430   000000                     
  3431                           	psect	temp
  3432   000041                     btemp:
  3433                           	callstack 0
  3434   000041                     	ds	1
  3435   000000                     int$flags	set	btemp
  3436   000000                     wtemp8	set	btemp+1
  3437   000000                     ttemp5	set	btemp+1
  3438   000000                     ttemp6	set	btemp+4
  3439   000000                     ttemp7	set	btemp+8
  3440                           
  3441                           	psect	config
  3442                           
  3443                           ;Config register CONFIG1L @ 0x300000
  3444                           ;	External Oscillator mode Selection bits
  3445                           ;	FEXTOSC = OFF, Oscillator not enabled
  3446                           ;	Power-up default value for COSC bits
  3447                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3448   300000                     	org	3145728
  3449   300000  EC                 	db	236
  3450                           
  3451                           ;Config register CONFIG1H @ 0x300001
  3452                           ;	Clock Out Enable bit
  3453                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3454                           ;	Clock Switch Enable bit
  3455                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3456                           ;	Fail-Safe Clock Monitor Enable bit
  3457                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3458   300001                     	org	3145729
  3459   300001  FF                 	db	255
  3460                           
  3461                           ;Config register CONFIG2L @ 0x300002
  3462                           ;	Master Clear Enable bit
  3463                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3464                           ;	Power-up Timer Enable bit
  3465                           ;	PWRTE = OFF, Power up timer disabled
  3466                           ;	Low-power BOR enable bit
  3467                           ;	LPBOREN = OFF, ULPBOR disabled
  3468                           ;	Brown-out Reset Enable bits
  3469                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
  3470   300002                     	org	3145730
  3471   300002  BF                 	db	191
  3472                           
  3473                           ;Config register CONFIG2H @ 0x300003
  3474                           ;	Brown Out Reset Voltage selection bits
  3475                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3476                           ;	ZCD Disable bit
  3477                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3478                           ;	PPSLOCK bit One-Way Set Enable bit
  3479                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3480                           ;	Stack Full/Underflow Reset Enable bit
  3481                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3482                           ;	Debugger Enable bit
  3483                           ;	DEBUG = OFF, Background debugger disabled
  3484                           ;	Extended Instruction Set Enable bit
  3485                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3486   300003                     	org	3145731
  3487   300003  FF                 	db	255
  3488                           
  3489                           ;Config register CONFIG3L @ 0x300004
  3490                           ;	WDT Period Select bits
  3491                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3492                           ;	WDT operating mode
  3493                           ;	WDTE = OFF, WDT Disabled
  3494   300004                     	org	3145732
  3495   300004  9F                 	db	159
  3496                           
  3497                           ;Config register CONFIG3H @ 0x300005
  3498                           ;	WDT Window Select bits
  3499                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3500                           ;	WDT input clock selector
  3501                           ;	WDTCCS = SC, Software Control
  3502   300005                     	org	3145733
  3503   300005  FF                 	db	255
  3504                           
  3505                           ;Config register CONFIG4L @ 0x300006
  3506                           ;	Write Protection Block 0
  3507                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3508                           ;	Write Protection Block 1
  3509                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3510                           ;	Write Protection Block 2
  3511                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3512                           ;	Write Protection Block 3
  3513                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3514   300006                     	org	3145734
  3515   300006  FF                 	db	255
  3516                           
  3517                           ;Config register CONFIG4H @ 0x300007
  3518                           ;	Configuration Register Write Protection bit
  3519                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3520                           ;	Boot Block Write Protection bit
  3521                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3522                           ;	Data EEPROM Write Protection bit
  3523                           ;	WRTD = OFF, Data EEPROM not write-protected
  3524                           ;	Scanner Enable bit
  3525                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3526                           ;	Low Voltage Programming Enable bit
  3527                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3528   300007                     	org	3145735
  3529   300007  FF                 	db	255
  3530                           
  3531                           ;Config register CONFIG5L @ 0x300008
  3532                           ;	UserNVM Program Memory Code Protection bit
  3533                           ;	CP = OFF, UserNVM code protection disabled
  3534                           ;	DataNVM Memory Code Protection bit
  3535                           ;	CPD = OFF, DataNVM code protection disabled
  3536   300008                     	org	3145736
  3537   300008  FF                 	db	255
  3538                           
  3539                           ;Config register CONFIG5H @ 0x300009
  3540                           ;	unspecified, using default values
  3541   300009                     	org	3145737
  3542   300009  FF                 	db	255
  3543                           
  3544                           ;Config register CONFIG6L @ 0x30000A
  3545                           ;	Table Read Protection Block 0
  3546                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3547                           ;	Table Read Protection Block 1
  3548                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3549                           ;	Table Read Protection Block 2
  3550                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3551                           ;	Table Read Protection Block 3
  3552                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3553   30000A                     	org	3145738
  3554   30000A  FF                 	db	255
  3555                           
  3556                           ;Config register CONFIG6H @ 0x30000B
  3557                           ;	Boot Block Table Read Protection bit
  3558                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3559   30000B                     	org	3145739
  3560   30000B  FF                 	db	255
  3561                           tosu	equ	0xFFF
  3562                           tosh	equ	0xFFE
  3563                           tosl	equ	0xFFD
  3564                           stkptr	equ	0xFFC
  3565                           pclatu	equ	0xFFB
  3566                           pclath	equ	0xFFA
  3567                           pcl	equ	0xFF9
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           indf0	equ	0xFEF
  3575                           postinc0	equ	0xFEE
  3576                           postdec0	equ	0xFED
  3577                           preinc0	equ	0xFEC
  3578                           plusw0	equ	0xFEB
  3579                           fsr0h	equ	0xFEA
  3580                           fsr0l	equ	0xFE9
  3581                           wreg	equ	0xFE8
  3582                           indf1	equ	0xFE7
  3583                           postinc1	equ	0xFE6
  3584                           postdec1	equ	0xFE5
  3585                           preinc1	equ	0xFE4
  3586                           plusw1	equ	0xFE3
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           bsr	equ	0xFE0
  3590                           indf2	equ	0xFDF
  3591                           postinc2	equ	0xFDE
  3592                           postdec2	equ	0xFDD
  3593                           preinc2	equ	0xFDC
  3594                           plusw2	equ	0xFDB
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), NULL(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), NULL(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_Recieve_ArmData
    _Transmit_MotionData->_EUSART_Write
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _Recieve_ArmData->_EUSART_Read
    _Recieve_ArmData->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1326
                         _Arm_System
                      _Disarm_System
                    _Recieve_ArmData
                  _SYSTEM_Initialize
                _Transmit_MotionData
 ---------------------------------------------------------------------------------
 (1) _Transmit_MotionData                                  0     0      0      44
                       _EUSART_Write
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
         _IOCCF2_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Recieve_ArmData                                     10    10      0     498
                                              5 COMRAM    10    10      0
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Disarm_System                                        0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Arm_System                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
                   i2_TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF2_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCCF5_ISR                                           0     0      0       0
                                NULL *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCCF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCCF2_ISR                                           0     0      0       0
                                NULL *
          _movement_Detect_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _movement_Detect_Interrupt                            0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (8) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Arm_System
   _Disarm_System
     _TMR0_StopTimer
   _Recieve_ArmData
     _EUSART_Read
     _EUSART_Write
     _EUSART_is_rx_ready
     _EUSART_is_tx_done
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Transmit_MotionData
     _EUSART_Write
     _EUSART_is_tx_done

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF2_ISR
       NULL(Fake) *
       _movement_Detect_Interrupt *
         _TMR0_StartTimer
     _IOCCF5_ISR
       NULL(Fake) *
       _IOCCF5_DefaultInterruptHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
         i2_TMR0_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      40       1       68.1%
BITBIGSFRhhhhhl     55      0       0      25        0.0%
BITBIGSFRhhhhhh     33      0       0      22        0.0%
BITBIGSFRhhhhhh     1B      0       0      21        0.0%
BITBIGSFRhhhhhl     16      0       0      30        0.0%
BITBIGSFRlll        15      0       0      39        0.0%
BITBIGSFRhhhhhl      F      0       0      29        0.0%
BITBIGSFRhhhhhh      E      0       0      23        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      38        0.0%
BITBIGSFRlhhh        A      0       0      34        0.0%
BITBIGSFRhhhhhl      8      0       0      27        0.0%
BITBIGSFRlhlh        4      0       0      36        0.0%
BITBIGSFRhhhhhl      3      0       0      28        0.0%
BITBIGSFRlhhl        2      0       0      35        0.0%
BITBIGSFRlhll        2      0       0      37        0.0%
BITBIGSFRhhhhhl      2      0       0      26        0.0%
BITBIGSFRhhhhhh      2      0       0      24        0.0%
BITBIGSFRhhhhl       2      0       0      31        0.0%
BITBIGSFRhhl         1      0       0      32        0.0%
BITBIGSFRhl          1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      40        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 21 23:22:34 2024

                ?_EUSART_SetRxInterruptHandler 0036                                             l40 0E70  
                                           l43 0E24                                             l37 0E58  
                                          l140 0EE8                                            l150 0EDE  
                                          l222 0E08                                            l128 0B5C  
                                          l323 0EAE                                            l316 0EB0  
                                          l228 0F38                                            l180 0F34  
                                          l317 0EB2                                            l341 08DE  
                                          l318 0EBE                                            l423 0BD6  
                                          l247 0ED4                                            l432 0E9A  
                                          l336 0984                                            l345 0960  
                                          l329 0DE4                                            l442 0C74  
                                          l346 0986                                            l290 0A18  
                                          l451 0C2A                                            l429 0E86  
                                          l447 0BEA                                            l448 0C02  
                                          l480 0F10                                            l288 0A26  
                                          l483 0F06                                            l492 0EFC  
                                          l486 0F1A                                            l489 0EF2  
                                          u700 0C22                                            u701 0C1E  
                                          u710 0E98                                            u711 0E92  
                                          u720 0E84                                            u800 0866  
                                          u721 0E7E                                            u801 0862  
                                          u730 0E86                                            u810 0880  
                                          u811 087C                                            u740 0C3C  
                                          u716 0E9A                                            u820 08A2  
                                          u900 0DE4                                            u741 0C38  
                                          u821 089E                                            u901 0DE0  
                                          u750 0C66                                            u830 08C4  
                                          u751 0C62                                            u831 08C0  
                                          u680 0BEA                                            u840 08DE  
                                          u681 0BE6                                            u841 08DA  
                                          u690 0BFA                                            u850 0902  
                                          u691 0BF6                                            u851 08FE  
                                          u860 0924                                            u780 0816  
                                          u861 0920                                            u781 0812  
                                          u870 0946                                            u790 084A  
                                          u871 0942                                            u791 0846  
                                          u880 0960                                            u881 095C  
                                          u890 0984                                            u891 0980  
                       ??_EUSART_RxDataHandler 0032                 ?_EUSART_SetFramingErrorHandler 0036  
                                          tosl 0FFD                                            wreg 0FE8  
                                 ?_EUSART_Read 0032                                           l1610 0ADE  
                                         l1700 0BDA                                           l1620 0B20  
                                         l1612 0AFC                                           l1710 0C12  
                                         l1702 0BDA                                           l1606 0F32  
                                         l1630 0B2E                                           l1622 0B22  
                                         l1614 0AFE                                           l1712 0C22  
                                         l1704 0BFA                                           l1800 0880  
                                         l1560 0EE0                                           l1640 0B38  
                                         l1632 0B30                                           l1624 0B24  
                                         l1616 0B1C                                           l1608 0E0A  
                                         l1730 0C3C                                           l1714 0C26  
                                         l1706 0C04                                           l1722 0E72  
                                         l1810 0902                                           l1802 08A2  
                                         l1562 0ED6                                           l1642 0B44  
                                         l1634 0B32                                           l1626 0B26  
                                         l1618 0B1E                                           l1650 0DF2  
                                         l1740 0C6E                                           l1732 0C54  
                                         l1708 0C10                                           l1716 0C28  
                                         l1820 096E                                           l1812 0924  
                                         l1804 08C4                                           l1660 0B62  
                                         l1644 0B50                                           l1636 0B34  
                                         l1628 0B2C                                           l1652 0DF6  
                                         l1900 0994                                           l1830 0EAC  
                                         l1822 0E9C                                           l1742 0C70  
                                         l1734 0C56                                           l1726 0C2C  
                                         l1718 0E88                                           l1814 0946  
                                         l1806 08CA                                           l1590 0EFE  
                                         l1670 0B8A                                           l1662 0B6E  
                                         l1646 0E5A                                           l1638 0B36  
                                         l1654 0DF8                                           l1910 09C6  
                                         l1902 09A2                                           l1824 0EA4  
                                         l1744 0C72                                           l1736 0C66  
                                         l1728 0C2C                                           l1816 094C  
                                         l1808 08E8                                           l1592 0F12  
                                         l1584 0EF4                                           l1680 0BD2  
                                         l1672 0B8E                                           l1664 0B7E  
                                         l1656 0E04                                           l1648 0DE6  
                                         l1760 0E50                                           l1752 0E40  
                                         l1832 0DC2                                           l1920 09FA  
                                         l1912 09CA                                           l1904 09A6  
                                         l1826 0EA8                                           l1738 0C6A  
                                         l1818 096A                                           l1586 0EEA  
                                         l1674 0B92                                           l1666 0B82  
                                         l1658 0B5E                                           l1578 0ECC  
                                         l1762 0E54                                           l1754 0E44  
                                         l1834 0DCE                                           l1922 0A0A  
                                         l1914 09D8                                           l1906 09B4  
                                         l1828 0EAA                                           l1588 0F08  
                                         l1676 0B9E                                           l1668 0B86  
                                         l1756 0E48                                           l1836 0DD0  
                                         l1916 09DC                                           l1908 09B8  
                                         l1694 0F36                                           l1790 084A  
                                         l1678 0BAA                                           l1758 0E4C  
                                         l1918 09EC                                           l1784 081E  
                                         l1776 0802                                           l1786 0830  
                                         l1778 0816                                           l1890 0988  
                                         l1796 0852                                           l1788 0834  
                                         l1892 098C                                           l1798 0866  
                                         l1894 098E                                           l1896 0990  
                                         l1898 0992                                           u1100 09A2  
                                         u1101 099E                                           u1110 09B4  
                                         u1111 09B0                                           u1120 09C6  
                                         u1121 09C2                                           u1130 09D8  
                                         u1131 09D4                                           u1140 09EC  
                                         u1141 09E8                                           u1150 09FA  
                                         u1151 09F6                                           u1160 0A0A  
                                         u1161 0A06                                           u1170 0A18  
                                         u1171 0A14                                           u1180 0A26  
                                         u1181 0A22                                           _LATA 0F83  
                                         _LATB 0F84                                           _LATC 0F85  
                                         _PMD0 0EE1                                           _PMD1 0EE2  
                                         _PMD2 0EE3                                           _PMD3 0EE4  
                                         _PMD4 0EE5                                           _PMD5 0EE6  
                                         _WPUA 0F10                                           _WPUB 0F18  
                                         _WPUC 0F20                                           _WPUE 0F2D  
                                         _main 0988                                _TMR0_StartTimer 0F3E  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr2l 0FD9                                           btemp 0041  
            fp__IOCCF5_DefaultInterruptHandler 0000               ??_IOCCF5_DefaultInterruptHandler 0032  
              ?_IOCCF5_DefaultInterruptHandler 0032                                           start 00FA  
                                 ___param_bank 0000                                     _Arm_System 0EB0  
                      __end_of_TMR0_Initialize 0E0A                 ??_TMR0_DefaultInterruptHandler 0032  
                                ?_EUSART_Write 0032                  __end_of_OSCILLATOR_Initialize 0E72  
                                        ?_main 0032                                          i2l133 0D6E  
                                        i2l240 0F24                                          i2l225 0F40  
                                        i2l137 0D16                                          i2l153 0F42  
                                        i2l250 0EC0                                          i2l147 0CE4  
                                        i2l228 0F3C                                          i2l252 0ECA  
                                        i2l244 0D44                                          i2l157 0D84  
                                        i2l190 00AC                                          i2l159 0D98  
                                        i2l185 0040                                          i2l194 00E6  
                                        i2l187 0064                                          i2l195 00E6  
                                        i2l454 0CAE                                          i2l471 0F44  
                                        i2l464 0ADC                                          i2l457 0CB2  
                                        i2l474 0F2A                                          i2l468 0DC0  
                                        i2l477 0F30                                          _OSCEN 0EDC  
                                        _TMR0H 0FD4                                          _TMR0L 0FD3  
                                        _TRISA 0F88                                          _TRISB 0F89  
                                        _TRISC 0F8A                                          _RXPPS 0EB5  
                    ?_TMR0_SetInterruptHandler 0036                     ?_movement_Detect_Interrupt 0032  
                             __end_of_TMR0_ISR 0F26                        __end_of_PIN_MANAGER_IOC 0D70  
                                        pclath 0FFA                                          pclatu 0FFB  
                                        ttemp5 0042                                          ttemp6 0045  
                                        ttemp7 0049                                          status 0FD8  
                                        wtemp8 0042                                _Recieve_ArmData 0802  
                              __initialization 0E26                                   __end_of_main 0A34  
                               ??_EUSART_Write 0036                    ?_INTERRUPT_InterruptManager 0032  
               ??_EUSART_SetRxInterruptHandler 0038                                         ??_main 0041  
                                __activetblptr 0002                        _IOCCF2_InterruptHandler 0030  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 0F46  
          ??_EUSART_DefaultFramingErrorHandler 0032             ?_EUSART_DefaultFramingErrorHandler 0032  
            _EUSART_DefaultFramingErrorHandler 0F44                        __end_of_TMR0_StartTimer 0F42  
                   _EUSART_OverrunErrorHandler 0024                                         _ANSELA 0F11  
                                       _ANSELB 0F19                                         _ANSELC 0F21  
                                       _T0CON0 0FD5                                         _T0CON1 0FD6  
                   __end_of_EUSART_is_rx_ready 0E88                                         _RC1REG 0F99  
                                       _RC1STA 0F9D                                         _ODCONA 0F0F  
                                       _ODCONB 0F17                                         _RC6PPS 0EFD  
                                       _ODCONC 0F1F                                         i2l1600 0DB8  
                                       i2l1602 0DBC                                         i2l1604 0DBE  
                                       i2l1570 0D8A                                         i2l1556 0F3E  
                                       i2l1572 0D8E                                         i2l1564 0D70  
                                       i2l1580 0EC2                                         i2l1750 0F2C  
                                       i2l1574 0D92                                         i2l1566 0D72  
                                       i2l1558 0F3A                                         i2l1582 0EC6  
                                       i2l1840 0C86                                         i2l1568 0D86  
                                       i2l1576 0D94                                         i2l1594 0D9A  
                                       i2l1850 0A34                                         i2l1842 0C92  
                                       i2l1682 0CE6                                         i2l1690 0CC6  
                                       i2l1770 0D6A                                         i2l1596 0DA6  
                                       i2l1748 0F26                                         i2l1860 0A7E  
                                       i2l1852 0A3E                                         i2l1844 0C94  
                                       i2l1684 0CF8                                         i2l1692 0CE0  
                                       i2l1764 0D46                                         i2l1772 0F1C  
                                       i2l1598 0DA8                                         i2l1862 0A88  
                                       i2l1854 0A4C                                         i2l1846 0CA4  
                                       i2l1838 0C76                                         i2l1686 0D12  
                                       i2l1766 0D56                                         i2l1774 0F20  
                                       i2l1870 001A                                         i2l1864 0AA2  
                                       i2l1856 0A56                                         i2l1848 0CA8  
                                       i2l1688 0CB4                                         i2l1768 0D5A  
                                       i2l1696 0D18                                         i2l1880 0072  
                                       i2l1872 002A                                         i2l1866 0ABA  
                                       i2l1858 0A70                                         i2l1698 0D2A  
                                       i2l1882 0080                                         i2l1874 0038  
                                       i2l1868 0AD8                                         i2l1884 008E  
                                       i2l1876 004E                                         i2l1886 00BA  
                                       i2l1878 005C                                         i2l1888 00C8  
                                       _INLVLA 0F0D                                         _INLVLB 0F15  
                                       _INLVLC 0F1D                                         _INLVLE 0F2A  
                                       _OSCFRQ 0EDE                                         _TX1REG 0F9A  
                                       _TX1STA 0F9E                            _Transmit_MotionData 0DC2  
                                  ?_Arm_System 0032                            _EUSART_Transmit_ISR 0C76  
                             ?_TMR0_Initialize 0032                                         clear_0 0E2C  
                                       isa$std 0001                           ?_Transmit_MotionData 0032  
                               _PMD_Initialize 0E0A                                   __mediumconst 0000  
                                       tblptru 0FF8                          __end_of_TMR0_CallBack 0D46  
                      __end_of_Recieve_ArmData 0988       TMR0_SetInterruptHandler@InterruptHandler 0036  
   IOCCF5_SetInterruptHandler@InterruptHandler 0036     IOCCF2_SetInterruptHandler@InterruptHandler 0036  
                             ?_PIN_MANAGER_IOC 0032                          __end_of_Disarm_System 0EB0  
                         ?_EUSART_Transmit_ISR 0032                                   ??_IOCCF2_ISR 0032  
                                 ??_IOCCF5_ISR 0032                              _SYSTEM_Initialize 0E40  
                                   __accesstop 0060                        __end_of__initialization 0E32  
                           ?_SYSTEM_Initialize 0032                                  ___rparam_used 0001  
         __end_of_EUSART_SetTxInterruptHandler 0EF4                   _EUSART_SetTxInterruptHandler 0EEA  
                               __pcstackCOMRAM 0032                            ??_SYSTEM_Initialize 0038  
                                    ?_TMR0_ISR 0032                          ??_Transmit_MotionData 0037  
                       __end_of_PMD_Initialize 0E26                             __end_of_IOCCF2_ISR 0D18  
                           __end_of_IOCCF5_ISR 0CE6                           _eusartRxStatusBuffer 0001  
              ??_EUSART_SetOverrunErrorHandler 0038                               ?_TMR0_StartTimer 0032  
                    __end_of_SYSTEM_Initialize 0E5A                          ??_EUSART_Transmit_ISR 0032  
                         __end_of_EUSART_Write 0C2C                                     __pnvCOMRAM 0022  
                ?_EUSART_SetTxInterruptHandler 0036               _EUSART_TxDefaultInterruptHandler 002C  
             __end_of_TMR0_SetInterruptHandler 0ED6                                     ??_TMR0_ISR 0032  
                 ??_EUSART_DefaultErrorHandler 0032         __end_of_IOCCF5_DefaultInterruptHandler 0F44  
               _IOCCF5_DefaultInterruptHandler 0F42                                ?_PMD_Initialize 0032  
                                _eusartRxCount 001A                                        _SP1BRGH 0F9C  
                                      _SP1BRGL 0F9B                                        _OSCCON1 0ED8  
                                      _OSCCON3 0EDA                    ??_movement_Detect_Interrupt 0032  
                       Recieve_ArmData@msgBuff 0039                                        i2u60_40 0D84  
                                      i2u60_41 0D80                                        i2u61_40 0DB8  
                                      i2u61_41 0DB4                                        i2u62_40 0CF8  
                                      i2u62_41 0CF4                                        _OSCTUNE 0EDD  
                                      i2u63_48 0CFE                                        i2u64_40 0CC6  
                                      i2u63_49 0D12                                        i2u64_41 0CC2  
                                      i2u65_48 0CCC                                        i2u66_40 0D2A  
                                      i2u65_49 0CE0                                        i2u66_41 0D26  
                                      i2u91_40 0C86                                        i2u91_41 0C82  
                                      i2u92_40 0CA4                                        i2u76_40 0D56  
                                      i2u67_48 0D30                                        i2u92_41 0CA0  
                                      i2u76_41 0D52                                        i2u67_49 0D44  
                                      i2u93_40 0A4C                                        i2u77_40 0D6A  
                                      i2u93_41 0A48                                        i2u77_41 0D66  
                                      i2u95_40 0A7E                                        i2u94_48 0A5C  
                                      i2u95_41 0A7A                                        i2u94_49 0A70  
                                      i2u97_40 0ABA                                        i2u96_48 0A8E  
                                      i2u97_41 0AB6                                        i2u96_49 0AA2  
                                      i2u98_48 0AC0                                        i2u99_40 002A  
                                      i2u98_49 0AD4                                        i2u99_41 0026  
                                      _SLRCONA 0F0E                                        _SLRCONB 0F16  
                                      _SLRCONC 0F1E                               i2_TMR0_StopTimer 0F3A  
                     ??_EUSART_SetErrorHandler 0038                               ?_Recieve_ArmData 0032  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 0800                                        __pcinit 0E26  
                                      __ramtop 0800                                        __ptext0 0988  
                                      __ptext1 0DC2                                        __ptext2 0E40  
                                      __ptext3 0DE6                                        __ptext4 0ECC  
                                      __ptext5 0E0A                                        __ptext6 0ADE  
                                      __ptext7 0ED6                                        __ptext8 0EE0  
                                      __ptext9 0E5A                          _OSCILLATOR_Initialize 0E5A  
                     ??_PIN_MANAGER_Initialize 0038                                      _IOCCFbits 0F1A  
                                    _IOCCNbits 0F1B                                      _IOCCPbits 0F1C  
                         end_of_initialization 0E32          __end_of_EUSART_SetOverrunErrorHandler 0F08  
                _EUSART_SetOverrunErrorHandler 0EFE                                  __Lmediumconst 0000  
                            _EUSART_Initialize 0B5E                      _movement_Detect_Interrupt 0D70  
                           ?_EUSART_Initialize 0032                             _EUSART_is_rx_ready 0E72  
                                      postinc0 0FEE                                        postinc2 0FDE  
                                 ??_Arm_System 0036                            ??_EUSART_Initialize 0038  
               ??_EUSART_SetTxInterruptHandler 0038                       _TMR0_SetInterruptHandler 0ECC  
                          ?_EUSART_is_rx_ready 0032                                      _TRISCbits 0F8A  
                 ??_IOCCF2_SetInterruptHandler 0038                   ??_IOCCF5_SetInterruptHandler 0038  
                    __end_of_EUSART_Initialize 0BD8                           ??_EUSART_is_rx_ready 0036  
                           __end_of_Arm_System 0EC0                                 _TMR0_StopTimer 0F36  
                 __end_of_INTERRUPT_Initialize 0F36             __end_of_EUSART_DefaultErrorHandler 0F32  
                   _EUSART_DefaultErrorHandler 0F2C                                   _EUSART_Write 0BD8  
                       ?_OSCILLATOR_Initialize 0032                            start_initialization 0E26  
                                ??_EUSART_Read 0036   EUSART_SetRxInterruptHandler@interruptHandler 0036  
 EUSART_SetTxInterruptHandler@interruptHandler 0036                         __end_of_TMR0_StopTimer 0F3A  
                               _sensorDebounce 0020                 ?_EUSART_SetOverrunErrorHandler 0036  
                  __end_of_Transmit_MotionData 0DE6                     _EUSART_FramingErrorHandler 0026  
                             ??_PMD_Initialize 0036                         _EUSART_SetErrorHandler 0F12  
                     __end_ofi2_TMR0_StopTimer 0F3E                    __end_of_EUSART_Transmit_ISR 0CB4  
                                  __pbssCOMRAM 0001                               Recieve_ArmData@i 003D  
                             Recieve_ArmData@j 003F                     __end_of_EUSART_Receive_ISR 0ADE  
             _EUSART_RxDefaultInterruptHandler 002A                            __end_of_EUSART_Read 0C76  
                        _TMR0_InterruptHandler 0028                                ?_TMR0_StopTimer 0032  
                      _IOCCF5_InterruptHandler 002E                   __end_of_EUSART_RxDataHandler 0DC2  
                       _PIN_MANAGER_Initialize 0ADE                           EUSART_Read@readValue 0036  
                                    __pintcode 0008                                   _eusartRxHead 001C  
                                 _eusartTxHead 001F                                   _eusartRxTail 001B  
                                 _eusartTxTail 001E                   ??_INTERRUPT_InterruptManager 0032  
                                    _mainFlags 0021                        _eusartTxBufferRemaining 001D  
                                     _BAUD1CON 0F9F                                    __smallconst 0800  
           __end_of_IOCCF2_SetInterruptHandler 0EEA                     _IOCCF2_SetInterruptHandler 0EE0  
           __end_of_IOCCF5_SetInterruptHandler 0EE0                     _IOCCF5_SetInterruptHandler 0ED6  
                                _TMR0_CallBack 0D18                                  _Disarm_System 0E9C  
                         _INTERRUPT_Initialize 0F32                                 _eusartRxBuffer 0009  
                            ??_TMR0_Initialize 0038                                 _eusartTxBuffer 0011  
       EUSART_SetErrorHandler@interruptHandler 0036                                       _LATCbits 0F85  
                                     _PIE0bits 0EC2                                       _PIE3bits 0EC5  
                            _eusartRxLastError 0019                                       i2u100_40 0038  
                                     i2u100_41 0034                                       i2u101_40 004E  
                                     i2u101_41 004A                                       i2u102_40 005C  
                                     i2u102_41 0058                                       i2u103_40 0072  
                                     i2u103_41 006E                                       i2u104_40 0080  
                                     i2u104_41 007C                                       i2u105_40 008E  
                                     i2u105_41 008A                                       i2u107_40 00BA  
                                     i2u106_48 0094                                       i2u107_41 00B6  
                                     i2u106_49 00A8                                       i2u108_40 00C8  
                                     i2u108_41 00C4                                       i2u109_48 00CE  
                                     i2u109_49 00E2                     ??_TMR0_SetInterruptHandler 0038  
                                     _PIR0bits 0ECA                ??_EUSART_SetFramingErrorHandler 0038  
                                     _PIR3bits 0ECD                              _EUSART_is_tx_done 0E88  
                                     _TMR0_ISR 0F1C           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 0F2C            ??_EUSART_DefaultOverrunErrorHandler 0032  
           ?_EUSART_DefaultOverrunErrorHandler 0032              _EUSART_DefaultOverrunErrorHandler 0F26  
                            ??_PIN_MANAGER_IOC 0032                             ?_EUSART_is_tx_done 0032  
            __end_of_movement_Detect_Interrupt 0D9A                            ??_EUSART_is_tx_done 0036  
                               ?_TMR0_CallBack 0032                                    _EUSART_Read 0C2C  
                               ?_Disarm_System 0032                          ?_INTERRUPT_Initialize 0032  
                        fp__EUSART_Receive_ISR 0000                      __end_of_EUSART_is_tx_done 0E9C  
                                     __Hrparam 0000                                       __Lrparam 0000  
                      ??_OSCILLATOR_Initialize 0036                            _EUSART_ErrorHandler 0022  
                            ??_TMR0_StartTimer 0032                    ?_EUSART_DefaultErrorHandler 0032  
                                   _T0CON0bits 0FD5                           _EUSART_RxDataHandler 0D9A  
                                     __ptext10 0F32                                       __ptext11 0B5E  
                                     __ptext20 0BD8                                       __ptext12 0EEA  
                                     __ptext21 0C2C                                       __ptext13 0EF4  
                                     __ptext30 0D46                                       __ptext22 0E9C  
                                     __ptext14 0EFE                                       __ptext31 0CB4  
                                     __ptext23 0F36                                       __ptext15 0F08  
                                     __ptext40 0F2C                                       __ptext32 0F42  
                                     __ptext24 0EB0                                       __ptext16 0F12  
                                     __ptext41 0D9A                                       __ptext33 0CE6  
                                     __ptext17 0802                                       __ptext42 0000  
                                     __ptext34 0D70                                       __ptext26 0F1C  
                                     __ptext18 0E88                                       __ptext35 0F3E  
                                     __ptext27 0D18                                       __ptext19 0E72  
                                     __ptext36 0C76                                       __ptext28 0EC0  
                                     __ptext37 0A34                                       __ptext29 0F3A  
                                     __ptext38 0F26                                       __ptext39 0F44  
                                   _IOCCF2_ISR 0CE6                                     _IOCCF5_ISR 0CB4  
         __end_of_TMR0_DefaultInterruptHandler 0ECC                   _TMR0_DefaultInterruptHandler 0EC0  
                      ?_EUSART_SetErrorHandler 0036                                     _RC1STAbits 0F9D  
EUSART_SetOverrunErrorHandler@interruptHandler 0036                                       isa$xinst 0000  
                                     int$flags 0041                   fp__movement_Detect_Interrupt 0000  
                            ?i2_TMR0_StopTimer 0032                              ??_Recieve_ArmData 0037  
           __end_of_INTERRUPT_InterruptManager 00FA                     _INTERRUPT_InterruptManager 0008  
        __end_of_EUSART_SetFramingErrorHandler 0F12                  _EUSART_SetFramingErrorHandler 0F08  
                           ??i2_TMR0_StopTimer 0032                                     _INTCONbits 0FF2  
                              ??_TMR0_CallBack 0032                          ?_EUSART_RxDataHandler 0032  
                              ??_Disarm_System 0036                         ??_INTERRUPT_Initialize 0036  
                                     intlevel2 0000                               ??_TMR0_StopTimer 0036  
                       fp__EUSART_Transmit_ISR 0000                        ?_PIN_MANAGER_Initialize 0032  
               __end_of_EUSART_SetErrorHandler 0F1C           __end_of_EUSART_SetRxInterruptHandler 0EFE  
                 _EUSART_SetRxInterruptHandler 0EF4                fp__TMR0_DefaultInterruptHandler 0000  
                ?_TMR0_DefaultInterruptHandler 0032                             _EUSART_Receive_ISR 0A34  
EUSART_SetFramingErrorHandler@interruptHandler 0036                            ?_EUSART_Receive_ISR 0032  
                fp__EUSART_DefaultErrorHandler 0000                                _TMR0_Initialize 0DE6  
                  ?_IOCCF2_SetInterruptHandler 0036                    ?_IOCCF5_SetInterruptHandler 0036  
                                   _TX1STAbits 0F9E                             EUSART_Write@txData 0036  
                                  ?_IOCCF2_ISR 0032                                    ?_IOCCF5_ISR 0032  
               __end_of_PIN_MANAGER_Initialize 0B5E                                _PIN_MANAGER_IOC 0D46  
                         ??_EUSART_Receive_ISR 0032  
