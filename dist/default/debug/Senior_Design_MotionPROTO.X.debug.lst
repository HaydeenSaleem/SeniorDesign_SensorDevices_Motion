

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 20:54:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18LF25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 21/07/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18LF25K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _SP1BRGH	set	3996
    90   000000                     _TX1STA	set	3998
    91   000000                     _T0CON0	set	4053
    92   000000                     _IOCCPbits	set	3868
    93   000000                     _IOCCNbits	set	3867
    94   000000                     _IOCCFbits	set	3866
    95   000000                     _INLVLC	set	3869
    96   000000                     _SLRCONC	set	3870
    97   000000                     _ODCONC	set	3871
    98   000000                     _WPUC	set	3872
    99   000000                     _OSCTUNE	set	3805
   100   000000                     _OSCFRQ	set	3806
   101                           
   102                           	psect	nvCOMRAM
   103   000022                     __pnvCOMRAM:
   104                           	callstack 0
   105   000022                     _EUSART_ErrorHandler:
   106                           	callstack 0
   107   000022                     	ds	2
   108   000024                     _EUSART_OverrunErrorHandler:
   109                           	callstack 0
   110   000024                     	ds	2
   111   000026                     _EUSART_FramingErrorHandler:
   112                           	callstack 0
   113   000026                     	ds	2
   114   000028                     _TMR0_InterruptHandler:
   115                           	callstack 0
   116   000028                     	ds	2
   117   00002A                     _EUSART_RxDefaultInterruptHandler:
   118                           	callstack 0
   119   00002A                     	ds	2
   120   00002C                     _EUSART_TxDefaultInterruptHandler:
   121                           	callstack 0
   122   00002C                     	ds	2
   123   00002E                     _IOCCF5_InterruptHandler:
   124                           	callstack 0
   125   00002E                     	ds	2
   126   000030                     _IOCCF2_InterruptHandler:
   127                           	callstack 0
   128   000030                     	ds	2
   129   000000                     _RC1STAbits	set	3997
   130   000000                     _TX1STAbits	set	3998
   131   000000                     _TRISCbits	set	3978
   132   000000                     _T0CON0bits	set	4053
   133   000000                     _LATCbits	set	3973
   134   000000                     _RXPPS	set	3765
   135   000000                     _PIE0bits	set	3778
   136   000000                     _OSCCON1	set	3800
   137   000000                     _OSCCON3	set	3802
   138   000000                     _OSCEN	set	3804
   139   000000                     _PMD0	set	3809
   140   000000                     _RC6PPS	set	3837
   141   000000                     _INLVLA	set	3853
   142   000000                     _SLRCONA	set	3854
   143   000000                     _ODCONA	set	3855
   144   000000                     _WPUA	set	3856
   145   000000                     _ANSELA	set	3857
   146   000000                     _ANSELB	set	3865
   147   000000                     _ANSELC	set	3873
   148   000000                     _LATA	set	3971
   149   000000                     _PMD5	set	3814
   150   000000                     _PMD4	set	3813
   151   000000                     _PMD3	set	3812
   152   000000                     _PMD2	set	3811
   153   000000                     _PMD1	set	3810
   154   000000                     _TRISA	set	3976
   155   000000                     _LATC	set	3973
   156   000000                     _LATB	set	3972
   157   000000                     _RC1REG	set	3993
   158   000000                     _TX1REG	set	3994
   159   000000                     _SP1BRGL	set	3995
   160   000000                     _RC1STA	set	3997
   161   000000                     _BAUD1CON	set	3999
   162   000000                     _TMR0L	set	4051
   163   000000                     _TMR0H	set	4052
   164   000000                     _T0CON1	set	4054
   165   000000                     _INTCONbits	set	4082
   166   000000                     _TRISC	set	3978
   167   000000                     _TRISB	set	3977
   168   000000                     _INLVLE	set	3882
   169   000000                     _WPUE	set	3885
   170   000000                     _INLVLB	set	3861
   171   000000                     _SLRCONB	set	3862
   172   000000                     _ODCONB	set	3863
   173   000000                     _WPUB	set	3864
   174   000000                     _PIE3bits	set	3781
   175   000000                     _PIR0bits	set	3786
   176   000000                     _PIR3bits	set	3789
   177                           
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181   000C24                     __pcinit:
   182                           	callstack 0
   183   000C24                     start_initialization:
   184                           	callstack 0
   185   000C24                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to COMRAM (33 bytes)
   189   000C24  EE00  F001         	lfsr	0,__pbssCOMRAM
   190   000C28  0E21               	movlw	33
   191   000C2A                     clear_0:
   192   000C2A  6AEE               	clrf	postinc0,c
   193   000C2C  06E8               	decf	wreg,f,c
   194   000C2E  E1FD               	bnz	clear_0
   195   000C30                     end_of_initialization:
   196                           	callstack 0
   197   000C30                     __end_of__initialization:
   198                           	callstack 0
   199   000C30  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200   000C32  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201   000C34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202   000C36  6EF8               	movwf	tblptru,c
   203   000C38  0100               	movlb	0
   204   000C3A  EF96  F004         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   000001                     __pbssCOMRAM:
   208                           	callstack 0
   209   000001                     _eusartRxStatusBuffer:
   210                           	callstack 0
   211   000001                     	ds	8
   212   000009                     _eusartRxBuffer:
   213                           	callstack 0
   214   000009                     	ds	8
   215   000011                     _eusartTxBuffer:
   216                           	callstack 0
   217   000011                     	ds	8
   218   000019                     _eusartRxLastError:
   219                           	callstack 0
   220   000019                     	ds	1
   221   00001A                     _eusartRxCount:
   222                           	callstack 0
   223   00001A                     	ds	1
   224   00001B                     _eusartRxTail:
   225                           	callstack 0
   226   00001B                     	ds	1
   227   00001C                     _eusartRxHead:
   228                           	callstack 0
   229   00001C                     	ds	1
   230   00001D                     _eusartTxBufferRemaining:
   231                           	callstack 0
   232   00001D                     	ds	1
   233   00001E                     _eusartTxTail:
   234                           	callstack 0
   235   00001E                     	ds	1
   236   00001F                     _eusartTxHead:
   237                           	callstack 0
   238   00001F                     	ds	1
   239   000020                     _sensorDebounce:
   240                           	callstack 0
   241   000020                     	ds	1
   242   000021                     _mainFlags:
   243                           	callstack 0
   244   000021                     	ds	1
   245                           
   246                           	psect	cstackCOMRAM
   247   000032                     __pcstackCOMRAM:
   248                           	callstack 0
   249   000032                     ??_INTERRUPT_InterruptManager:
   250   000032                     
   251                           ; 1 bytes @ 0x0
   252   000032                     	ds	4
   253   000036                     EUSART_Write@txData:
   254                           	callstack 0
   255   000036                     IOCCF2_SetInterruptHandler@InterruptHandler:
   256                           	callstack 0
   257   000036                     IOCCF5_SetInterruptHandler@InterruptHandler:
   258                           	callstack 0
   259   000036                     TMR0_SetInterruptHandler@InterruptHandler:
   260                           	callstack 0
   261   000036                     EUSART_SetFramingErrorHandler@interruptHandler:
   262                           	callstack 0
   263   000036                     EUSART_SetOverrunErrorHandler@interruptHandler:
   264                           	callstack 0
   265   000036                     EUSART_SetErrorHandler@interruptHandler:
   266                           	callstack 0
   267   000036                     EUSART_SetTxInterruptHandler@interruptHandler:
   268                           	callstack 0
   269   000036                     EUSART_SetRxInterruptHandler@interruptHandler:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x4
   273   000036                     	ds	1
   274   000037                     
   275                           ; 1 bytes @ 0x5
   276   000037                     	ds	1
   277   000038                     
   278                           ; 1 bytes @ 0x6
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 51 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         0       0       0       0       0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called: 8
   304 ;; This function calls:
   305 ;;		_Arm_System
   306 ;;		_Disarm_System
   307 ;;		_SYSTEM_Initialize
   308 ;;		_Transmit_MotionData
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text0
   315   00092C                     __ptext0:
   316                           	callstack 0
   317   00092C                     _main:
   318                           	callstack 23
   319   00092C                     
   320                           ;main.c: 54:     SYSTEM_Initialize();
   321   00092C  EC1F  F006         	call	_SYSTEM_Initialize	;wreg free
   322   000930                     
   323                           ;main.c: 61:     (INTCONbits.GIE = 1);
   324   000930  8EF2               	bsf	242,7,c	;volatile
   325   000932                     
   326                           ;main.c: 67:     (INTCONbits.PEIE = 1);
   327   000932  8CF2               	bsf	242,6,c	;volatile
   328   000934                     
   329                           ;main.c: 75:     mainFlags.SystemDisarmed = 0;
   330   000934  9221               	bcf	_mainFlags^0,1,c
   331   000936                     
   332                           ;main.c: 76:     mainFlags.SystemArmed = 1;
   333   000936  8021               	bsf	_mainFlags^0,0,c
   334   000938                     l1724:
   335                           
   336                           ;main.c: 79:     {;main.c: 80:         if(mainFlags.SystemDisarmed) Disarm_System();
   337   000938  A221               	btfss	_mainFlags^0,1,c
   338   00093A  EFA1  F004         	goto	u771
   339   00093E  EFA3  F004         	goto	u770
   340   000942                     u771:
   341   000942  EFA5  F004         	goto	l1728
   342   000946                     u770:
   343   000946  EC42  F006         	call	_Disarm_System	;wreg free
   344   00094A                     l1728:
   345                           
   346                           ;main.c: 81:         if(mainFlags.SystemArmed) Arm_System();
   347   00094A  A021               	btfss	_mainFlags^0,0,c
   348   00094C  EFAA  F004         	goto	u781
   349   000950  EFAC  F004         	goto	u780
   350   000954                     u781:
   351   000954  EFAE  F004         	goto	l1732
   352   000958                     u780:
   353   000958  EC4B  F006         	call	_Arm_System	;wreg free
   354   00095C                     l1732:
   355                           
   356                           ;main.c: 82:         if(mainFlags.System_MotionFlag) Transmit_MotionData();
   357   00095C  A621               	btfss	_mainFlags^0,3,c
   358   00095E  EFB3  F004         	goto	u791
   359   000962  EFB5  F004         	goto	u790
   360   000966                     u791:
   361   000966  EFB7  F004         	goto	l1736
   362   00096A                     u790:
   363   00096A  ECE0  F005         	call	_Transmit_MotionData	;wreg free
   364   00096E                     l1736:
   365                           
   366                           ;main.c: 84:         if(((IOCCFbits.IOCCF2 == 0) && (T0CON0bits.T0EN == 0))
   367   00096E  010F               	movlb	15	; () banked
   368   000970  B51A               	btfsc	26,2,b	;volatile
   369   000972  EFBD  F004         	goto	u801
   370   000976  EFBF  F004         	goto	u800
   371   00097A                     u801:
   372   00097A  EFC6  F004         	goto	l285
   373   00097E                     u800:
   374   00097E                     
   375                           ; BSR set to: 15
   376   00097E  AED5               	btfss	213,7,c	;volatile
   377   000980  EFC4  F004         	goto	u811
   378   000984  EFC6  F004         	goto	u810
   379   000988                     u811:
   380   000988  EFCD  F004         	goto	l283
   381   00098C                     u810:
   382   00098C                     l285:
   383                           
   384                           ; BSR set to: 15
   385   00098C  A421               	btfss	_mainFlags^0,2,c
   386   00098E  EFCB  F004         	goto	u821
   387   000992  EFCD  F004         	goto	u820
   388   000996                     u821:
   389   000996  EF9C  F004         	goto	l1724
   390   00099A                     u820:
   391   00099A                     l283:
   392                           
   393                           ; BSR set to: 15
   394   00099A  0003               	sleep		;# 
   395                           
   396                           ;main.c: 90:             __nop();
   397   00099C  0000               	nop	
   398                           
   399                           ;main.c: 91:             __nop();
   400   00099E  0000               	nop	
   401   0009A0  EF9C  F004         	goto	l1724
   402   0009A4  EF7D  F000         	goto	start
   403   0009A8                     __end_of_main:
   404                           	callstack 0
   405                           
   406 ;; *************** function _Transmit_MotionData *****************
   407 ;; Defined at:
   408 ;;		line 31 in file "system_core.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 6
   429 ;; This function calls:
   430 ;;		_EUSART_Write
   431 ;;		_EUSART_is_tx_done
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438   000BC0                     __ptext1:
   439                           	callstack 0
   440   000BC0                     _Transmit_MotionData:
   441                           	callstack 24
   442   000BC0                     
   443                           ;system_core.c: 33:     EUSART_Write(0x4D);
   444   000BC0  0E4D               	movlw	77
   445   000BC2  EC11  F005         	call	_EUSART_Write
   446                           
   447                           ;system_core.c: 34:     EUSART_Write(0x44);
   448   000BC6  0E44               	movlw	68
   449   000BC8  EC11  F005         	call	_EUSART_Write
   450   000BCC                     
   451                           ;system_core.c: 36:     mainFlags.System_MotionFlag = 0;
   452   000BCC  9621               	bcf	_mainFlags^0,3,c
   453   000BCE                     l1660:
   454   000BCE  EC38  F006         	call	_EUSART_is_tx_done	;wreg free
   455   000BD2  0900               	iorlw	0
   456   000BD4  B4D8               	btfsc	status,2,c
   457   000BD6  EFEF  F005         	goto	u571
   458   000BDA  EFF1  F005         	goto	u570
   459   000BDE                     u571:
   460   000BDE  EFE7  F005         	goto	l1660
   461   000BE2                     u570:
   462   000BE2  0012               	return		;funcret
   463   000BE4                     __end_of_Transmit_MotionData:
   464                           	callstack 0
   465                           
   466 ;; *************** function _EUSART_is_tx_done *****************
   467 ;; Defined at:
   468 ;;		line 142 in file "mcc_generated_files/eusart.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      _Bool 
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   482 ;;      Params:         0       0       0       0       0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 5
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_Transmit_MotionData
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text2
   497   000C70                     __ptext2:
   498                           	callstack 0
   499   000C70                     _EUSART_is_tx_done:
   500                           	callstack 24
   501   000C70                     
   502                           ;mcc_generated_files/eusart.c: 144:     return TX1STAbits.TRMT;
   503   000C70  B29E               	btfsc	158,1,c	;volatile
   504   000C72  EF3D  F006         	goto	u541
   505   000C76  EF40  F006         	goto	u540
   506   000C7A                     u541:
   507   000C7A  0E01               	movlw	1
   508   000C7C  EF41  F006         	goto	u546
   509   000C80                     u540:
   510   000C80  0E00               	movlw	0
   511   000C82                     u546:
   512   000C82  0012               	return		;funcret
   513   000C84                     __end_of_EUSART_is_tx_done:
   514                           	callstack 0
   515                           
   516 ;; *************** function _EUSART_Write *****************
   517 ;; Defined at:
   518 ;;		line 173 in file "mcc_generated_files/eusart.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;  txData          1    wreg     unsigned char 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  txData          1    4[COMRAM] unsigned char 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   532 ;;      Params:         0       0       0       0       0       0       0       0       0
   533 ;;      Locals:         1       0       0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0
   535 ;;      Totals:         1       0       0       0       0       0       0       0       0
   536 ;;Total ram usage:        1 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 5
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_Transmit_MotionData
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text3
   547   000A22                     __ptext3:
   548                           	callstack 0
   549   000A22                     _EUSART_Write:
   550                           	callstack 24
   551                           
   552                           ;incstack = 0
   553                           ;EUSART_Write@txData stored from wreg
   554   000A22  6E36               	movwf	EUSART_Write@txData^0,c
   555   000A24                     l1600:
   556                           
   557                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
   558   000A24  501D               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
   559   000A26  B4D8               	btfsc	status,2,c
   560   000A28  EF18  F005         	goto	u511
   561   000A2C  EF1A  F005         	goto	u510
   562   000A30                     u511:
   563   000A30  EF12  F005         	goto	l1600
   564   000A34                     u510:
   565   000A34                     
   566                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
   567   000A34  010E               	movlb	14	; () banked
   568   000A36  B9C5               	btfsc	197,4,b	;volatile
   569   000A38  EF20  F005         	goto	u521
   570   000A3C  EF22  F005         	goto	u520
   571   000A40                     u521:
   572   000A40  EF26  F005         	goto	l416
   573   000A44                     u520:
   574   000A44                     
   575                           ; BSR set to: 14
   576                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
   577   000A44  C036  FF9A         	movff	EUSART_Write@txData,3994	;volatile
   578                           
   579                           ;mcc_generated_files/eusart.c: 182:     }
   580   000A48  EF39  F005         	goto	l1614
   581   000A4C                     l416:
   582                           
   583                           ; BSR set to: 14
   584                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
   585   000A4C  99C5               	bcf	197,4,b	;volatile
   586   000A4E                     
   587                           ; BSR set to: 14
   588                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
   589   000A4E  501F               	movf	_eusartTxHead^0,w,c
   590   000A50  0F11               	addlw	low _eusartTxBuffer
   591   000A52  6ED9               	movwf	fsr2l,c
   592   000A54  6ADA               	clrf	fsr2h,c
   593   000A56  C036  FFDF         	movff	EUSART_Write@txData,indf2
   594   000A5A                     
   595                           ; BSR set to: 14
   596   000A5A  2A1F               	incf	_eusartTxHead^0,f,c	;volatile
   597   000A5C                     
   598                           ; BSR set to: 14
   599                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
   600   000A5C  0E07               	movlw	7
   601   000A5E  641F               	cpfsgt	_eusartTxHead^0,c	;volatile
   602   000A60  EF34  F005         	goto	u531
   603   000A64  EF36  F005         	goto	u530
   604   000A68                     u531:
   605   000A68  EF38  F005         	goto	l1612
   606   000A6C                     u530:
   607   000A6C                     
   608                           ; BSR set to: 14
   609                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
   610   000A6C  0E00               	movlw	0
   611   000A6E  6E1F               	movwf	_eusartTxHead^0,c	;volatile
   612   000A70                     l1612:
   613                           
   614                           ; BSR set to: 14
   615                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
   616   000A70  061D               	decf	_eusartTxBufferRemaining^0,f,c	;volatile
   617   000A72                     l1614:
   618                           
   619                           ; BSR set to: 14
   620                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
   621   000A72  89C5               	bsf	197,4,b	;volatile
   622   000A74                     
   623                           ; BSR set to: 14
   624   000A74  0012               	return		;funcret
   625   000A76                     __end_of_EUSART_Write:
   626                           	callstack 0
   627                           
   628 ;; *************** function _SYSTEM_Initialize *****************
   629 ;; Defined at:
   630 ;;		line 50 in file "mcc_generated_files/mcc.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   644 ;;      Params:         0       0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 7
   651 ;; This function calls:
   652 ;;		_EUSART_Initialize
   653 ;;		_INTERRUPT_Initialize
   654 ;;		_OSCILLATOR_Initialize
   655 ;;		_PIN_MANAGER_Initialize
   656 ;;		_PMD_Initialize
   657 ;;		_TMR0_Initialize
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text4
   664   000C3E                     __ptext4:
   665                           	callstack 0
   666   000C3E                     _SYSTEM_Initialize:
   667                           	callstack 23
   668   000C3E                     
   669                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   670   000C3E  EC8C  F006         	call	_INTERRUPT_Initialize	;wreg free
   671   000C42                     
   672                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   673   000C42  EC04  F006         	call	_PMD_Initialize	;wreg free
   674   000C46                     
   675                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   676   000C46  EC56  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   677   000C4A                     
   678                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   679   000C4A  EC2C  F006         	call	_OSCILLATOR_Initialize	;wreg free
   680   000C4E                     
   681                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   682   000C4E  ECF2  F005         	call	_TMR0_Initialize	;wreg free
   683   000C52                     
   684                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
   685   000C52  ECD4  F004         	call	_EUSART_Initialize	;wreg free
   686   000C56  0012               	return		;funcret
   687   000C58                     __end_of_SYSTEM_Initialize:
   688                           	callstack 0
   689                           
   690 ;; *************** function _TMR0_Initialize *****************
   691 ;; Defined at:
   692 ;;		line 62 in file "mcc_generated_files/tmr0.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   706 ;;      Params:         0       0       0       0       0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0
   709 ;;      Totals:         0       0       0       0       0       0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 6
   713 ;; This function calls:
   714 ;;		_TMR0_SetInterruptHandler
   715 ;; This function is called by:
   716 ;;		_SYSTEM_Initialize
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text5
   721   000BE4                     __ptext5:
   722                           	callstack 0
   723   000BE4                     _TMR0_Initialize:
   724                           	callstack 23
   725   000BE4                     
   726                           ;mcc_generated_files/tmr0.c: 67:     T0CON1 = 0x6F;
   727   000BE4  0E6F               	movlw	111
   728   000BE6  6ED6               	movwf	214,c	;volatile
   729                           
   730                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0xF3;
   731   000BE8  0EF3               	movlw	243
   732   000BEA  6ED4               	movwf	212,c	;volatile
   733                           
   734                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0x00;
   735   000BEC  0E00               	movlw	0
   736   000BEE  6ED3               	movwf	211,c	;volatile
   737   000BF0                     
   738                           ;mcc_generated_files/tmr0.c: 76:     PIR0bits.TMR0IF = 0;
   739   000BF0  010E               	movlb	14	; () banked
   740   000BF2  9BCA               	bcf	202,5,b	;volatile
   741   000BF4                     
   742                           ; BSR set to: 14
   743                           ;mcc_generated_files/tmr0.c: 79:     PIE0bits.TMR0IE = 1;
   744   000BF4  8BC2               	bsf	194,5,b	;volatile
   745   000BF6                     
   746                           ; BSR set to: 14
   747                           ;mcc_generated_files/tmr0.c: 82:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   748   000BF6  0EA6               	movlw	low _TMR0_DefaultInterruptHandler
   749   000BF8  6E36               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   750   000BFA  0E0C               	movlw	high _TMR0_DefaultInterruptHandler
   751   000BFC  6E37               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   752   000BFE  EC59  F006         	call	_TMR0_SetInterruptHandler	;wreg free
   753   000C02                     
   754                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x80;
   755   000C02  0E80               	movlw	128
   756   000C04  6ED5               	movwf	213,c	;volatile
   757   000C06  0012               	return		;funcret
   758   000C08                     __end_of_TMR0_Initialize:
   759                           	callstack 0
   760                           
   761 ;; *************** function _TMR0_SetInterruptHandler *****************
   762 ;; Defined at:
   763 ;;		line 143 in file "mcc_generated_files/tmr0.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
   766 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         2       0       0       0       0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0
   781 ;;      Totals:         2       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 5
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_TMR0_Initialize
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text6
   793   000CB2                     __ptext6:
   794                           	callstack 0
   795   000CB2                     _TMR0_SetInterruptHandler:
   796                           	callstack 23
   797   000CB2                     
   798                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
   799   000CB2  C036  F028         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   800   000CB6  C037  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   801   000CBA  0012               	return		;funcret
   802   000CBC                     __end_of_TMR0_SetInterruptHandler:
   803                           	callstack 0
   804                           
   805 ;; *************** function _PMD_Initialize *****************
   806 ;; Defined at:
   807 ;;		line 74 in file "mcc_generated_files/mcc.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         0       0       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; Hardware stack levels required when called: 5
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_SYSTEM_Initialize
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text7
   836   000C08                     __ptext7:
   837                           	callstack 0
   838   000C08                     _PMD_Initialize:
   839                           	callstack 24
   840   000C08                     
   841                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   842   000C08  0E00               	movlw	0
   843   000C0A  010E               	movlb	14	; () banked
   844   000C0C  6FE1               	movwf	225,b	;volatile
   845                           
   846                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x7E;
   847   000C0E  0E7E               	movlw	126
   848   000C10  6FE2               	movwf	226,b	;volatile
   849                           
   850                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x66;
   851   000C12  0E66               	movlw	102
   852   000C14  6FE3               	movwf	227,b	;volatile
   853                           
   854                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x0F;
   855   000C16  0E0F               	movlw	15
   856   000C18  6FE4               	movwf	228,b	;volatile
   857                           
   858                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x11;
   859   000C1A  0E11               	movlw	17
   860   000C1C  6FE5               	movwf	229,b	;volatile
   861                           
   862                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   863   000C1E  0E00               	movlw	0
   864   000C20  6FE6               	movwf	230,b	;volatile
   865   000C22                     
   866                           ; BSR set to: 14
   867   000C22  0012               	return		;funcret
   868   000C24                     __end_of_PMD_Initialize:
   869                           	callstack 0
   870                           
   871 ;; *************** function _PIN_MANAGER_Initialize *****************
   872 ;; Defined at:
   873 ;;		line 61 in file "mcc_generated_files/pin_manager.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   887 ;;      Params:         0       0       0       0       0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; Hardware stack levels required when called: 6
   894 ;; This function calls:
   895 ;;		_IOCCF2_SetInterruptHandler
   896 ;;		_IOCCF5_SetInterruptHandler
   897 ;; This function is called by:
   898 ;;		_SYSTEM_Initialize
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text8
   903   0008AC                     __ptext8:
   904                           	callstack 0
   905   0008AC                     _PIN_MANAGER_Initialize:
   906                           	callstack 23
   907   0008AC                     
   908                           ;mcc_generated_files/pin_manager.c: 66:     LATA = 0x00;
   909   0008AC  0E00               	movlw	0
   910   0008AE  6E83               	movwf	131,c	;volatile
   911                           
   912                           ;mcc_generated_files/pin_manager.c: 67:     LATB = 0x00;
   913   0008B0  0E00               	movlw	0
   914   0008B2  6E84               	movwf	132,c	;volatile
   915                           
   916                           ;mcc_generated_files/pin_manager.c: 68:     LATC = 0x00;
   917   0008B4  0E00               	movlw	0
   918   0008B6  6E85               	movwf	133,c	;volatile
   919                           
   920                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0x00;
   921   0008B8  0E00               	movlw	0
   922   0008BA  6E88               	movwf	136,c	;volatile
   923                           
   924                           ;mcc_generated_files/pin_manager.c: 74:     TRISB = 0xC0;
   925   0008BC  0EC0               	movlw	192
   926   0008BE  6E89               	movwf	137,c	;volatile
   927                           
   928                           ;mcc_generated_files/pin_manager.c: 75:     TRISC = 0xA4;
   929   0008C0  0EA4               	movlw	164
   930   0008C2  6E8A               	movwf	138,c	;volatile
   931                           
   932                           ;mcc_generated_files/pin_manager.c: 80:     ANSELC = 0x53;
   933   0008C4  0E53               	movlw	83
   934   0008C6  010F               	movlb	15	; () banked
   935   0008C8  6F21               	movwf	33,b	;volatile
   936   0008CA                     
   937                           ; BSR set to: 15
   938                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0xFF;
   939   0008CA  6919               	setf	25,b	;volatile
   940   0008CC                     
   941                           ; BSR set to: 15
   942                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
   943   0008CC  6911               	setf	17,b	;volatile
   944                           
   945                           ;mcc_generated_files/pin_manager.c: 87:     WPUE = 0x00;
   946   0008CE  0E00               	movlw	0
   947   0008D0  6F2D               	movwf	45,b	;volatile
   948                           
   949                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x00;
   950   0008D2  0E00               	movlw	0
   951   0008D4  6F18               	movwf	24,b	;volatile
   952                           
   953                           ;mcc_generated_files/pin_manager.c: 89:     WPUA = 0x00;
   954   0008D6  0E00               	movlw	0
   955   0008D8  6F10               	movwf	16,b	;volatile
   956                           
   957                           ;mcc_generated_files/pin_manager.c: 90:     WPUC = 0x00;
   958   0008DA  0E00               	movlw	0
   959   0008DC  6F20               	movwf	32,b	;volatile
   960                           
   961                           ;mcc_generated_files/pin_manager.c: 95:     ODCONA = 0x00;
   962   0008DE  0E00               	movlw	0
   963   0008E0  6F0F               	movwf	15,b	;volatile
   964                           
   965                           ;mcc_generated_files/pin_manager.c: 96:     ODCONB = 0x00;
   966   0008E2  0E00               	movlw	0
   967   0008E4  6F17               	movwf	23,b	;volatile
   968                           
   969                           ;mcc_generated_files/pin_manager.c: 97:     ODCONC = 0x00;
   970   0008E6  0E00               	movlw	0
   971   0008E8  6F1F               	movwf	31,b	;volatile
   972   0008EA                     
   973                           ; BSR set to: 15
   974                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONA = 0xFF;
   975   0008EA  690E               	setf	14,b	;volatile
   976   0008EC                     
   977                           ; BSR set to: 15
   978                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONB = 0xFF;
   979   0008EC  6916               	setf	22,b	;volatile
   980   0008EE                     
   981                           ; BSR set to: 15
   982                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONC = 0xFF;
   983   0008EE  691E               	setf	30,b	;volatile
   984   0008F0                     
   985                           ; BSR set to: 15
   986                           ;mcc_generated_files/pin_manager.c: 109:     INLVLA = 0xFF;
   987   0008F0  690D               	setf	13,b	;volatile
   988   0008F2                     
   989                           ; BSR set to: 15
   990                           ;mcc_generated_files/pin_manager.c: 110:     INLVLB = 0xFF;
   991   0008F2  6915               	setf	21,b	;volatile
   992   0008F4                     
   993                           ; BSR set to: 15
   994                           ;mcc_generated_files/pin_manager.c: 111:     INLVLC = 0xFF;
   995   0008F4  691D               	setf	29,b	;volatile
   996                           
   997                           ;mcc_generated_files/pin_manager.c: 112:     INLVLE = 0x08;
   998   0008F6  0E08               	movlw	8
   999   0008F8  6F2A               	movwf	42,b	;volatile
  1000   0008FA                     
  1001                           ; BSR set to: 15
  1002                           ;mcc_generated_files/pin_manager.c: 119:     IOCCFbits.IOCCF2 = 0;
  1003   0008FA  951A               	bcf	26,2,b	;volatile
  1004   0008FC                     
  1005                           ; BSR set to: 15
  1006                           ;mcc_generated_files/pin_manager.c: 121:     IOCCFbits.IOCCF5 = 0;
  1007   0008FC  9B1A               	bcf	26,5,b	;volatile
  1008   0008FE                     
  1009                           ; BSR set to: 15
  1010                           ;mcc_generated_files/pin_manager.c: 123:     IOCCNbits.IOCCN2 = 0;
  1011   0008FE  951B               	bcf	27,2,b	;volatile
  1012   000900                     
  1013                           ; BSR set to: 15
  1014                           ;mcc_generated_files/pin_manager.c: 125:     IOCCNbits.IOCCN5 = 1;
  1015   000900  8B1B               	bsf	27,5,b	;volatile
  1016   000902                     
  1017                           ; BSR set to: 15
  1018                           ;mcc_generated_files/pin_manager.c: 127:     IOCCPbits.IOCCP2 = 1;
  1019   000902  851C               	bsf	28,2,b	;volatile
  1020   000904                     
  1021                           ; BSR set to: 15
  1022                           ;mcc_generated_files/pin_manager.c: 129:     IOCCPbits.IOCCP5 = 1;
  1023   000904  8B1C               	bsf	28,5,b	;volatile
  1024   000906                     
  1025                           ; BSR set to: 15
  1026                           ;mcc_generated_files/pin_manager.c: 134:     IOCCF2_SetInterruptHandler(movement_Detect_
      +                          Interrupt);
  1027   000906  0E70               	movlw	low _movement_Detect_Interrupt
  1028   000908  6E36               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^0,c
  1029   00090A  0E0B               	movlw	high _movement_Detect_Interrupt
  1030   00090C  6E37               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^0,c
  1031   00090E  EC63  F006         	call	_IOCCF2_SetInterruptHandler	;wreg free
  1032   000912                     
  1033                           ;mcc_generated_files/pin_manager.c: 135:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
  1034   000912  0E28               	movlw	low _IOCCF5_DefaultInterruptHandler
  1035   000914  6E36               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^0,c
  1036   000916  0E0D               	movlw	high _IOCCF5_DefaultInterruptHandler
  1037   000918  6E37               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^0,c
  1038   00091A  EC5E  F006         	call	_IOCCF5_SetInterruptHandler	;wreg free
  1039   00091E                     
  1040                           ;mcc_generated_files/pin_manager.c: 138:     PIE0bits.IOCIE = 1;
  1041   00091E  010E               	movlb	14	; () banked
  1042   000920  89C2               	bsf	194,4,b	;volatile
  1043                           
  1044                           ;mcc_generated_files/pin_manager.c: 141:     RXPPS = 0x17;
  1045   000922  0E17               	movlw	23
  1046   000924  6FB5               	movwf	181,b	;volatile
  1047                           
  1048                           ;mcc_generated_files/pin_manager.c: 142:     RC6PPS = 0x09;
  1049   000926  0E09               	movlw	9
  1050   000928  6FFD               	movwf	253,b	;volatile
  1051   00092A                     
  1052                           ; BSR set to: 14
  1053   00092A  0012               	return		;funcret
  1054   00092C                     __end_of_PIN_MANAGER_Initialize:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _IOCCF5_SetInterruptHandler *****************
  1058 ;; Defined at:
  1059 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1062 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         2       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 5
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_PIN_MANAGER_Initialize
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text9
  1089   000CBC                     __ptext9:
  1090                           	callstack 0
  1091   000CBC                     _IOCCF5_SetInterruptHandler:
  1092                           	callstack 23
  1093   000CBC                     
  1094                           ;mcc_generated_files/pin_manager.c: 208:     IOCCF5_InterruptHandler = InterruptHandler;
  1095   000CBC  C036  F02E         	movff	IOCCF5_SetInterruptHandler@InterruptHandler,_IOCCF5_InterruptHandler
  1096   000CC0  C037  F02F         	movff	IOCCF5_SetInterruptHandler@InterruptHandler+1,_IOCCF5_InterruptHandler+1
  1097   000CC4  0012               	return		;funcret
  1098   000CC6                     __end_of_IOCCF5_SetInterruptHandler:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  1102 ;; Defined at:
  1103 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1106 ;;		 -> movement_Detect_Interrupt(1), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         2       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        2 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 5
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_PIN_MANAGER_Initialize
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text10
  1133   000CC6                     __ptext10:
  1134                           	callstack 0
  1135   000CC6                     _IOCCF2_SetInterruptHandler:
  1136                           	callstack 23
  1137   000CC6                     
  1138                           ;mcc_generated_files/pin_manager.c: 178:     IOCCF2_InterruptHandler = InterruptHandler;
  1139   000CC6  C036  F030         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  1140   000CCA  C037  F031         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  1141   000CCE  0012               	return		;funcret
  1142   000CD0                     __end_of_IOCCF2_SetInterruptHandler:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _OSCILLATOR_Initialize *****************
  1146 ;; Defined at:
  1147 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 5
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_SYSTEM_Initialize
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text11
  1176   000C58                     __ptext11:
  1177                           	callstack 0
  1178   000C58                     _OSCILLATOR_Initialize:
  1179                           	callstack 24
  1180   000C58                     
  1181                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  1182   000C58  0E62               	movlw	98
  1183   000C5A  010E               	movlb	14	; () banked
  1184   000C5C  6FD8               	movwf	216,b	;volatile
  1185                           
  1186                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1187   000C5E  0E00               	movlw	0
  1188   000C60  6FDA               	movwf	218,b	;volatile
  1189                           
  1190                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1191   000C62  0E00               	movlw	0
  1192   000C64  6FDC               	movwf	220,b	;volatile
  1193                           
  1194                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  1195   000C66  0E02               	movlw	2
  1196   000C68  6FDE               	movwf	222,b	;volatile
  1197                           
  1198                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1199   000C6A  0E00               	movlw	0
  1200   000C6C  6FDD               	movwf	221,b	;volatile
  1201   000C6E                     
  1202                           ; BSR set to: 14
  1203   000C6E  0012               	return		;funcret
  1204   000C70                     __end_of_OSCILLATOR_Initialize:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _INTERRUPT_Initialize *****************
  1208 ;; Defined at:
  1209 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		None
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 5
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_SYSTEM_Initialize
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text12
  1238   000D18                     __ptext12:
  1239                           	callstack 0
  1240   000D18                     _INTERRUPT_Initialize:
  1241                           	callstack 24
  1242   000D18                     
  1243                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1244   000D18  9AF2               	bcf	242,5,c	;volatile
  1245   000D1A  0012               	return		;funcret
  1246   000D1C                     __end_of_INTERRUPT_Initialize:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function _EUSART_Initialize *****************
  1250 ;; Defined at:
  1251 ;;		line 88 in file "mcc_generated_files/eusart.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 6
  1272 ;; This function calls:
  1273 ;;		_EUSART_SetErrorHandler
  1274 ;;		_EUSART_SetFramingErrorHandler
  1275 ;;		_EUSART_SetOverrunErrorHandler
  1276 ;;		_EUSART_SetRxInterruptHandler
  1277 ;;		_EUSART_SetTxInterruptHandler
  1278 ;; This function is called by:
  1279 ;;		_SYSTEM_Initialize
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text13
  1284   0009A8                     __ptext13:
  1285                           	callstack 0
  1286   0009A8                     _EUSART_Initialize:
  1287                           	callstack 23
  1288   0009A8                     
  1289                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
  1290   0009A8  010E               	movlb	14	; () banked
  1291   0009AA  9BC5               	bcf	197,5,b	;volatile
  1292   0009AC                     
  1293                           ; BSR set to: 14
  1294                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1295   0009AC  0E02               	movlw	low _EUSART_Receive_ISR
  1296   0009AE  6E36               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  1297   0009B0  0E08               	movlw	high _EUSART_Receive_ISR
  1298   0009B2  6E37               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  1299   0009B4  EC6D  F006         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1300   0009B8                     
  1301                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
  1302   0009B8  010E               	movlb	14	; () banked
  1303   0009BA  99C5               	bcf	197,4,b	;volatile
  1304                           
  1305                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  1306   0009BC  0E76               	movlw	low _EUSART_Transmit_ISR
  1307   0009BE  6E36               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  1308   0009C0  0E0A               	movlw	high _EUSART_Transmit_ISR
  1309   0009C2  6E37               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  1310   0009C4  EC68  F006         	call	_EUSART_SetTxInterruptHandler	;wreg free
  1311   0009C8                     
  1312                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x0A;
  1313   0009C8  0E0A               	movlw	10
  1314   0009CA  6E9F               	movwf	159,c	;volatile
  1315   0009CC                     
  1316                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  1317   0009CC  0E90               	movlw	144
  1318   0009CE  6E9D               	movwf	157,c	;volatile
  1319   0009D0                     
  1320                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  1321   0009D0  0E24               	movlw	36
  1322   0009D2  6E9E               	movwf	158,c	;volatile
  1323   0009D4                     
  1324                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
  1325   0009D4  0E19               	movlw	25
  1326   0009D6  6E9B               	movwf	155,c	;volatile
  1327   0009D8                     
  1328                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  1329   0009D8  0E00               	movlw	0
  1330   0009DA  6E9C               	movwf	156,c	;volatile
  1331   0009DC                     
  1332                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1333   0009DC  0E2A               	movlw	low _EUSART_DefaultFramingErrorHandler
  1334   0009DE  6E36               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1335   0009E0  0E0D               	movlw	high _EUSART_DefaultFramingErrorHandler
  1336   0009E2  6E37               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1337   0009E4  EC77  F006         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1338   0009E8                     
  1339                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1340   0009E8  0E0C               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1341   0009EA  6E36               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1342   0009EC  0E0D               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1343   0009EE  6E37               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1344   0009F0  EC72  F006         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1345   0009F4                     
  1346                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1347   0009F4  0E12               	movlw	low _EUSART_DefaultErrorHandler
  1348   0009F6  6E36               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1349   0009F8  0E0D               	movlw	high _EUSART_DefaultErrorHandler
  1350   0009FA  6E37               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1351   0009FC  EC7C  F006         	call	_EUSART_SetErrorHandler	;wreg free
  1352                           
  1353                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  1354   000A00  0E00               	movlw	0
  1355   000A02  6E19               	movwf	_eusartRxLastError^0,c	;volatile
  1356                           
  1357                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  1358   000A04  0E00               	movlw	0
  1359   000A06  6E1F               	movwf	_eusartTxHead^0,c	;volatile
  1360                           
  1361                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  1362   000A08  0E00               	movlw	0
  1363   000A0A  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  1364                           
  1365                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  1366   000A0C  0E08               	movlw	8
  1367   000A0E  6E1D               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  1368                           
  1369                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  1370   000A10  0E00               	movlw	0
  1371   000A12  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  1372                           
  1373                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  1374   000A14  0E00               	movlw	0
  1375   000A16  6E1B               	movwf	_eusartRxTail^0,c	;volatile
  1376                           
  1377                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  1378   000A18  0E00               	movlw	0
  1379   000A1A  6E1A               	movwf	_eusartRxCount^0,c	;volatile
  1380   000A1C                     
  1381                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
  1382   000A1C  010E               	movlb	14	; () banked
  1383   000A1E  8BC5               	bsf	197,5,b	;volatile
  1384   000A20                     
  1385                           ; BSR set to: 14
  1386   000A20  0012               	return		;funcret
  1387   000A22                     __end_of_EUSART_Initialize:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1391 ;; Defined at:
  1392 ;;		line 276 in file "mcc_generated_files/eusart.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1395 ;;		 -> EUSART_Transmit_ISR(1), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1407 ;;      Params:         2       0       0       0       0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1410 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1411 ;;Total ram usage:        2 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 5
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_EUSART_Initialize
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text14
  1422   000CD0                     __ptext14:
  1423                           	callstack 0
  1424   000CD0                     _EUSART_SetTxInterruptHandler:
  1425                           	callstack 23
  1426   000CD0                     
  1427                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  1428   000CD0  C036  F02C         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  1429   000CD4  C037  F02D         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  1430   000CD8  0012               	return		;funcret
  1431   000CDA                     __end_of_EUSART_SetTxInterruptHandler:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1435 ;; Defined at:
  1436 ;;		line 280 in file "mcc_generated_files/eusart.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1439 ;;		 -> EUSART_Receive_ISR(1), 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         2       0       0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1454 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        2 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 5
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_EUSART_Initialize
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text15
  1466   000CDA                     __ptext15:
  1467                           	callstack 0
  1468   000CDA                     _EUSART_SetRxInterruptHandler:
  1469                           	callstack 23
  1470   000CDA                     
  1471                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1472   000CDA  C036  F02A         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1473   000CDE  C037  F02B         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1474   000CE2  0012               	return		;funcret
  1475   000CE4                     __end_of_EUSART_SetRxInterruptHandler:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1479 ;; Defined at:
  1480 ;;		line 268 in file "mcc_generated_files/eusart.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1483 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         2       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        2 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 5
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_EUSART_Initialize
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text16
  1510   000CE4                     __ptext16:
  1511                           	callstack 0
  1512   000CE4                     _EUSART_SetOverrunErrorHandler:
  1513                           	callstack 23
  1514   000CE4                     
  1515                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  1516   000CE4  C036  F024         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1517   000CE8  C037  F025         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1518   000CEC  0012               	return		;funcret
  1519   000CEE                     __end_of_EUSART_SetOverrunErrorHandler:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1523 ;; Defined at:
  1524 ;;		line 264 in file "mcc_generated_files/eusart.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1527 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         2       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        2 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 5
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_EUSART_Initialize
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text17
  1554   000CEE                     __ptext17:
  1555                           	callstack 0
  1556   000CEE                     _EUSART_SetFramingErrorHandler:
  1557                           	callstack 23
  1558   000CEE                     
  1559                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  1560   000CEE  C036  F026         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1561   000CF2  C037  F027         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1562   000CF6  0012               	return		;funcret
  1563   000CF8                     __end_of_EUSART_SetFramingErrorHandler:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _EUSART_SetErrorHandler *****************
  1567 ;; Defined at:
  1568 ;;		line 272 in file "mcc_generated_files/eusart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1571 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         2       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 5
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_EUSART_Initialize
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text18
  1598   000CF8                     __ptext18:
  1599                           	callstack 0
  1600   000CF8                     _EUSART_SetErrorHandler:
  1601                           	callstack 23
  1602   000CF8                     
  1603                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  1604   000CF8  C036  F022         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1605   000CFC  C037  F023         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1606   000D00  0012               	return		;funcret
  1607   000D02                     __end_of_EUSART_SetErrorHandler:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _Disarm_System *****************
  1611 ;; Defined at:
  1612 ;;		line 19 in file "system_core.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 6
  1633 ;; This function calls:
  1634 ;;		_TMR0_StopTimer
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text19
  1641   000C84                     __ptext19:
  1642                           	callstack 0
  1643   000C84                     _Disarm_System:
  1644                           	callstack 24
  1645   000C84                     
  1646                           ;system_core.c: 21:     IOCCPbits.IOCCP2 = 0;
  1647   000C84  010F               	movlb	15	; () banked
  1648   000C86  951C               	bcf	28,2,b	;volatile
  1649                           
  1650                           ;system_core.c: 23:     PIE0bits.TMR0IE = 0;
  1651   000C88  010E               	movlb	14	; () banked
  1652   000C8A  9BC2               	bcf	194,5,b	;volatile
  1653   000C8C                     
  1654                           ; BSR set to: 14
  1655                           ;system_core.c: 24:     TMR0_StopTimer();
  1656   000C8C  EC8E  F006         	call	_TMR0_StopTimer	;wreg free
  1657   000C90                     
  1658                           ;system_core.c: 26:     mainFlags.SystemDisarmed_ContinuousSleep = 1;
  1659   000C90  8421               	bsf	_mainFlags^0,2,c
  1660   000C92                     
  1661                           ;system_core.c: 27:     mainFlags.SystemDisarmed = 0;
  1662   000C92  9221               	bcf	_mainFlags^0,1,c
  1663   000C94  0012               	return		;funcret
  1664   000C96                     __end_of_Disarm_System:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _TMR0_StopTimer *****************
  1668 ;; Defined at:
  1669 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		None
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 5
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_Disarm_System
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text20
  1698   000D1C                     __ptext20:
  1699                           	callstack 0
  1700   000D1C                     _TMR0_StopTimer:
  1701                           	callstack 24
  1702   000D1C                     
  1703                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  1704   000D1C  9ED5               	bcf	213,7,c	;volatile
  1705   000D1E  0012               	return		;funcret
  1706   000D20                     __end_of_TMR0_StopTimer:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _Arm_System *****************
  1710 ;; Defined at:
  1711 ;;		line 8 in file "system_core.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		None
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 5
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text21
  1740   000C96                     __ptext21:
  1741                           	callstack 0
  1742   000C96                     _Arm_System:
  1743                           	callstack 25
  1744   000C96  848A               	bsf	138,2,c	;volatile
  1745   000C98                     
  1746                           ;system_core.c: 11:     IOCCPbits.IOCCP2 = 1;
  1747   000C98  010F               	movlb	15	; () banked
  1748   000C9A  851C               	bsf	28,2,b	;volatile
  1749                           
  1750                           ;system_core.c: 12:     PIE0bits.TMR0IE = 1;
  1751   000C9C  010E               	movlb	14	; () banked
  1752   000C9E  8BC2               	bsf	194,5,b	;volatile
  1753                           
  1754                           ;system_core.c: 14:     mainFlags.SystemArmed = 0;
  1755   000CA0  9021               	bcf	_mainFlags^0,0,c
  1756                           
  1757                           ;system_core.c: 15:     mainFlags.SystemDisarmed_ContinuousSleep = 0;
  1758   000CA2  9421               	bcf	_mainFlags^0,2,c
  1759   000CA4                     
  1760                           ; BSR set to: 14
  1761   000CA4  0012               	return		;funcret
  1762   000CA6                     __end_of_Arm_System:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _INTERRUPT_InterruptManager *****************
  1766 ;; Defined at:
  1767 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        4 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 4
  1788 ;; This function calls:
  1789 ;;		NULL
  1790 ;;		_EUSART_Receive_ISR
  1791 ;;		_EUSART_Transmit_ISR
  1792 ;;		_PIN_MANAGER_IOC
  1793 ;;		_TMR0_ISR
  1794 ;; This function is called by:
  1795 ;;		Interrupt level 2
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	intcode
  1800   000008                     __pintcode:
  1801                           	callstack 0
  1802   000008                     _INTERRUPT_InterruptManager:
  1803                           	callstack 23
  1804                           
  1805                           ; BSR set to: 14
  1806                           ;incstack = 0
  1807   000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1808   00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
  1809   00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1810   000012  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1811   000016  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1812   00001A                     
  1813                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  1814   00001A  010E               	movlb	14	; () banked
  1815   00001C  ABC2               	btfss	194,5,b	;volatile
  1816   00001E  EF13  F000         	goto	i2u66_41
  1817   000022  EF15  F000         	goto	i2u66_40
  1818   000026                     i2u66_41:
  1819   000026  EF20  F000         	goto	i2l185
  1820   00002A                     i2u66_40:
  1821   00002A                     
  1822                           ; BSR set to: 14
  1823   00002A  ABCA               	btfss	202,5,b	;volatile
  1824   00002C  EF1A  F000         	goto	i2u67_41
  1825   000030  EF1C  F000         	goto	i2u67_40
  1826   000034                     i2u67_41:
  1827   000034  EF20  F000         	goto	i2l185
  1828   000038                     i2u67_40:
  1829   000038                     
  1830                           ; BSR set to: 14
  1831                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1832   000038  EC81  F006         	call	_TMR0_ISR	;wreg free
  1833                           
  1834                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1835   00003C  EF73  F000         	goto	i2l195
  1836   000040                     i2l185:
  1837                           
  1838                           ; BSR set to: 14
  1839   000040  A9C2               	btfss	194,4,b	;volatile
  1840   000042  EF25  F000         	goto	i2u68_41
  1841   000046  EF27  F000         	goto	i2u68_40
  1842   00004A                     i2u68_41:
  1843   00004A  EF32  F000         	goto	i2l187
  1844   00004E                     i2u68_40:
  1845   00004E                     
  1846                           ; BSR set to: 14
  1847   00004E  A9CA               	btfss	202,4,b	;volatile
  1848   000050  EF2C  F000         	goto	i2u69_41
  1849   000054  EF2E  F000         	goto	i2u69_40
  1850   000058                     i2u69_41:
  1851   000058  EF32  F000         	goto	i2l187
  1852   00005C                     i2u69_40:
  1853   00005C                     
  1854                           ; BSR set to: 14
  1855                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  1856   00005C  ECA3  F005         	call	_PIN_MANAGER_IOC	;wreg free
  1857                           
  1858                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  1859   000060  EF73  F000         	goto	i2l195
  1860   000064                     i2l187:
  1861                           
  1862                           ; BSR set to: 14
  1863   000064  ACF2               	btfss	242,6,c	;volatile
  1864   000066  EF37  F000         	goto	i2u70_41
  1865   00006A  EF39  F000         	goto	i2u70_40
  1866   00006E                     i2u70_41:
  1867   00006E  EF73  F000         	goto	i2l194
  1868   000072                     i2u70_40:
  1869   000072                     
  1870                           ; BSR set to: 14
  1871                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  1872   000072  A9C5               	btfss	197,4,b	;volatile
  1873   000074  EF3E  F000         	goto	i2u71_41
  1874   000078  EF40  F000         	goto	i2u71_40
  1875   00007C                     i2u71_41:
  1876   00007C  EF56  F000         	goto	i2l190
  1877   000080                     i2u71_40:
  1878   000080                     
  1879                           ; BSR set to: 14
  1880   000080  A9CD               	btfss	205,4,b	;volatile
  1881   000082  EF45  F000         	goto	i2u72_41
  1882   000086  EF47  F000         	goto	i2u72_40
  1883   00008A                     i2u72_41:
  1884   00008A  EF56  F000         	goto	i2l190
  1885   00008E                     i2u72_40:
  1886   00008E                     
  1887                           ; BSR set to: 14
  1888                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_TxDefaultInterruptHandler();
  1889   00008E  D802               	call	i2u73_48
  1890   000090  EF54  F000         	goto	i2u73_49
  1891   000094                     i2u73_48:
  1892   000094  0005               	push	
  1893   000096  6EFA               	movwf	pclath,c
  1894   000098  502C               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  1895   00009A  6EFD               	movwf	tosl,c
  1896   00009C  502D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  1897   00009E  6EFE               	movwf	tosh,c
  1898   0000A0  50F8               	movf	tblptru,w,c
  1899   0000A2  6EFF               	movwf	tosu,c
  1900   0000A4  50FA               	movf	pclath,w,c
  1901   0000A6  0012               	return		;indir
  1902   0000A8                     i2u73_49:
  1903                           
  1904                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  1905   0000A8  EF73  F000         	goto	i2l195
  1906   0000AC                     i2l190:
  1907                           
  1908                           ; BSR set to: 14
  1909   0000AC  ABC5               	btfss	197,5,b	;volatile
  1910   0000AE  EF5B  F000         	goto	i2u74_41
  1911   0000B2  EF5D  F000         	goto	i2u74_40
  1912   0000B6                     i2u74_41:
  1913   0000B6  EF73  F000         	goto	i2l194
  1914   0000BA                     i2u74_40:
  1915   0000BA                     
  1916                           ; BSR set to: 14
  1917   0000BA  ABCD               	btfss	205,5,b	;volatile
  1918   0000BC  EF62  F000         	goto	i2u75_41
  1919   0000C0  EF64  F000         	goto	i2u75_40
  1920   0000C4                     i2u75_41:
  1921   0000C4  EF73  F000         	goto	i2l194
  1922   0000C8                     i2u75_40:
  1923   0000C8                     
  1924                           ; BSR set to: 14
  1925                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  1926   0000C8  D802               	call	i2u76_48
  1927   0000CA  EF71  F000         	goto	i2u76_49
  1928   0000CE                     i2u76_48:
  1929   0000CE  0005               	push	
  1930   0000D0  6EFA               	movwf	pclath,c
  1931   0000D2  502A               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  1932   0000D4  6EFD               	movwf	tosl,c
  1933   0000D6  502B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  1934   0000D8  6EFE               	movwf	tosh,c
  1935   0000DA  50F8               	movf	tblptru,w,c
  1936   0000DC  6EFF               	movwf	tosu,c
  1937   0000DE  50FA               	movf	pclath,w,c
  1938   0000E0  0012               	return		;indir
  1939   0000E2                     i2u76_49:
  1940                           
  1941                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  1942   0000E2  EF73  F000         	goto	i2l195
  1943   0000E6                     i2l194:
  1944   0000E6                     i2l195:
  1945   0000E6  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1946   0000EA  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1947   0000EE  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1948   0000F2  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1949   0000F6  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1950   0000F8  0011               	retfie		f
  1951   0000FA                     __end_of_INTERRUPT_InterruptManager:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _TMR0_ISR *****************
  1955 ;; Defined at:
  1956 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 3
  1977 ;; This function calls:
  1978 ;;		_TMR0_CallBack
  1979 ;; This function is called by:
  1980 ;;		_INTERRUPT_InterruptManager
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text23
  1985   000D02                     __ptext23:
  1986                           	callstack 0
  1987   000D02                     _TMR0_ISR:
  1988                           	callstack 23
  1989   000D02                     
  1990                           ;mcc_generated_files/tmr0.c: 125:     PIR0bits.TMR0IF = 0;
  1991   000D02  010E               	movlb	14	; () banked
  1992   000D04  9BCA               	bcf	202,5,b	;volatile
  1993   000D06                     
  1994                           ; BSR set to: 14
  1995                           ;mcc_generated_files/tmr0.c: 128:     TMR0_CallBack();
  1996   000D06  EC8C  F005         	call	_TMR0_CallBack	;wreg free
  1997   000D0A  0012               	return		;funcret
  1998   000D0C                     __end_of_TMR0_ISR:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _TMR0_CallBack *****************
  2002 ;; Defined at:
  2003 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2017 ;;      Params:         0       0       0       0       0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2021 ;;Total ram usage:        0 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 2
  2024 ;; This function calls:
  2025 ;;		NULL
  2026 ;;		_TMR0_DefaultInterruptHandler
  2027 ;; This function is called by:
  2028 ;;		_TMR0_ISR
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text24
  2033   000B18                     __ptext24:
  2034                           	callstack 0
  2035   000B18                     _TMR0_CallBack:
  2036                           	callstack 23
  2037   000B18                     
  2038                           ;mcc_generated_files/tmr0.c: 137:     if(TMR0_InterruptHandler)
  2039   000B18  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2040   000B1A  1029               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2041   000B1C  B4D8               	btfsc	status,2,c
  2042   000B1E  EF93  F005         	goto	i2u49_41
  2043   000B22  EF95  F005         	goto	i2u49_40
  2044   000B26                     i2u49_41:
  2045   000B26  EFA2  F005         	goto	i2l244
  2046   000B2A                     i2u49_40:
  2047   000B2A                     
  2048                           ;mcc_generated_files/tmr0.c: 138:     {;mcc_generated_files/tmr0.c: 139:         TMR0_In
      +                          terruptHandler();
  2049   000B2A  D802               	call	i2u50_48
  2050   000B2C  EFA2  F005         	goto	i2u50_49
  2051   000B30                     i2u50_48:
  2052   000B30  0005               	push	
  2053   000B32  6EFA               	movwf	pclath,c
  2054   000B34  5028               	movf	_TMR0_InterruptHandler^0,w,c
  2055   000B36  6EFD               	movwf	tosl,c
  2056   000B38  5029               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2057   000B3A  6EFE               	movwf	tosh,c
  2058   000B3C  50F8               	movf	tblptru,w,c
  2059   000B3E  6EFF               	movwf	tosu,c
  2060   000B40  50FA               	movf	pclath,w,c
  2061   000B42  0012               	return		;indir
  2062   000B44                     i2u50_49:
  2063   000B44                     i2l244:
  2064   000B44  0012               	return		;funcret
  2065   000B46                     __end_of_TMR0_CallBack:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2069 ;; Defined at:
  2070 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 1
  2091 ;; This function calls:
  2092 ;;		i2_TMR0_StopTimer
  2093 ;; This function is called by:
  2094 ;;		_TMR0_Initialize
  2095 ;;		_TMR0_CallBack
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text25
  2100   000CA6                     __ptext25:
  2101                           	callstack 0
  2102   000CA6                     _TMR0_DefaultInterruptHandler:
  2103                           	callstack 23
  2104   000CA6  9685               	bcf	133,3,c	;volatile
  2105   000CA8                     
  2106                           ;mcc_generated_files/tmr0.c: 152:     TMR0_StopTimer();
  2107   000CA8  EC90  F006         	call	i2_TMR0_StopTimer	;wreg free
  2108   000CAC                     
  2109                           ;mcc_generated_files/tmr0.c: 153:     PIE0bits.IOCIE = 1;
  2110   000CAC  010E               	movlb	14	; () banked
  2111   000CAE  89C2               	bsf	194,4,b	;volatile
  2112   000CB0                     
  2113                           ; BSR set to: 14
  2114   000CB0  0012               	return		;funcret
  2115   000CB2                     __end_of_TMR0_DefaultInterruptHandler:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function i2_TMR0_StopTimer *****************
  2119 ;; Defined at:
  2120 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		None
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_TMR0_DefaultInterruptHandler
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text26
  2148   000D20                     __ptext26:
  2149                           	callstack 0
  2150   000D20                     i2_TMR0_StopTimer:
  2151                           	callstack 23
  2152   000D20                     
  2153                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
  2154   000D20  9ED5               	bcf	213,7,c	;volatile
  2155   000D22  0012               	return		;funcret
  2156   000D24                     __end_ofi2_TMR0_StopTimer:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _PIN_MANAGER_IOC *****************
  2160 ;; Defined at:
  2161 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 3
  2182 ;; This function calls:
  2183 ;;		_IOCCF2_ISR
  2184 ;;		_IOCCF5_ISR
  2185 ;; This function is called by:
  2186 ;;		_INTERRUPT_InterruptManager
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text27
  2191   000B46                     __ptext27:
  2192                           	callstack 0
  2193   000B46                     _PIN_MANAGER_IOC:
  2194                           	callstack 23
  2195   000B46                     
  2196                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF2 == 1)
  2197   000B46  010F               	movlb	15	; () banked
  2198   000B48  A51A               	btfss	26,2,b	;volatile
  2199   000B4A  EFA9  F005         	goto	i2u55_41
  2200   000B4E  EFAB  F005         	goto	i2u55_40
  2201   000B52                     i2u55_41:
  2202   000B52  EFAD  F005         	goto	i2l1640
  2203   000B56                     i2u55_40:
  2204   000B56                     
  2205                           ; BSR set to: 15
  2206                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF2_ISR();
  2207   000B56  EC73  F005         	call	_IOCCF2_ISR	;wreg free
  2208   000B5A                     i2l1640:
  2209                           
  2210                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF5 == 1)
  2211   000B5A  010F               	movlb	15	; () banked
  2212   000B5C  AB1A               	btfss	26,5,b	;volatile
  2213   000B5E  EFB3  F005         	goto	i2u56_41
  2214   000B62  EFB5  F005         	goto	i2u56_40
  2215   000B66                     i2u56_41:
  2216   000B66  EFB7  F005         	goto	i2l133
  2217   000B6A                     i2u56_40:
  2218   000B6A                     
  2219                           ; BSR set to: 15
  2220                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCCF5_ISR();
  2221   000B6A  EC5A  F005         	call	_IOCCF5_ISR	;wreg free
  2222   000B6E                     i2l133:
  2223   000B6E  0012               	return		;funcret
  2224   000B70                     __end_of_PIN_MANAGER_IOC:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _IOCCF5_ISR *****************
  2228 ;; Defined at:
  2229 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 1
  2250 ;; This function calls:
  2251 ;;		NULL
  2252 ;;		_IOCCF5_DefaultInterruptHandler
  2253 ;; This function is called by:
  2254 ;;		_PIN_MANAGER_IOC
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text28
  2259   000AB4                     __ptext28:
  2260                           	callstack 0
  2261   000AB4                     _IOCCF5_ISR:
  2262                           	callstack 24
  2263   000AB4                     
  2264                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCCF5_InterruptHandler)
  2265   000AB4  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2266   000AB6  102F               	iorwf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2267   000AB8  B4D8               	btfsc	status,2,c
  2268   000ABA  EF61  F005         	goto	i2u47_41
  2269   000ABE  EF63  F005         	goto	i2u47_40
  2270   000AC2                     i2u47_41:
  2271   000AC2  EF70  F005         	goto	i2l1590
  2272   000AC6                     i2u47_40:
  2273   000AC6                     
  2274                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCCF5_InterruptHandler();
  2275   000AC6  D802               	call	i2u48_48
  2276   000AC8  EF70  F005         	goto	i2u48_49
  2277   000ACC                     i2u48_48:
  2278   000ACC  0005               	push	
  2279   000ACE  6EFA               	movwf	pclath,c
  2280   000AD0  502E               	movf	_IOCCF5_InterruptHandler^0,w,c
  2281   000AD2  6EFD               	movwf	tosl,c
  2282   000AD4  502F               	movf	(_IOCCF5_InterruptHandler+1)^0,w,c
  2283   000AD6  6EFE               	movwf	tosh,c
  2284   000AD8  50F8               	movf	tblptru,w,c
  2285   000ADA  6EFF               	movwf	tosu,c
  2286   000ADC  50FA               	movf	pclath,w,c
  2287   000ADE  0012               	return		;indir
  2288   000AE0                     i2u48_49:
  2289   000AE0                     i2l1590:
  2290                           
  2291                           ;mcc_generated_files/pin_manager.c: 201:     IOCCFbits.IOCCF5 = 0;
  2292   000AE0  010F               	movlb	15	; () banked
  2293   000AE2  9B1A               	bcf	26,5,b	;volatile
  2294   000AE4                     
  2295                           ; BSR set to: 15
  2296   000AE4  0012               	return		;funcret
  2297   000AE6                     __end_of_IOCCF5_ISR:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  2301 ;; Defined at:
  2302 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		None
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_PIN_MANAGER_Initialize
  2326 ;;		_IOCCF5_ISR
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text29
  2331   000D28                     __ptext29:
  2332                           	callstack 0
  2333   000D28                     _IOCCF5_DefaultInterruptHandler:
  2334                           	callstack 24
  2335   000D28  0012               	return		;funcret
  2336   000D2A                     __end_of_IOCCF5_DefaultInterruptHandler:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _IOCCF2_ISR *****************
  2340 ;; Defined at:
  2341 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 2
  2362 ;; This function calls:
  2363 ;;		NULL
  2364 ;;		_movement_Detect_Interrupt
  2365 ;; This function is called by:
  2366 ;;		_PIN_MANAGER_IOC
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text30
  2371   000AE6                     __ptext30:
  2372                           	callstack 0
  2373   000AE6                     _IOCCF2_ISR:
  2374                           	callstack 23
  2375   000AE6                     
  2376                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCCF2_InterruptHandler)
  2377   000AE6  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2378   000AE8  1031               	iorwf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2379   000AEA  B4D8               	btfsc	status,2,c
  2380   000AEC  EF7A  F005         	goto	i2u45_41
  2381   000AF0  EF7C  F005         	goto	i2u45_40
  2382   000AF4                     i2u45_41:
  2383   000AF4  EF89  F005         	goto	i2l1584
  2384   000AF8                     i2u45_40:
  2385   000AF8                     
  2386                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCCF2_InterruptHandler();
  2387   000AF8  D802               	call	i2u46_48
  2388   000AFA  EF89  F005         	goto	i2u46_49
  2389   000AFE                     i2u46_48:
  2390   000AFE  0005               	push	
  2391   000B00  6EFA               	movwf	pclath,c
  2392   000B02  5030               	movf	_IOCCF2_InterruptHandler^0,w,c
  2393   000B04  6EFD               	movwf	tosl,c
  2394   000B06  5031               	movf	(_IOCCF2_InterruptHandler+1)^0,w,c
  2395   000B08  6EFE               	movwf	tosh,c
  2396   000B0A  50F8               	movf	tblptru,w,c
  2397   000B0C  6EFF               	movwf	tosu,c
  2398   000B0E  50FA               	movf	pclath,w,c
  2399   000B10  0012               	return		;indir
  2400   000B12                     i2u46_49:
  2401   000B12                     i2l1584:
  2402                           
  2403                           ;mcc_generated_files/pin_manager.c: 171:     IOCCFbits.IOCCF2 = 0;
  2404   000B12  010F               	movlb	15	; () banked
  2405   000B14  951A               	bcf	26,2,b	;volatile
  2406   000B16                     
  2407                           ; BSR set to: 15
  2408   000B16  0012               	return		;funcret
  2409   000B18                     __end_of_IOCCF2_ISR:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _movement_Detect_Interrupt *****************
  2413 ;; Defined at:
  2414 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 1
  2435 ;; This function calls:
  2436 ;;		_TMR0_StartTimer
  2437 ;; This function is called by:
  2438 ;;		_PIN_MANAGER_Initialize
  2439 ;;		_IOCCF2_ISR
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text31
  2444   000B70                     __ptext31:
  2445                           	callstack 0
  2446   000B70                     _movement_Detect_Interrupt:
  2447                           	callstack 23
  2448   000B70                     
  2449                           ;mcc_generated_files/pin_manager.c: 220:     ++sensorDebounce;
  2450   000B70  2A20               	incf	_sensorDebounce^0,f,c
  2451   000B72                     
  2452                           ;mcc_generated_files/pin_manager.c: 222:     if(sensorDebounce == 2)
  2453   000B72  0E02               	movlw	2
  2454   000B74  1820               	xorwf	_sensorDebounce^0,w,c
  2455   000B76  A4D8               	btfss	status,2,c
  2456   000B78  EFC0  F005         	goto	i2u43_41
  2457   000B7C  EFC2  F005         	goto	i2u43_40
  2458   000B80                     i2u43_41:
  2459   000B80  EFCA  F005         	goto	i2l1476
  2460   000B84                     i2u43_40:
  2461   000B84  8685               	bsf	133,3,c	;volatile
  2462   000B86                     
  2463                           ;mcc_generated_files/pin_manager.c: 225:         sensorDebounce = 0;
  2464   000B86  0E00               	movlw	0
  2465   000B88  6E20               	movwf	_sensorDebounce^0,c
  2466   000B8A                     
  2467                           ;mcc_generated_files/pin_manager.c: 227:         PIE0bits.IOCIE = 0;
  2468   000B8A  010E               	movlb	14	; () banked
  2469   000B8C  99C2               	bcf	194,4,b	;volatile
  2470   000B8E                     
  2471                           ; BSR set to: 14
  2472                           ;mcc_generated_files/pin_manager.c: 228:         TMR0_StartTimer();
  2473   000B8E  EC92  F006         	call	_TMR0_StartTimer	;wreg free
  2474   000B92                     
  2475                           ;mcc_generated_files/pin_manager.c: 230:         mainFlags.System_MotionFlag = 1;
  2476   000B92  8621               	bsf	_mainFlags^0,3,c
  2477   000B94                     i2l1476:
  2478                           
  2479                           ;mcc_generated_files/pin_manager.c: 233:     IOCCFbits.IOCCF2 = 0;
  2480   000B94  010F               	movlb	15	; () banked
  2481   000B96  951A               	bcf	26,2,b	;volatile
  2482   000B98                     
  2483                           ; BSR set to: 15
  2484   000B98  0012               	return		;funcret
  2485   000B9A                     __end_of_movement_Detect_Interrupt:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _TMR0_StartTimer *****************
  2489 ;; Defined at:
  2490 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		None
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_movement_Detect_Interrupt
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text32
  2518   000D24                     __ptext32:
  2519                           	callstack 0
  2520   000D24                     _TMR0_StartTimer:
  2521                           	callstack 23
  2522   000D24                     
  2523                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
  2524   000D24  8ED5               	bsf	213,7,c	;volatile
  2525   000D26  0012               	return		;funcret
  2526   000D28                     __end_of_TMR0_StartTimer:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _EUSART_Transmit_ISR *****************
  2530 ;; Defined at:
  2531 ;;		line 197 in file "mcc_generated_files/eusart.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_EUSART_Initialize
  2555 ;;		_INTERRUPT_InterruptManager
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text33
  2560   000A76                     __ptext33:
  2561                           	callstack 0
  2562   000A76                     _EUSART_Transmit_ISR:
  2563                           	callstack 26
  2564   000A76                     
  2565                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  2566   000A76  0E08               	movlw	8
  2567   000A78  601D               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  2568   000A7A  EF41  F005         	goto	i2u58_41
  2569   000A7E  EF43  F005         	goto	i2u58_40
  2570   000A82                     i2u58_41:
  2571   000A82  EF57  F005         	goto	i2l422
  2572   000A86                     i2u58_40:
  2573   000A86                     
  2574                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  2575   000A86  501E               	movf	_eusartTxTail^0,w,c
  2576   000A88  0F11               	addlw	low _eusartTxBuffer
  2577   000A8A  6ED9               	movwf	fsr2l,c
  2578   000A8C  6ADA               	clrf	fsr2h,c
  2579   000A8E  50DF               	movf	indf2,w,c
  2580   000A90  6E9A               	movwf	154,c	;volatile
  2581   000A92  2A1E               	incf	_eusartTxTail^0,f,c	;volatile
  2582   000A94                     
  2583                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2584   000A94  0E07               	movlw	7
  2585   000A96  641E               	cpfsgt	_eusartTxTail^0,c	;volatile
  2586   000A98  EF50  F005         	goto	i2u59_41
  2587   000A9C  EF52  F005         	goto	i2u59_40
  2588   000AA0                     i2u59_41:
  2589   000AA0  EF54  F005         	goto	i2l1672
  2590   000AA4                     i2u59_40:
  2591   000AA4                     
  2592                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  2593   000AA4  0E00               	movlw	0
  2594   000AA6  6E1E               	movwf	_eusartTxTail^0,c	;volatile
  2595   000AA8                     i2l1672:
  2596                           
  2597                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  2598   000AA8  2A1D               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  2599                           
  2600                           ;mcc_generated_files/eusart.c: 209:     }
  2601   000AAA  EF59  F005         	goto	i2l425
  2602   000AAE                     i2l422:
  2603                           
  2604                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          3bits.TXIE = 0;
  2605   000AAE  010E               	movlb	14	; () banked
  2606   000AB0  99C5               	bcf	197,4,b	;volatile
  2607   000AB2                     i2l425:
  2608   000AB2  0012               	return		;funcret
  2609   000AB4                     __end_of_EUSART_Transmit_ISR:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _EUSART_Receive_ISR *****************
  2613 ;; Defined at:
  2614 ;;		line 216 in file "mcc_generated_files/eusart.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 2
  2635 ;; This function calls:
  2636 ;;		NULL
  2637 ;;		_EUSART_DefaultErrorHandler
  2638 ;;		_EUSART_DefaultFramingErrorHandler
  2639 ;;		_EUSART_DefaultOverrunErrorHandler
  2640 ;;		_EUSART_RxDataHandler
  2641 ;; This function is called by:
  2642 ;;		_EUSART_Initialize
  2643 ;;		_INTERRUPT_InterruptManager
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text34
  2648   000802                     __ptext34:
  2649                           	callstack 0
  2650   000802                     _EUSART_Receive_ISR:
  2651                           	callstack 24
  2652   000802                     
  2653                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  2654   000802  501C               	movf	_eusartRxHead^0,w,c
  2655   000804  0F01               	addlw	low _eusartRxStatusBuffer
  2656   000806  6ED9               	movwf	fsr2l,c
  2657   000808  6ADA               	clrf	fsr2h,c
  2658   00080A  6ADF               	clrf	indf2,c
  2659   00080C                     
  2660                           ;mcc_generated_files/eusart.c: 221:     if(RC1STAbits.FERR){
  2661   00080C  A49D               	btfss	157,2,c	;volatile
  2662   00080E  EF0B  F004         	goto	i2u60_41
  2663   000812  EF0D  F004         	goto	i2u60_40
  2664   000816                     i2u60_41:
  2665   000816  EF1F  F004         	goto	i2l1682
  2666   00081A                     i2u60_40:
  2667   00081A                     
  2668                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  2669   00081A  501C               	movf	_eusartRxHead^0,w,c
  2670   00081C  0F01               	addlw	low _eusartRxStatusBuffer
  2671   00081E  6ED9               	movwf	fsr2l,c
  2672   000820  6ADA               	clrf	fsr2h,c
  2673   000822  82DF               	bsf	indf2,1,c
  2674   000824                     
  2675                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  2676   000824  D802               	call	i2u61_48
  2677   000826  EF1F  F004         	goto	i2u61_49
  2678   00082A                     i2u61_48:
  2679   00082A  0005               	push	
  2680   00082C  6EFA               	movwf	pclath,c
  2681   00082E  5026               	movf	_EUSART_FramingErrorHandler^0,w,c
  2682   000830  6EFD               	movwf	tosl,c
  2683   000832  5027               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  2684   000834  6EFE               	movwf	tosh,c
  2685   000836  50F8               	movf	tblptru,w,c
  2686   000838  6EFF               	movwf	tosu,c
  2687   00083A  50FA               	movf	pclath,w,c
  2688   00083C  0012               	return		;indir
  2689   00083E                     i2u61_49:
  2690   00083E                     i2l1682:
  2691                           
  2692                           ;mcc_generated_files/eusart.c: 226:     if(RC1STAbits.OERR){
  2693   00083E  A29D               	btfss	157,1,c	;volatile
  2694   000840  EF24  F004         	goto	i2u62_41
  2695   000844  EF26  F004         	goto	i2u62_40
  2696   000848                     i2u62_41:
  2697   000848  EF38  F004         	goto	i2l1688
  2698   00084C                     i2u62_40:
  2699   00084C                     
  2700                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  2701   00084C  501C               	movf	_eusartRxHead^0,w,c
  2702   00084E  0F01               	addlw	low _eusartRxStatusBuffer
  2703   000850  6ED9               	movwf	fsr2l,c
  2704   000852  6ADA               	clrf	fsr2h,c
  2705   000854  84DF               	bsf	indf2,2,c
  2706   000856                     
  2707                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  2708   000856  D802               	call	i2u63_48
  2709   000858  EF38  F004         	goto	i2u63_49
  2710   00085C                     i2u63_48:
  2711   00085C  0005               	push	
  2712   00085E  6EFA               	movwf	pclath,c
  2713   000860  5024               	movf	_EUSART_OverrunErrorHandler^0,w,c
  2714   000862  6EFD               	movwf	tosl,c
  2715   000864  5025               	movf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  2716   000866  6EFE               	movwf	tosh,c
  2717   000868  50F8               	movf	tblptru,w,c
  2718   00086A  6EFF               	movwf	tosu,c
  2719   00086C  50FA               	movf	pclath,w,c
  2720   00086E  0012               	return		;indir
  2721   000870                     i2u63_49:
  2722   000870                     i2l1688:
  2723                           
  2724                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  2725   000870  501C               	movf	_eusartRxHead^0,w,c
  2726   000872  0F01               	addlw	low _eusartRxStatusBuffer
  2727   000874  6ED9               	movwf	fsr2l,c
  2728   000876  6ADA               	clrf	fsr2h,c
  2729   000878  50DF               	movf	indf2,w,c
  2730   00087A  B4D8               	btfsc	status,2,c
  2731   00087C  EF42  F004         	goto	i2u64_41
  2732   000880  EF44  F004         	goto	i2u64_40
  2733   000884                     i2u64_41:
  2734   000884  EF53  F004         	goto	i2l1692
  2735   000888                     i2u64_40:
  2736   000888                     
  2737                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  2738   000888  D802               	call	i2u65_48
  2739   00088A  EF51  F004         	goto	i2u65_49
  2740   00088E                     i2u65_48:
  2741   00088E  0005               	push	
  2742   000890  6EFA               	movwf	pclath,c
  2743   000892  5022               	movf	_EUSART_ErrorHandler^0,w,c
  2744   000894  6EFD               	movwf	tosl,c
  2745   000896  5023               	movf	(_EUSART_ErrorHandler+1)^0,w,c
  2746   000898  6EFE               	movwf	tosh,c
  2747   00089A  50F8               	movf	tblptru,w,c
  2748   00089C  6EFF               	movwf	tosu,c
  2749   00089E  50FA               	movf	pclath,w,c
  2750   0008A0  0012               	return		;indir
  2751   0008A2                     i2u65_49:
  2752                           
  2753                           ;mcc_generated_files/eusart.c: 233:     } else {
  2754   0008A2  EF55  F004         	goto	i2l432
  2755   0008A6                     i2l1692:
  2756                           
  2757                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  2758   0008A6  ECCD  F005         	call	_EUSART_RxDataHandler	;wreg free
  2759   0008AA                     i2l432:
  2760   0008AA  0012               	return		;funcret
  2761   0008AC                     __end_of_EUSART_Receive_ISR:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  2765 ;; Defined at:
  2766 ;;		line 252 in file "mcc_generated_files/eusart.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		None
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_EUSART_Initialize
  2790 ;;		_EUSART_Receive_ISR
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text35
  2795   000D0C                     __ptext35:
  2796                           	callstack 0
  2797   000D0C                     _EUSART_DefaultOverrunErrorHandler:
  2798                           	callstack 25
  2799   000D0C                     
  2800                           ;mcc_generated_files/eusart.c: 255:     RC1STAbits.CREN = 0;
  2801   000D0C  989D               	bcf	157,4,c	;volatile
  2802                           
  2803                           ;mcc_generated_files/eusart.c: 256:     RC1STAbits.CREN = 1;
  2804   000D0E  889D               	bsf	157,4,c	;volatile
  2805   000D10  0012               	return		;funcret
  2806   000D12                     __end_of_EUSART_DefaultOverrunErrorHandler:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  2810 ;; Defined at:
  2811 ;;		line 250 in file "mcc_generated_files/eusart.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		None
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_EUSART_Initialize
  2835 ;;		_EUSART_Receive_ISR
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text36
  2840   000D2A                     __ptext36:
  2841                           	callstack 0
  2842   000D2A                     _EUSART_DefaultFramingErrorHandler:
  2843                           	callstack 25
  2844   000D2A  0012               	return		;funcret
  2845   000D2C                     __end_of_EUSART_DefaultFramingErrorHandler:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _EUSART_DefaultErrorHandler *****************
  2849 ;; Defined at:
  2850 ;;		line 260 in file "mcc_generated_files/eusart.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 1
  2871 ;; This function calls:
  2872 ;;		_EUSART_RxDataHandler
  2873 ;; This function is called by:
  2874 ;;		_EUSART_Initialize
  2875 ;;		_EUSART_Receive_ISR
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text37
  2880   000D12                     __ptext37:
  2881                           	callstack 0
  2882   000D12                     _EUSART_DefaultErrorHandler:
  2883                           	callstack 24
  2884   000D12                     
  2885                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  2886   000D12  ECCD  F005         	call	_EUSART_RxDataHandler	;wreg free
  2887   000D16  0012               	return		;funcret
  2888   000D18                     __end_of_EUSART_DefaultErrorHandler:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _EUSART_RxDataHandler *****************
  2892 ;; Defined at:
  2893 ;;		line 240 in file "mcc_generated_files/eusart.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_EUSART_Receive_ISR
  2917 ;;		_EUSART_DefaultErrorHandler
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text38
  2922   000B9A                     __ptext38:
  2923                           	callstack 0
  2924   000B9A                     _EUSART_RxDataHandler:
  2925                           	callstack 25
  2926   000B9A                     
  2927                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  2928   000B9A  501C               	movf	_eusartRxHead^0,w,c
  2929   000B9C  0F09               	addlw	low _eusartRxBuffer
  2930   000B9E  6ED9               	movwf	fsr2l,c
  2931   000BA0  6ADA               	clrf	fsr2h,c
  2932   000BA2  CF99 FFDF          	movff	3993,indf2	;volatile
  2933   000BA6  2A1C               	incf	_eusartRxHead^0,f,c	;volatile
  2934   000BA8                     
  2935                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2936   000BA8  0E07               	movlw	7
  2937   000BAA  641C               	cpfsgt	_eusartRxHead^0,c	;volatile
  2938   000BAC  EFDA  F005         	goto	i2u44_41
  2939   000BB0  EFDC  F005         	goto	i2u44_40
  2940   000BB4                     i2u44_41:
  2941   000BB4  EFDE  F005         	goto	i2l1502
  2942   000BB8                     i2u44_40:
  2943   000BB8                     
  2944                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  2945   000BB8  0E00               	movlw	0
  2946   000BBA  6E1C               	movwf	_eusartRxHead^0,c	;volatile
  2947   000BBC                     i2l1502:
  2948                           
  2949                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  2950   000BBC  2A1A               	incf	_eusartRxCount^0,f,c	;volatile
  2951   000BBE  0012               	return		;funcret
  2952   000BC0                     __end_of_EUSART_RxDataHandler:
  2953                           	callstack 0
  2954                           
  2955                           	psect	smallconst
  2956   000800                     __psmallconst:
  2957                           	callstack 0
  2958   000800  00                 	db	0
  2959   000801  00                 	db	0	; dummy byte at the end
  2960   000000                     
  2961                           	psect	text39
  2962   000000                     __ptext39:
  2963                           	callstack 0
  2964   000000                     
  2965                           	psect	rparam
  2966   000000                     
  2967                           	psect	temp
  2968   000038                     btemp:
  2969                           	callstack 0
  2970   000038                     	ds	1
  2971   000000                     int$flags	set	btemp
  2972   000000                     wtemp8	set	btemp+1
  2973   000000                     ttemp5	set	btemp+1
  2974   000000                     ttemp6	set	btemp+4
  2975   000000                     ttemp7	set	btemp+8
  2976                           
  2977                           	psect	config
  2978                           
  2979                           ;Config register CONFIG1L @ 0x300000
  2980                           ;	External Oscillator mode Selection bits
  2981                           ;	FEXTOSC = OFF, Oscillator not enabled
  2982                           ;	Power-up default value for COSC bits
  2983                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  2984   300000                     	org	3145728
  2985   300000  EC                 	db	236
  2986                           
  2987                           ;Config register CONFIG1H @ 0x300001
  2988                           ;	Clock Out Enable bit
  2989                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2990                           ;	Clock Switch Enable bit
  2991                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2992                           ;	Fail-Safe Clock Monitor Enable bit
  2993                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2994   300001                     	org	3145729
  2995   300001  FF                 	db	255
  2996                           
  2997                           ;Config register CONFIG2L @ 0x300002
  2998                           ;	Master Clear Enable bit
  2999                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3000                           ;	Power-up Timer Enable bit
  3001                           ;	PWRTE = OFF, Power up timer disabled
  3002                           ;	Low-power BOR enable bit
  3003                           ;	LPBOREN = OFF, ULPBOR disabled
  3004                           ;	Brown-out Reset Enable bits
  3005                           ;	BOREN = NOSLP, Brown-out Reset enabled while running, disabled in Sleep; SBOREN is ign
      +                          ored
  3006   300002                     	org	3145730
  3007   300002  BF                 	db	191
  3008                           
  3009                           ;Config register CONFIG2H @ 0x300003
  3010                           ;	Brown Out Reset Voltage selection bits
  3011                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3012                           ;	ZCD Disable bit
  3013                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3014                           ;	PPSLOCK bit One-Way Set Enable bit
  3015                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3016                           ;	Stack Full/Underflow Reset Enable bit
  3017                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3018                           ;	Debugger Enable bit
  3019                           ;	DEBUG = OFF, Background debugger disabled
  3020                           ;	Extended Instruction Set Enable bit
  3021                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3022   300003                     	org	3145731
  3023   300003  FF                 	db	255
  3024                           
  3025                           ;Config register CONFIG3L @ 0x300004
  3026                           ;	WDT Period Select bits
  3027                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3028                           ;	WDT operating mode
  3029                           ;	WDTE = OFF, WDT Disabled
  3030   300004                     	org	3145732
  3031   300004  9F                 	db	159
  3032                           
  3033                           ;Config register CONFIG3H @ 0x300005
  3034                           ;	WDT Window Select bits
  3035                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3036                           ;	WDT input clock selector
  3037                           ;	WDTCCS = SC, Software Control
  3038   300005                     	org	3145733
  3039   300005  FF                 	db	255
  3040                           
  3041                           ;Config register CONFIG4L @ 0x300006
  3042                           ;	Write Protection Block 0
  3043                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3044                           ;	Write Protection Block 1
  3045                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3046                           ;	Write Protection Block 2
  3047                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3048                           ;	Write Protection Block 3
  3049                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3050   300006                     	org	3145734
  3051   300006  FF                 	db	255
  3052                           
  3053                           ;Config register CONFIG4H @ 0x300007
  3054                           ;	Configuration Register Write Protection bit
  3055                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3056                           ;	Boot Block Write Protection bit
  3057                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3058                           ;	Data EEPROM Write Protection bit
  3059                           ;	WRTD = OFF, Data EEPROM not write-protected
  3060                           ;	Scanner Enable bit
  3061                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3062                           ;	Low Voltage Programming Enable bit
  3063                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3064   300007                     	org	3145735
  3065   300007  FF                 	db	255
  3066                           
  3067                           ;Config register CONFIG5L @ 0x300008
  3068                           ;	UserNVM Program Memory Code Protection bit
  3069                           ;	CP = OFF, UserNVM code protection disabled
  3070                           ;	DataNVM Memory Code Protection bit
  3071                           ;	CPD = OFF, DataNVM code protection disabled
  3072   300008                     	org	3145736
  3073   300008  FF                 	db	255
  3074                           
  3075                           ;Config register CONFIG5H @ 0x300009
  3076                           ;	unspecified, using default values
  3077   300009                     	org	3145737
  3078   300009  FF                 	db	255
  3079                           
  3080                           ;Config register CONFIG6L @ 0x30000A
  3081                           ;	Table Read Protection Block 0
  3082                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3083                           ;	Table Read Protection Block 1
  3084                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3085                           ;	Table Read Protection Block 2
  3086                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3087                           ;	Table Read Protection Block 3
  3088                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3089   30000A                     	org	3145738
  3090   30000A  FF                 	db	255
  3091                           
  3092                           ;Config register CONFIG6H @ 0x30000B
  3093                           ;	Boot Block Table Read Protection bit
  3094                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3095   30000B                     	org	3145739
  3096   30000B  FF                 	db	255
  3097                           tosu	equ	0xFFF
  3098                           tosh	equ	0xFFE
  3099                           tosl	equ	0xFFD
  3100                           stkptr	equ	0xFFC
  3101                           pclatu	equ	0xFFB
  3102                           pclath	equ	0xFFA
  3103                           pcl	equ	0xFF9
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           indf0	equ	0xFEF
  3111                           postinc0	equ	0xFEE
  3112                           postdec0	equ	0xFED
  3113                           preinc0	equ	0xFEC
  3114                           plusw0	equ	0xFEB
  3115                           fsr0h	equ	0xFEA
  3116                           fsr0l	equ	0xFE9
  3117                           wreg	equ	0xFE8
  3118                           indf1	equ	0xFE7
  3119                           postinc1	equ	0xFE6
  3120                           postdec1	equ	0xFE5
  3121                           preinc1	equ	0xFE4
  3122                           plusw1	equ	0xFE3
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           bsr	equ	0xFE0
  3126                           indf2	equ	0xFDF
  3127                           postinc2	equ	0xFDE
  3128                           postdec2	equ	0xFDD
  3129                           preinc2	equ	0xFDC
  3130                           plusw2	equ	0xFDB
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), NULL(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> movement_Detect_Interrupt(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), NULL(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _Transmit_MotionData->_EUSART_Write
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     828
                         _Arm_System
                      _Disarm_System
                  _SYSTEM_Initialize
                _Transmit_MotionData
 ---------------------------------------------------------------------------------
 (1) _Transmit_MotionData                                  0     0      0      44
                       _EUSART_Write
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
         _IOCCF2_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Disarm_System                                        0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Arm_System                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
                   i2_TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF2_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCCF5_ISR                                           0     0      0       0
                                NULL *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCCF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCCF2_ISR                                           0     0      0       0
                                NULL *
          _movement_Detect_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _movement_Detect_Interrupt                            0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (8) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Arm_System
   _Disarm_System
     _TMR0_StopTimer
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Transmit_MotionData
     _EUSART_Write
     _EUSART_is_tx_done

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF2_ISR
       NULL(Fake) *
       _movement_Detect_Interrupt *
         _TMR0_StartTimer
     _IOCCF5_ISR
       NULL(Fake) *
       _IOCCF5_DefaultInterruptHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
         i2_TMR0_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      41        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      37       1       58.5%
BITBIGSFRhhhhhl     55      0       0      25        0.0%
BITBIGSFRhhhhhh     33      0       0      22        0.0%
BITBIGSFRhhhhhh     1B      0       0      21        0.0%
BITBIGSFRhhhhhl     16      0       0      30        0.0%
BITBIGSFRlll        15      0       0      39        0.0%
BITBIGSFRhhhhhl      F      0       0      29        0.0%
BITBIGSFRhhhhhh      E      0       0      23        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      38        0.0%
BITBIGSFRlhhh        A      0       0      34        0.0%
BITBIGSFRhhhhhl      8      0       0      27        0.0%
BITBIGSFRlhlh        4      0       0      36        0.0%
BITBIGSFRhhhhhl      3      0       0      28        0.0%
BITBIGSFRlhhl        2      0       0      35        0.0%
BITBIGSFRlhll        2      0       0      37        0.0%
BITBIGSFRhhhhhl      2      0       0      26        0.0%
BITBIGSFRhhhhhh      2      0       0      24        0.0%
BITBIGSFRhhhhl       2      0       0      31        0.0%
BITBIGSFRhhl         1      0       0      32        0.0%
BITBIGSFRhl          1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      40        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 20:54:18 2024

                ?_EUSART_SetRxInterruptHandler 0036                                             l40 0C6E  
                                           l43 0C22                                             l37 0C56  
                                          l140 0CCE                                            l310 0C94  
                                          l150 0CC4                                            l222 0C06  
                                          l128 092A                                            l400 0C82  
                                          l305 0C96                                            l306 0C98  
                                          l307 0CA4                                            l228 0D1E  
                                          l180 0D1A                                            l316 0BE2  
                                          l247 0CBA                                            l415 0A34  
                                          l416 0A4C                                            l451 0CEC  
                                          l419 0A74                                            l283 099A  
                                          l460 0CE2                                            l285 098C  
                                          l454 0D00                                            l391 0A20  
                                          l448 0CF6                                            l457 0CD8  
                                          u510 0A34                                            u511 0A30  
                                          u520 0A44                                            u521 0A40  
                                          u530 0A6C                                            u531 0A68  
                                          u540 0C80                                            u541 0C7A  
                                          u800 097E                                            u801 097A  
                                          u546 0C82                                            u570 0BE2  
                                          u810 098C                                            u571 0BDE  
                                          u811 0988                                            u820 099A  
                                          u821 0996                                            u770 0946  
                                          u771 0942                                            u780 0958  
                                          u781 0954                                            u790 096A  
                                          u791 0966                         ??_EUSART_RxDataHandler 0032  
               ?_EUSART_SetFramingErrorHandler 0036                                            tosl 0FFD  
                                          wreg 0FE8                                           l1510 08CA  
                                         l1504 0D18                                           l1520 08F0  
                                         l1512 08CC                                           l1600 0A24  
                                         l1530 08FE                                           l1522 08F2  
                                         l1514 08EA                                           l1506 0C08  
                                         l1610 0A6C                                           l1602 0A44  
                                         l1460 0CC6                                           l1540 0912  
                                         l1532 0900                                           l1524 08F4  
                                         l1516 08EC                                           l1508 08AC  
                                         l1612 0A70                                           l1604 0A4E  
                                         l1462 0CBC                                           l1542 091E  
                                         l1534 0902                                           l1526 08FA  
                                         l1518 08EE                                           l1550 0BF4  
                                         l1630 0C4A                                           l1606 0A5A  
                                         l1614 0A72                                           l1560 09B8  
                                         l1544 0C58                                           l1536 0904  
                                         l1528 08FC                                           l1552 0BF6  
                                         l1632 0C4E                                           l1624 0C3E  
                                         l1608 0A5C                                           l1616 0C70  
                                         l1720 0934                                           l1650 0C8C  
                                         l1490 0CE4                                           l1570 09D8  
                                         l1562 09C8                                           l1538 0906  
                                         l1554 0C02                                           l1546 0BE4  
                                         l1634 0C52                                           l1626 0C42  
                                         l1730 0958                                           l1722 0936  
                                         l1714 092C                                           l1652 0C90  
                                         l1492 0CF8                                           l1484 0CDA  
                                         l1572 09DC                                           l1564 09CC  
                                         l1556 09A8                                           l1548 0BF0  
                                         l1628 0C46                                           l1660 0BCE  
                                         l1732 095C                                           l1724 0938  
                                         l1716 0930                                           l1654 0C92  
                                         l1486 0CD0                                           l1574 09E8  
                                         l1566 09D0                                           l1558 09AC  
                                         l1478 0CB2                                           l1734 096A  
                                         l1726 0946                                           l1718 0932  
                                         l1592 0D1C                                           l1648 0C84  
                                         l1488 0CEE                                           l1576 09F4  
                                         l1568 09D4                                           l1656 0BC0  
                                         l1736 096E                                           l1728 094A  
                                         l1578 0A1C                                           l1658 0BCC  
                                         l1738 097E                                           l1598 0A24  
                                         _LATA 0F83                                           _LATB 0F84  
                                         _LATC 0F85                                           _PMD0 0EE1  
                                         _PMD1 0EE2                                           _PMD2 0EE3  
                                         _PMD3 0EE4                                           _PMD4 0EE5  
                                         _PMD5 0EE6                                           _WPUA 0F10  
                                         _WPUB 0F18                                           _WPUC 0F20  
                                         _WPUE 0F2D                                           _main 092C  
                              _TMR0_StartTimer 0D24                                           fsr2h 0FDA  
                                         indf2 0FDF                                           fsr2l 0FD9  
                                         btemp 0038              fp__IOCCF5_DefaultInterruptHandler 0000  
             ??_IOCCF5_DefaultInterruptHandler 0032                ?_IOCCF5_DefaultInterruptHandler 0032  
                                         start 00FA                                   ___param_bank 0000  
                                   _Arm_System 0C96                        __end_of_TMR0_Initialize 0C08  
               ??_TMR0_DefaultInterruptHandler 0032                                  ?_EUSART_Write 0032  
                __end_of_OSCILLATOR_Initialize 0C70                                          ?_main 0032  
                                        i2l133 0B6E                                          i2l240 0D0A  
                                        i2l225 0D26                                          i2l137 0B16  
                                        i2l153 0D28                                          i2l250 0CA6  
                                        i2l147 0AE4                                          i2l228 0D22  
                                        i2l252 0CB0                                          i2l244 0B44  
                                        i2l157 0B84                                          i2l422 0AAE  
                                        i2l190 00AC                                          i2l159 0B98  
                                        i2l432 08AA                                          i2l425 0AB2  
                                        i2l185 0040                                          i2l442 0D10  
                                        i2l194 00E6                                          i2l187 0064  
                                        i2l195 00E6                                          i2l436 0BBE  
                                        i2l445 0D16                                          i2l439 0D2A  
                                        _OSCEN 0EDC                                          _TMR0H 0FD4  
                                        _TMR0L 0FD3                                          _TRISA 0F88  
                                        _TRISB 0F89                                          _TRISC 0F8A  
                                        _RXPPS 0EB5                      ?_TMR0_SetInterruptHandler 0036  
                   ?_movement_Detect_Interrupt 0032                               __end_of_TMR0_ISR 0D0C  
                      __end_of_PIN_MANAGER_IOC 0B70                                          pclath 0FFA  
                                        pclatu 0FFB                                          ttemp5 0039  
                                        ttemp6 003C                                          ttemp7 0040  
                                        status 0FD8                                          wtemp8 0039  
                              __initialization 0C24                                   __end_of_main 09A8  
                               ??_EUSART_Write 0036                    ?_INTERRUPT_InterruptManager 0032  
               ??_EUSART_SetRxInterruptHandler 0038                                         ??_main 0038  
                                __activetblptr 0002                        _IOCCF2_InterruptHandler 0030  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 0D2C  
          ??_EUSART_DefaultFramingErrorHandler 0032             ?_EUSART_DefaultFramingErrorHandler 0032  
            _EUSART_DefaultFramingErrorHandler 0D2A                        __end_of_TMR0_StartTimer 0D28  
                   _EUSART_OverrunErrorHandler 0024                                         _ANSELA 0F11  
                                       _ANSELB 0F19                                         _ANSELC 0F21  
                                       _T0CON0 0FD5                                         _T0CON1 0FD6  
                                       _RC1REG 0F99                                         _RC1STA 0F9D  
                                       _ODCONA 0F0F                                         _ODCONB 0F17  
                                       _RC6PPS 0EFD                                         _ODCONC 0F1F  
                                       i2l1500 0BB8                                         i2l1502 0BBC  
                                       i2l1620 0D0C                                         i2l1700 004E  
                                       i2l1622 0D12                                         i2l1470 0B8A  
                                       i2l1710 00BA                                         i2l1702 005C  
                                       i2l1456 0D24                                         i2l1472 0B8E  
                                       i2l1464 0B70                                         i2l1640 0B5A  
                                       i2l1480 0CA8                                         i2l1712 00C8  
                                       i2l1704 0072                                         i2l1474 0B92  
                                       i2l1466 0B72                                         i2l1642 0B6A  
                                       i2l1458 0D20                                         i2l1482 0CAC  
                                       i2l1706 0080                                         i2l1468 0B86  
                                       i2l1476 0B94                                         i2l1580 0AE6  
                                       i2l1636 0B46                                         i2l1644 0D02  
                                       i2l1708 008E                                         i2l1494 0B9A  
                                       i2l1670 0AA4                                         i2l1662 0A76  
                                       i2l1582 0AF8                                         i2l1590 0AE0  
                                       i2l1638 0B56                                         i2l1646 0D06  
                                       i2l1496 0BA6                                         i2l1680 0824  
                                       i2l1672 0AA8                                         i2l1664 0A86  
                                       i2l1584 0B12                                         i2l1498 0BA8  
                                       i2l1690 0888                                         i2l1682 083E  
                                       i2l1674 0802                                         i2l1666 0A92  
                                       i2l1586 0AB4                                         i2l1594 0B18  
                                       i2l1692 08A6                                         i2l1684 084C  
                                       i2l1676 080C                                         i2l1668 0A94  
                                       i2l1588 0AC6                                         i2l1596 0B2A  
                                       i2l1686 0856                                         i2l1678 081A  
                                       i2l1694 001A                                         i2l1688 0870  
                                       i2l1696 002A                                         i2l1698 0038  
                                       _INLVLA 0F0D                                         _INLVLB 0F15  
                                       _INLVLC 0F1D                                         _INLVLE 0F2A  
                                       _OSCFRQ 0EDE                                         _TX1REG 0F9A  
                                       _TX1STA 0F9E                            _Transmit_MotionData 0BC0  
                                  ?_Arm_System 0032                            _EUSART_Transmit_ISR 0A76  
                             ?_TMR0_Initialize 0032                                         clear_0 0C2A  
                                       isa$std 0001                           ?_Transmit_MotionData 0032  
                               _PMD_Initialize 0C08                                   __mediumconst 0000  
                                       tblptru 0FF8                          __end_of_TMR0_CallBack 0B46  
     TMR0_SetInterruptHandler@InterruptHandler 0036     IOCCF5_SetInterruptHandler@InterruptHandler 0036  
   IOCCF2_SetInterruptHandler@InterruptHandler 0036                               ?_PIN_MANAGER_IOC 0032  
                        __end_of_Disarm_System 0C96                           ?_EUSART_Transmit_ISR 0032  
                                 ??_IOCCF2_ISR 0032                                   ??_IOCCF5_ISR 0032  
                            _SYSTEM_Initialize 0C3E                                     __accesstop 0060  
                      __end_of__initialization 0C30                             ?_SYSTEM_Initialize 0032  
                                ___rparam_used 0001           __end_of_EUSART_SetTxInterruptHandler 0CDA  
                 _EUSART_SetTxInterruptHandler 0CD0                                 __pcstackCOMRAM 0032  
                          ??_SYSTEM_Initialize 0038                                      ?_TMR0_ISR 0032  
                        ??_Transmit_MotionData 0037                         __end_of_PMD_Initialize 0C24  
                           __end_of_IOCCF2_ISR 0B18                             __end_of_IOCCF5_ISR 0AE6  
                         _eusartRxStatusBuffer 0001                ??_EUSART_SetOverrunErrorHandler 0038  
                             ?_TMR0_StartTimer 0032                      __end_of_SYSTEM_Initialize 0C58  
                        ??_EUSART_Transmit_ISR 0032                           __end_of_EUSART_Write 0A76  
                                   __pnvCOMRAM 0022                  ?_EUSART_SetTxInterruptHandler 0036  
             _EUSART_TxDefaultInterruptHandler 002C               __end_of_TMR0_SetInterruptHandler 0CBC  
                                   ??_TMR0_ISR 0032                   ??_EUSART_DefaultErrorHandler 0032  
       __end_of_IOCCF5_DefaultInterruptHandler 0D2A                 _IOCCF5_DefaultInterruptHandler 0D28  
                              ?_PMD_Initialize 0032                                  _eusartRxCount 001A  
                                      _SP1BRGH 0F9C                                        _SP1BRGL 0F9B  
                                      _OSCCON1 0ED8                                        _OSCCON3 0EDA  
                  ??_movement_Detect_Interrupt 0032                                        i2u43_40 0B84  
                                      i2u50_48 0B30                                        i2u43_41 0B80  
                                      i2u50_49 0B44                                        i2u44_40 0BB8  
                                      i2u60_40 081A                                        i2u44_41 0BB4  
                                      i2u60_41 0816                                        i2u45_40 0AF8  
                                      i2u45_41 0AF4                                        i2u62_40 084C  
                                      i2u61_48 082A                                        i2u70_40 0072  
                                      i2u62_41 0848                                        i2u61_49 083E  
                                      i2u70_41 006E                                        _OSCTUNE 0EDD  
                                      i2u46_48 0AFE                                        i2u47_40 0AC6  
                                      i2u55_40 0B56                                        i2u71_40 0080  
                                      i2u46_49 0B12                                        i2u47_41 0AC2  
                                      i2u55_41 0B52                                        i2u71_41 007C  
                                      i2u64_40 0888                                        i2u63_48 085C  
                                      i2u56_40 0B6A                                        i2u72_40 008E  
                                      i2u64_41 0884                                        i2u63_49 0870  
                                      i2u56_41 0B66                                        i2u72_41 008A  
                                      i2u48_48 0ACC                                        i2u49_40 0B2A  
                                      i2u48_49 0AE0                                        i2u49_41 0B26  
                                      i2u65_48 088E                                        i2u58_40 0A86  
                                      i2u74_40 00BA                                        i2u73_48 0094  
                                      i2u66_40 002A                                        i2u65_49 08A2  
                                      i2u58_41 0A82                                        i2u74_41 00B6  
                                      i2u73_49 00A8                                        i2u66_41 0026  
                                      i2u59_40 0AA4                                        i2u75_40 00C8  
                                      i2u67_40 0038                                        i2u59_41 0AA0  
                                      i2u75_41 00C4                                        i2u67_41 0034  
                                      i2u68_40 004E                                        i2u68_41 004A  
                                      i2u76_48 00CE                                        i2u69_40 005C  
                                      i2u76_49 00E2                                        i2u69_41 0058  
                                      _SLRCONA 0F0E                                        _SLRCONB 0F16  
                                      _SLRCONC 0F1E                               i2_TMR0_StopTimer 0D20  
                     ??_EUSART_SetErrorHandler 0038                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 0800  
                                      __pcinit 0C24                                        __ramtop 0800  
                                      __ptext0 092C                                        __ptext1 0BC0  
                                      __ptext2 0C70                                        __ptext3 0A22  
                                      __ptext4 0C3E                                        __ptext5 0BE4  
                                      __ptext6 0CB2                                        __ptext7 0C08  
                                      __ptext8 08AC                                        __ptext9 0CBC  
                        _OSCILLATOR_Initialize 0C58                       ??_PIN_MANAGER_Initialize 0038  
                                    _IOCCFbits 0F1A                                      _IOCCNbits 0F1B  
                                    _IOCCPbits 0F1C                           end_of_initialization 0C30  
        __end_of_EUSART_SetOverrunErrorHandler 0CEE                  _EUSART_SetOverrunErrorHandler 0CE4  
                                __Lmediumconst 0000                              _EUSART_Initialize 09A8  
                    _movement_Detect_Interrupt 0B70                             ?_EUSART_Initialize 0032  
                                      postinc0 0FEE                                   ??_Arm_System 0036  
                          ??_EUSART_Initialize 0038                 ??_EUSART_SetTxInterruptHandler 0038  
                     _TMR0_SetInterruptHandler 0CB2                                      _TRISCbits 0F8A  
                 ??_IOCCF2_SetInterruptHandler 0038                   ??_IOCCF5_SetInterruptHandler 0038  
                    __end_of_EUSART_Initialize 0A22                             __end_of_Arm_System 0CA6  
                               _TMR0_StopTimer 0D1C                   __end_of_INTERRUPT_Initialize 0D1C  
           __end_of_EUSART_DefaultErrorHandler 0D18                     _EUSART_DefaultErrorHandler 0D12  
                                 _EUSART_Write 0A22                         ?_OSCILLATOR_Initialize 0032  
                          start_initialization 0C24   EUSART_SetRxInterruptHandler@interruptHandler 0036  
 EUSART_SetTxInterruptHandler@interruptHandler 0036                         __end_of_TMR0_StopTimer 0D20  
                               _sensorDebounce 0020                 ?_EUSART_SetOverrunErrorHandler 0036  
                  __end_of_Transmit_MotionData 0BE4                     _EUSART_FramingErrorHandler 0026  
                             ??_PMD_Initialize 0036                         _EUSART_SetErrorHandler 0CF8  
                     __end_ofi2_TMR0_StopTimer 0D24                    __end_of_EUSART_Transmit_ISR 0AB4  
                                  __pbssCOMRAM 0001                     __end_of_EUSART_Receive_ISR 08AC  
             _EUSART_RxDefaultInterruptHandler 002A                          _TMR0_InterruptHandler 0028  
                              ?_TMR0_StopTimer 0032                        _IOCCF5_InterruptHandler 002E  
                 __end_of_EUSART_RxDataHandler 0BC0                         _PIN_MANAGER_Initialize 08AC  
                                    __pintcode 0008                                   _eusartRxHead 001C  
                                 _eusartTxHead 001F                                   _eusartRxTail 001B  
                                 _eusartTxTail 001E                   ??_INTERRUPT_InterruptManager 0032  
                                    _mainFlags 0021                        _eusartTxBufferRemaining 001D  
                                     _BAUD1CON 0F9F                                    __smallconst 0800  
           __end_of_IOCCF2_SetInterruptHandler 0CD0                     _IOCCF2_SetInterruptHandler 0CC6  
           __end_of_IOCCF5_SetInterruptHandler 0CC6                     _IOCCF5_SetInterruptHandler 0CBC  
                                _TMR0_CallBack 0B18                                  _Disarm_System 0C84  
                         _INTERRUPT_Initialize 0D18                                 _eusartRxBuffer 0009  
                            ??_TMR0_Initialize 0038                                 _eusartTxBuffer 0011  
       EUSART_SetErrorHandler@interruptHandler 0036                                       _LATCbits 0F85  
                                     _PIE0bits 0EC2                                       _PIE3bits 0EC5  
                            _eusartRxLastError 0019                     ??_TMR0_SetInterruptHandler 0038  
                                     _PIR0bits 0ECA                ??_EUSART_SetFramingErrorHandler 0038  
                                     _PIR3bits 0ECD                              _EUSART_is_tx_done 0C70  
                                     _TMR0_ISR 0D02           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 0D12            ??_EUSART_DefaultOverrunErrorHandler 0032  
           ?_EUSART_DefaultOverrunErrorHandler 0032              _EUSART_DefaultOverrunErrorHandler 0D0C  
                            ??_PIN_MANAGER_IOC 0032                             ?_EUSART_is_tx_done 0032  
            __end_of_movement_Detect_Interrupt 0B9A                            ??_EUSART_is_tx_done 0036  
                               ?_TMR0_CallBack 0032                                 ?_Disarm_System 0032  
                        ?_INTERRUPT_Initialize 0032                          fp__EUSART_Receive_ISR 0000  
                    __end_of_EUSART_is_tx_done 0C84                                       __Hrparam 0000  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0036  
                          _EUSART_ErrorHandler 0022                              ??_TMR0_StartTimer 0032  
                  ?_EUSART_DefaultErrorHandler 0032                                     _T0CON0bits 0FD5  
                         _EUSART_RxDataHandler 0B9A                                       __ptext10 0CC6  
                                     __ptext11 0C58                                       __ptext20 0D1C  
                                     __ptext12 0D18                                       __ptext21 0C96  
                                     __ptext13 09A8                                       __ptext30 0AE6  
                                     __ptext14 0CD0                                       __ptext31 0B70  
                                     __ptext23 0D02                                       __ptext15 0CDA  
                                     __ptext32 0D24                                       __ptext24 0B18  
                                     __ptext16 0CE4                                       __ptext33 0A76  
                                     __ptext25 0CA6                                       __ptext17 0CEE  
                                     __ptext34 0802                                       __ptext26 0D20  
                                     __ptext18 0CF8                                       __ptext35 0D0C  
                                     __ptext27 0B46                                       __ptext19 0C84  
                                     __ptext36 0D2A                                       __ptext28 0AB4  
                                     __ptext37 0D12                                       __ptext29 0D28  
                                     __ptext38 0B9A                                       __ptext39 0000  
                                   _IOCCF2_ISR 0AE6                                     _IOCCF5_ISR 0AB4  
         __end_of_TMR0_DefaultInterruptHandler 0CB2                   _TMR0_DefaultInterruptHandler 0CA6  
                      ?_EUSART_SetErrorHandler 0036                                     _RC1STAbits 0F9D  
EUSART_SetOverrunErrorHandler@interruptHandler 0036                                       isa$xinst 0000  
                                     int$flags 0038                   fp__movement_Detect_Interrupt 0000  
                            ?i2_TMR0_StopTimer 0032             __end_of_INTERRUPT_InterruptManager 00FA  
                   _INTERRUPT_InterruptManager 0008          __end_of_EUSART_SetFramingErrorHandler 0CF8  
                _EUSART_SetFramingErrorHandler 0CEE                             ??i2_TMR0_StopTimer 0032  
                                   _INTCONbits 0FF2                                ??_TMR0_CallBack 0032  
                        ?_EUSART_RxDataHandler 0032                                ??_Disarm_System 0036  
                       ??_INTERRUPT_Initialize 0036                                       intlevel2 0000  
                             ??_TMR0_StopTimer 0036                         fp__EUSART_Transmit_ISR 0000  
                      ?_PIN_MANAGER_Initialize 0032                 __end_of_EUSART_SetErrorHandler 0D02  
         __end_of_EUSART_SetRxInterruptHandler 0CE4                   _EUSART_SetRxInterruptHandler 0CDA  
              fp__TMR0_DefaultInterruptHandler 0000                  ?_TMR0_DefaultInterruptHandler 0032  
                           _EUSART_Receive_ISR 0802  EUSART_SetFramingErrorHandler@interruptHandler 0036  
                          ?_EUSART_Receive_ISR 0032                  fp__EUSART_DefaultErrorHandler 0000  
                              _TMR0_Initialize 0BE4                    ?_IOCCF2_SetInterruptHandler 0036  
                  ?_IOCCF5_SetInterruptHandler 0036                                     _TX1STAbits 0F9E  
                           EUSART_Write@txData 0036                                    ?_IOCCF2_ISR 0032  
                                  ?_IOCCF5_ISR 0032                 __end_of_PIN_MANAGER_Initialize 092C  
                              _PIN_MANAGER_IOC 0B46                           ??_EUSART_Receive_ISR 0032  
